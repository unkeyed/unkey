"var Component=(()=>{var u=Object.create;var r=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var f=(o,e)=>()=>(e||o((e={exports:{}}).exports,e),e.exports),w=(o,e)=>{for(var t in e)r(o,t,{get:e[t],enumerable:!0})},s=(o,e,t,i)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let a of p(e))!y.call(o,a)&&a!==t&&r(o,a,{get:()=>e[a],enumerable:!(i=m(e,a))||i.enumerable});return o};var b=(o,e,t)=>(t=o!=null?u(g(o)):{},s(e||!o||!o.__esModule?r(t,\"default\",{value:o,enumerable:!0}):t,o)),k=o=>s(r({},\"__esModule\",{value:!0}),o);var d=f((A,l)=>{l.exports=_jsx_runtime});var v={};w(v,{default:()=>h});var n=b(d());function c(o){let e={a:\"a\",blockquote:\"blockquote\",code:\"code\",h3:\"h3\",hr:\"hr\",img:\"img\",p:\"p\",pre:\"pre\",...o.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"Welcome to the Unkey changelog for Decemeber 15th, 2023. The last two weeks have been busy with some core changes to the Unkey product.\"}),`\n`,(0,n.jsx)(e.h3,{id:\"improved-analytics\",children:\"Improved Analytics\"}),`\n`,(0,n.jsx)(e.p,{children:\"Analytics are now more detailed and easier to understand. We added a new chart that shows the number of active keys for your API and allows you to set a timeframe.\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/images/changelog/2023-12-15/verifications.png\",alt:\"Analytics\"})}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/images/changelog/2023-12-15/active-keys.png\",alt:\"Active keys\"})}),`\n`,(0,n.jsx)(e.h3,{id:\"we-moved-to-cloudflare\",children:\"We moved to Cloudflare\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Unkey's API has been on Fly.io since we launched in June. We've been reasonably happy with its performance, but we wanted to move to a more reliable and faster platform. We decided to move to Cloudflare Workers, a serverless platform on Cloudflare's edge network. After this change, Unkey's API runs on 300+ data centers worldwide, making it faster and more reliable. You can check out the new \",(0,n.jsx)(e.a,{href:\"https://github.com/unkeyed/unkey/tree/main/apps/api\",children:\"API code in our repository\"}),\" to see how we made the changes from Go to Typescript using Hono\"]}),`\n`,(0,n.jsx)(e.p,{children:\"Below is a chart of our latency at P95. Can you tell when we moved to CF?\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/images/changelog/2023-12-15/speed.png\",alt:\"P95 results\"})}),`\n`,(0,n.jsx)(e.h3,{id:\"new-billing-page\",children:\"New billing page\"}),`\n`,(0,n.jsx)(e.p,{children:\"We added a brand new billing page to the dashboard. Previously, you could change your plan and see your current usage. Now, you can see your billing history, change your payment method, and see your current billing cycle. My favorite part is that you can now see a projected forecast of your usage for the month and a projected bill.\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{src:\"/images/changelog/2023-12-15/billing.png\",alt:\"Billing page\"})}),`\n`,(0,n.jsx)(e.h3,{id:\"rpc-methods\",children:\"RPC methods\"}),`\n`,(0,n.jsx)(e.p,{children:\"With the move to Cloudflare workers, we decided to move to RPC methods. RPC makes it extremely easy to version our API and follow a standard.\"}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:\"Note: We will continue to support the old API for the next few months. We will send out a deprecation notice before we remove the old API.\"}),`\n`]}),`\n`,(0,n.jsx)(e.p,{children:\"All our RPC methods are now in the format:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-bash\",children:`https://api.unkey.dev/{version}/{service}.{method}\n`})}),`\n`,(0,n.jsx)(e.p,{children:\"Below are a couple of examples of RPC methods: one is a GET request, and the other is a POST request.\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-bash\",children:`curl \"https://api.unkey.dev/v1/keys.getKey?keyId=key_123\" \\\\\n  -H \"Authorization: Bearer <ROOT_KEY>\"\n`})}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-bash\",children:`curl -XPOST \"https://api.unkey.dev/v1/keys.createKey\" \\\\\n  -H \"Authorization: Bearer <ROOT_KEY>\" \\\\\n  -H \"Content-Type: application/json\" \\\\\n  -d '{\"apiId\": \"api_123\", \"name\": \"My Key\"}'\n`})}),`\n`,(0,n.jsx)(e.h3,{id:\"content-you-might-have-missed\",children:\"Content you might have missed\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.a,{href:\"https://unkey.com/blog/uuid-ux\",children:\"UX of UUIDs\"}),\": Andreas wrote an article on the UX of UUIDs and how some minor tweaks can make a big difference in the user experience.\"]})]})}function h(o={}){let{wrapper:e}=o.components||{};return e?(0,n.jsx)(e,{...o,children:(0,n.jsx)(c,{...o})}):c(o)}return k(v);})();\n;return Component;"