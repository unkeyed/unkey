"var Component=(()=>{var u=Object.create;var s=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty;var w=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),k=(n,e)=>{for(var a in e)s(n,a,{get:e[a],enumerable:!0})},r=(n,e,a,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of m(e))!g.call(n,i)&&i!==a&&s(n,i,{get:()=>e[i],enumerable:!(o=y(e,i))||o.enumerable});return n};var b=(n,e,a)=>(a=n!=null?u(p(n)):{},r(e||!n||!n.__esModule?s(a,\"default\",{value:n,enumerable:!0}):a,n)),f=n=>r(s({},\"__esModule\",{value:!0}),n);var d=w((P,h)=>{h.exports=_jsx_runtime});var I={};k(I,{default:()=>c});var t=b(d());function l(n){let e={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",img:\"img\",li:\"li\",p:\"p\",pre:\"pre\",ul:\"ul\",...n.components},{Image:a}=e;return a||v(\"Image\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:\"what-is-unkey\",children:\"What is Unkey?\"}),`\n`,(0,t.jsx)(e.p,{children:\"Unkey provides a way for you to create, manage and revoke API Keys that belong to your API. It's a simple concept, but one that we think is important. We built Unkey to layer it into your API so that you can issue keys, manage them and revoke them as needed. This means we need a simple and great DX and fast response times.\"}),`\n`,(0,t.jsx)(e.h2,{id:\"why-did-we-build-it\",children:\"Why did we build it?\"}),`\n`,(0,t.jsx)(e.p,{children:\"We built Unkey because we were tired of copying and pasting the same API management into a new codebase. Similar to authentication, you can do it yourself, but having a dedicated company that is working on improvements, and worrying about security and latency means you can focus on the business and core features.\"}),`\n`,(0,t.jsx)(e.h2,{id:\"what-are-the-current-features\",children:\"What are the current features?\"}),`\n`,(0,t.jsx)(e.p,{children:\"Unkey provides the following features out of the box:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[`\n`,(0,t.jsx)(e.p,{children:\"An admin dashboard to manage your APIs, issue keys, revoke keys and see usage stats.\"}),`\n`]}),`\n`,(0,t.jsxs)(e.li,{children:[`\n`,(0,t.jsx)(e.p,{children:\"A simple API with SDKs for typescript\"}),`\n`]}),`\n`,(0,t.jsxs)(e.li,{children:[`\n`,(0,t.jsx)(e.p,{children:\"Short-lived keys\"}),`\n`]}),`\n`,(0,t.jsxs)(e.li,{children:[`\n`,(0,t.jsx)(e.p,{children:\"Rate limited keys\"}),`\n`]}),`\n`,(0,t.jsxs)(e.li,{children:[`\n`,(0,t.jsx)(e.p,{children:\"Metadata attached to keys\"}),`\n`]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{id:\"deep-dive-into-the-features\",children:\"Deep dive into the features\"}),`\n`,(0,t.jsx)(e.h3,{id:\"admin-dashboard\",children:\"Admin dashboard\"}),`\n`,(0,t.jsx)(e.p,{children:\"Our admin dashboard gives you access to several features in a simple-to-use interface. You can create new APIs, issue keys, revoke keys and see usage stats. You can also invite other users to your account so that they can manage your APIs.\"}),`\n`,(0,t.jsx)(a,{src:\"/images/blog-images/admin-dashboard.png\",alt:\"Admin dashboard\",width:\"1920\",height:\"1080\"}),`\n`,(0,t.jsx)(e.h3,{id:\"simple-api-with-sdks\",children:\"Simple API with SDKs\"}),`\n`,(0,t.jsx)(e.p,{children:\"We wanted the DX for Unkey to be as simple as possible. We've built a simple API that you can use to create, manage and revoke keys. We wanted to make sure the API was easy to integrate and didn't take engineering time away.\"}),`\n`,(0,t.jsx)(e.p,{children:\"No API is great without SDKs so we built a typescript one and our community also built an Elixir and Python SDK.\"}),`\n`,(0,t.jsx)(e.h3,{id:\"short-lived-keys\",children:\"Short-lived keys\"}),`\n`,(0,t.jsx)(e.p,{children:\"When we started Unkey we wanted the ability to issue a short-lived key but we didn't want to restrict the period. We understand that each use case is different so you can pass us an expiration or select it in the UI.\"}),`\n`,(0,t.jsx)(e.p,{children:\"Once the key expires, we revoke the key and the user can no longer access your content. This is great for audit teams, trials, or payment systems that give you access for some time.\"}),`\n`,(0,t.jsx)(e.h3,{id:\"rate-limited-keys\",children:\"Rate limited keys\"}),`\n`,(0,t.jsx)(e.p,{children:\"Rate limiting is essential to all businesses that have an API. Unkey gives you the ability to set each key to a different rate limit. We handle the rate limiting for you, it's as simple as telling us the total amount of burstable requests, the refill rate, and how quickly they should be refilled.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Once you have the key with the limits, with each request we return the amount the request limit, how many remaining, and the reset time. Once a user hits the rate limit we will return \",(0,t.jsx)(e.code,{children:'json \"valid\": false'}),\" alongside a code \",(0,t.jsx)(e.code,{children:\"RATE_LIMITED\"}),\" if the rate limit has been hit, so you know that this user shouldn't be able to access your endpoints.\"]}),`\n`,(0,t.jsx)(e.h3,{id:\"metadata-attached-to-keys\",children:\"Metadata attached to keys\"}),`\n`,(0,t.jsx)(e.p,{children:\"We wanted to give you the ability to attach metadata to your keys so you can easily make business decisions based on the data instead of having to look up the key in your database. You can include anything that you want to read on the server, for example:\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-json\",children:`{\n  \"billingTier\": \"PRO\",\n  \"trialEnds\": \"2023-06-16T17:16:37.161Z\"\n}\n`})}),`\n`,(0,t.jsx)(e.p,{children:\"This allows you to pull less data from other systems in your infrastructure to make business decisions faster.\"}),`\n`,(0,t.jsx)(e.h2,{id:\"built-with-speed-in-mind\",children:\"Built with speed in mind\"}),`\n`,(0,t.jsx)(e.p,{children:\"Unkey was built to have minimal impact on your API, we have our database in the United States but replicate this into other regions so that we can serve your requests as fast as possible. We have our API distributed across the world so that requests will go to the closest region to your user, process at the closet database, and then return the response. Unkey also automatically caches the key on creation, so that the first request is as fast as the second or third request.\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"On average our requests add less than 40ms to your requests, below are some of the latest requests we are monitoring through \",(0,t.jsx)(e.a,{href:\"https://planetfall.io\",children:\"Planetfall\"})]}),`\n`,(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{src:\"/images/blog-images/unkey-latency.png\",alt:\"Unkey latency\"})})]})}function c(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}function v(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return f(I);})();\n;return Component;"