"var Component=(()=>{var p=Object.create;var o=Object.defineProperty;var m=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var y=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),w=(n,e)=>{for(var r in e)o(n,r,{get:e[r],enumerable:!0})},s=(n,e,r,a)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of u(e))!f.call(n,i)&&i!==r&&o(n,i,{get:()=>e[i],enumerable:!(a=m(e,i))||a.enumerable});return n};var b=(n,e,r)=>(r=n!=null?p(g(n)):{},s(e||!n||!n.__esModule?o(r,\"default\",{value:n,enumerable:!0}):r,n)),k=n=>s(o({},\"__esModule\",{value:!0}),n);var d=y((v,c)=>{c.exports=_jsx_runtime});var j={};w(j,{default:()=>h});var t=b(d());function l(n){let e={a:\"a\",code:\"code\",h2:\"h2\",h3:\"h3\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...n.components},{Image:r}=e;return r||I(\"Image\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:[\"Last May I bought a \",(0,t.jsx)(e.a,{href:\"https://bambulab.com/en-us/a1\",children:\"Bambu Labs A1\"}),\". Mainly as a hobby and to make some parts for some home projects. While browsing for interesting creations from the community on \",(0,t.jsx)(e.a,{href:\"https://makerworld.com/en\",children:\"Makerworld\"}),\", I had the idea of creating myself a web app to store personal projects to reference and save notes and images of the progress.\"]}),`\n`,(0,t.jsx)(e.h2,{id:\"how-i-built-my-project\",children:\"How I built my project\"}),`\n`,(0,t.jsx)(e.p,{children:\"I am a relatively new developer, so planning larger projects like this is a new experience.\"}),`\n`,(0,t.jsx)(e.p,{children:\"To build this project I needed:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Authentication\"}),`\n`,(0,t.jsx)(e.li,{children:\"Database\"}),`\n`,(0,t.jsx)(e.li,{children:\"Web application\"}),`\n`,(0,t.jsx)(e.li,{children:\"Route protection\"}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:\"I went with:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"Auth.js\"}),`\n`,(0,t.jsx)(e.li,{children:\"sqlite db and Drizzle ORM\"}),`\n`,(0,t.jsx)(e.li,{children:\"NextJS\"}),`\n`,(0,t.jsx)(e.li,{children:\"Unkey ratelimit protection\"}),`\n`]}),`\n`,(0,t.jsx)(e.p,{children:\"I started with a basic database schema planning. I found that for me its always a good place to start. It allows me to get an idea of the data and how interaction with that data will happen.\"}),`\n`,(0,t.jsx)(e.h3,{id:\"setup\",children:\"Setup\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Next I gave myself a good starting point to quickly setup and hit the ground running. I found that the faster I can get something working the better for my ADHD.  So I used the \",(0,t.jsx)(e.a,{href:\"https://create.t3.gg/\",children:\"T3 stack\"}),\" to give me a good head start.\"]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-shell\",children:`pnpm create t3-app@latest\n`})}),`\n`,(0,t.jsx)(e.p,{children:\"Options used:\"}),`\n`,(0,t.jsx)(r,{src:\"/images/blog-images/learn-by-building/createt3.png\",alt:\"Using the playground\",width:\"1920\",height:\"1080\"}),`\n`,(0,t.jsx)(e.h3,{id:\"build\",children:\"Build\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"Continuing that trend I added some basic \",(0,t.jsx)(e.a,{href:\"https://ui.shadcn.com/\",children:\"shadcn\"}),` components to get started on the UI.\nIn just a short period of time I had a half decent looking app. But that was the easy part.`]}),`\n`,(0,t.jsxs)(e.p,{children:[\"So UI being functional enough, I started digging into the api/server side of things. I set up the \",(0,t.jsx)(e.code,{children:\"Drizzle\"}),\" schema and \",(0,t.jsx)(e.code,{children:\"tRPC\"}),\" routes. Sure I may have needed the \",(0,t.jsx)(e.code,{children:\"tRPC\"}),\" and \",(0,t.jsx)(e.code,{children:\"Drizzle\"}),` docs open the entire time. But hey, that is what they are for.\nMy first real hurdle was about now. As usual, I was starting to over think the schema and layout and whatever else. keeping on track with a larger project is a challenge for me.`]}),`\n`,(0,t.jsx)(e.p,{children:`When planning out the db schema I started adding more columns than needed. I also added references I would not need making it more complicated than it needed to be. I often have to stop myself from bouncing to another file if an idea pops into my head.\nThis was a good experience as it allowed me to think about self restraint and management. Just telling myself that things are fluid and can be changed later was very helpful. Nothing is perfect on the first draft so building things in a way that allows for changes later is important. For me being flexible is the way forward and not over thinking and getting stuck on a single task.`}),`\n`,(0,t.jsx)(e.h3,{id:\"typescript\",children:\"Typescript\"}),`\n`,(0,t.jsx)(e.p,{children:`I have been working in a Typescript project for about a year now, but because a lot of the code was implemented when I got to Unkey. I often struggled with debugging errors.\nOn this project because I implemented code from start to finish, I got a lot more familiar with debugging typescript errors.`}),`\n`,(0,t.jsxs)(e.p,{children:[\"To make my life a bit easier, I used \",(0,t.jsx)(e.a,{href:\"https://zod.dev/\",children:\"zod\"}),\" to manage the tRPC routes.\"]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-typescript\",children:` getProjectsByCategory: publicProcedure\n    .input(\n      z.object({\n        category: z.string().min(3),\n      }),\n    )\n    .query(async ({ ctx, input }) => {\n      const project = await ctx.db.query.projects.findMany({\n        where: eq(projects.category, input.category.toUpperCase()),\n        orderBy: (projects, { desc }) => [desc(projects.createdAt)],\n        limit: 50,\n        with: { steps: true },\n      });\n      return project;\n    }),\n`})}),`\n`,(0,t.jsxs)(e.p,{children:[\"And on the form side a controlled form element with \",(0,t.jsx)(e.code,{children:\"zod\"}),\" and \",(0,t.jsx)(e.code,{children:\"react-hook-form\"})]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-typescript\",children:`const formSchema = z.object({\n\tprojectName: z.string().min(2).max(50),\n\tcategory: z.string().min(2).max(50),\n\tprojectDescription: z\n\t\t.string()\n\t\t.min(10, { message: \"Must be 10 or more characters long\" })\n\t\t.max(500, { message: \"Must be less than 500 characters long\" }),\n\tprojectImage: z\n\t\t.instanceof(File)\n\t\t.refine(\n\t\t\t(file) => !ACCEPTED_IMAGE_TYPES.includes(file?.type),\n\t\t\t\"Only .jpg, .jpeg and .png formats are supported.\",\n\t\t)\n\t\t.optional(),\n});\n`})}),`\n`,(0,t.jsx)(e.p,{children:\"Keeping my types in check made it easy to track down errors from human error. things like passing the wrong type to routes or incorrect variable names. Just makes less thing I need to worry about once setup so I can focus on the things that need to be done and not tracking down a typo or something.\"}),`\n`,(0,t.jsx)(e.h3,{id:\"ratelimit\",children:\"Ratelimit\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"If I ever want to launch this live I figured it would be a good idea to limit abuse on any of the secured routes. The choice was pretty easy being as I work for a company that has a \",(0,t.jsx)(e.code,{children:\"Ratelimit\"}),\" sdk.\"]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-shell\",children:`pnpm add @unkey/ratelimit\n\n`})}),`\n`,(0,t.jsxs)(e.p,{children:[\"Unkey makes this incredible easy it take a couple of steps to implement. I used the docs as a reference point. \",(0,t.jsx)(e.a,{href:\"https://www.unkey.com/docs/libraries/ts/ratelimit\",children:\"docs\"})]}),`\n`,(0,t.jsx)(e.h3,{id:\"created-ratelimit-procedure\",children:\"Created ratelimit procedure\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-typescript\",children:`export const rateLimitedProcedure = ({\n  limit,\n  duration,\n}: {\n  limit: number;\n  duration: number;\n}) =>\n  protectedProcedure.use(async (opts) => {\n    const unkey = new Ratelimit({\n      rootKey: env.UNKEY_ROOT_KEY,\n      namespace: \\`trpc_\\${opts.path}\\`,\n      limit: limit ?? 3,\n      duration: duration ? \\`\\${duration}s\\` : \\`\\${5}s\\`,\n    });\n\n    const ratelimit = await unkey.limit(opts.ctx.session.user.id);\n\n    if (!ratelimit.success) {\n      throw new TRPCError({\n        code: \"TOO_MANY_REQUESTS\",\n        message: JSON.stringify(ratelimit),\n      });\n    }\n\n    return opts.next({\n      ctx: {\n        ...opts.ctx,\n        remaining: ratelimit.remaining,\n      },\n    });\n  });\n`})}),`\n`,(0,t.jsxs)(e.p,{children:[\"And then used like this on any route you want to \",(0,t.jsx)(e.code,{children:\"ratelimit\"})]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-typescript\",children:` create: rateLimitedProcedure({ limit: 3, duration: 5 })\n    .input(\n      z.object({\n        projectName: z.string().min(3),\n        projectDescription: z.string(),\n        category: z.string(),\n        projectImage: z.string().optional(),\n      }),\n    )\n`})}),`\n`,(0,t.jsxs)(e.p,{children:[\"This is probably what took the longest. My experience is limited with \",(0,t.jsx)(e.code,{children:\"tRPC\"}),\" routes and \",(0,t.jsx)(e.code,{children:\"ratelimiting\"}),\". I was stuck on this for a little while, as I have never really worked with tRPC and ratelimiting on my own. I tried to work through this, but needed to reach out to get help. Just like everyone else I hate bothering people but sometimes the best path forward to reaching out to someone else.\"]}),`\n`,(0,t.jsx)(e.h2,{id:\"conclusion\",children:\"Conclusion\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"In making this project I learned a hell of a lot. I now have a more solid understanding of client/server communications. How to debug and fix \",(0,t.jsx)(e.code,{children:\"Typescript\"}),\" errors more effectively. When to ask for help from someone who has more experience, while docs will get you pretty far there is no substitute for another person to pair with. Big thanks to \",(0,t.jsx)(e.a,{href:\"https://x.com/james_r_perkins\",children:\"James\"}),\" and \",(0,t.jsx)(e.a,{href:\"https://x.com/chronark_\",children:\"Andreas\"}),\" for all the help over the last year. I would like to add more features to this in the future, but for now I have added the example into Unkey's templates page for anyone interested in checking out the code.\"]}),`\n`,(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.strong,{children:\"Example\"}),`\n`,(0,t.jsx)(e.a,{href:\"https://www.unkey.com/templates/unkey-trpc-ratelimit\",children:\"Unkey ratelimiting with TRPC + Drizzle\"})]})]})}function h(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}function I(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return k(j);})();\n;return Component;"