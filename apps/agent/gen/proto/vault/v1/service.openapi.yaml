openapi: 3.1.0
info:
  title: vault.v1
paths:
  /vault.v1.VaultService/Liveness:
    post:
      tags:
        - vault.v1.VaultService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault.v1.LivenessRequest'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.v1.LivenessResponse'
  /vault.v1.VaultService/CreateDEK:
    post:
      tags:
        - vault.v1.VaultService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault.v1.CreateDEKRequest'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.v1.CreateDEKResponse'
  /vault.v1.VaultService/Encrypt:
    post:
      tags:
        - vault.v1.VaultService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault.v1.EncryptRequest'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.v1.EncryptResponse'
  /vault.v1.VaultService/EncryptBulk:
    post:
      tags:
        - vault.v1.VaultService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault.v1.EncryptBulkRequest'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.v1.EncryptBulkResponse'
  /vault.v1.VaultService/Decrypt:
    post:
      tags:
        - vault.v1.VaultService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault.v1.DecryptRequest'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.v1.DecryptResponse'
  /vault.v1.VaultService/ReEncrypt:
    post:
      tags:
        - vault.v1.VaultService
      description: ReEncrypt rec
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault.v1.ReEncryptRequest'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.v1.ReEncryptResponse'
  /vault.v1.VaultService/ReEncryptDEKs:
    post:
      tags:
        - vault.v1.VaultService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/vault.v1.ReEncryptDEKsRequest'
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connect.error'
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/vault.v1.ReEncryptDEKsResponse'
components:
  schemas:
    vault.v1.CreateDEKRequest:
      type: object
      properties:
        keyring:
          type: string
          title: keyring
          additionalProperties: false
      title: CreateDEKRequest
      additionalProperties: false
    vault.v1.CreateDEKResponse:
      type: object
      properties:
        keyId:
          type: string
          title: key_id
          additionalProperties: false
      title: CreateDEKResponse
      additionalProperties: false
    vault.v1.DecryptRequest:
      type: object
      properties:
        keyring:
          type: string
          title: keyring
          additionalProperties: false
        encrypted:
          type: string
          title: encrypted
          additionalProperties: false
      title: DecryptRequest
      additionalProperties: false
    vault.v1.DecryptResponse:
      type: object
      properties:
        plaintext:
          type: string
          title: plaintext
          additionalProperties: false
      title: DecryptResponse
      additionalProperties: false
    vault.v1.EncryptBulkRequest:
      type: object
      properties:
        keyring:
          type: string
          title: keyring
          additionalProperties: false
        data:
          type: array
          items:
            type: string
            title: data
            additionalProperties: false
      title: EncryptBulkRequest
      additionalProperties: false
    vault.v1.EncryptBulkResponse:
      type: object
      properties:
        encrypted:
          type: array
          items:
            $ref: '#/components/schemas/vault.v1.EncryptResponse'
      title: EncryptBulkResponse
      additionalProperties: false
    vault.v1.EncryptRequest:
      type: object
      properties:
        keyring:
          type: string
          title: keyring
          additionalProperties: false
        data:
          type: string
          title: data
          additionalProperties: false
      title: EncryptRequest
      additionalProperties: false
    vault.v1.EncryptResponse:
      type: object
      properties:
        encrypted:
          type: string
          title: encrypted
          additionalProperties: false
        keyId:
          type: string
          title: key_id
          additionalProperties: false
      title: EncryptResponse
      additionalProperties: false
    vault.v1.LivenessRequest:
      type: object
      title: LivenessRequest
      additionalProperties: false
    vault.v1.LivenessResponse:
      type: object
      properties:
        status:
          type: string
          title: status
          additionalProperties: false
      title: LivenessResponse
      additionalProperties: false
    vault.v1.ReEncryptDEKsRequest:
      type: object
      title: ReEncryptDEKsRequest
      additionalProperties: false
    vault.v1.ReEncryptDEKsResponse:
      type: object
      title: ReEncryptDEKsResponse
      additionalProperties: false
    vault.v1.ReEncryptRequest:
      type: object
      properties:
        keyring:
          type: string
          title: keyring
          additionalProperties: false
        encrypted:
          type: string
          title: encrypted
          additionalProperties: false
        keyId:
          type: string
          title: key_id
          additionalProperties: false
          description: Specify the key_id to use for re-encryption. If not provided, the latest will be used
      title: ReEncryptRequest
      additionalProperties: false
    vault.v1.ReEncryptResponse:
      type: object
      properties:
        encrypted:
          type: string
          title: encrypted
          additionalProperties: false
        keyId:
          type: string
          title: key_id
          additionalProperties: false
      title: ReEncryptResponse
      additionalProperties: false
    connect.error:
      type: object
      properties:
        code:
          type: string
          examples:
            - CodeNotFound
          enum:
            - CodeCanceled
            - CodeUnknown
            - CodeInvalidArgument
            - CodeDeadlineExceeded
            - CodeNotFound
            - CodeAlreadyExists
            - CodePermissionDenied
            - CodeResourceExhausted
            - CodeFailedPrecondition
            - CodeAborted
            - CodeOutOfRange
            - CodeInternal
            - CodeUnavailable
            - CodeDataLoss
            - CodeUnauthenticated
          description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
        message:
          type: string
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
        detail:
          $ref: '#/components/schemas/google.protobuf.Any'
      title: Connect Error
      additionalProperties: true
      description: 'Error type returned by Connect: https://connectrpc.com/docs/go/errors/#http-representation'
    google.protobuf.Any:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
          format: binary
        debug:
          type: object
          additionalProperties: true
      additionalProperties: true
      description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
security: []
tags:
  - name: vault.v1.VaultService
externalDocs: {}
