name: Deploy
on:
  push:
    branches: [main]

concurrency:
  group: deploy
  cancel-in-progress: true

jobs:
  test-routes:
    strategy:
      fail-fast: false
      matrix:
        shard: ["1", "2", "3", "4"]
    name: Test API Routes ${{matrix.shard}}/4
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4

      - name: Run containers
        run: docker compose -f ./deployment/docker-compose.yaml up -d

      - name: Install
        uses: ./.github/actions/install
        
      - name: Build
        run: pnpm turbo run build --filter=./apps/api

      - name: Load Schema into MySQL
        run: pnpm drizzle-kit push:mysql
        working-directory: internal/db
        env:
          DRIZZLE_DATABASE_URL: "mysql://unkey:password@localhost:3306/unkey"

      - name: Test Routes
        run: pnpm vitest run -c vitest.routes.ts  --bail=1 --shard=${{matrix.shard}}/4
        working-directory: apps/api
       

     

  preview:
    environment: Preview
    
    runs-on: ubuntu-latest
    name: Preview
    steps:
      - uses: actions/checkout@v4

      - name: Install
        uses: ./.github/actions/install

      - name: Build
        run: pnpm turbo run build --filter='./apps/api'

      - name: Deploy
        run: wrangler deploy --env=preview --var VERSION:$(git rev-parse --short HEAD)
        working-directory: apps/api
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  preview-tests:
    environment: Preview
    needs: preview
    
    name: End to End Test Preview
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install
        uses: ./.github/actions/install
      - name: Build
        run: pnpm turbo run build --filter=./apps/api

      - name: Test
        run: pnpm test:integration
        working-directory: apps/api
        env:
          UNKEY_BASE_URL: https://preview-api.unkey.dev
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

  canary:
    needs:
      - preview-tests
      - test-routes
    environment: Canary
    runs-on: ubuntu-latest
    name: Deploy Canary
    steps:
      - uses: actions/checkout@v4

      - name: Install
        uses: ./.github/actions/install

      - name: Build
        run: pnpm turbo run build --filter='./apps/api'

      - name: Deploy
        run: wrangler deploy --env=canary --var VERSION:$(git rev-parse --short HEAD)
        working-directory: apps/api
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  canary-tests:
    environment: Canary
    needs: canary
    name: End to End Test Canary
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install
        uses: ./.github/actions/install
      - name: Build
        run: pnpm turbo run build --filter=./apps/api

      - name: Test
        run: pnpm test:integration
        working-directory: apps/api
        env:
          UNKEY_BASE_URL: https://canary.unkey.dev
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

  canary-benchmarks:
    environment: Canary
    needs: canary
    strategy:
      fail-fast: false
      matrix:
        region: [
            "us-east-1",
            "us-east-2",
            "us-west-1",
            "us-west-2",
            "ap-south-2",
            "ap-southeast-3",
            "ap-southeast-4",
            "ap-south-1",
            "ap-northeast-3",
            "ap-northeast-2",
            "ap-southeast-1",
            "ap-southeast-2", # sydney
            "ca-central-1", # Canada
            "eu-central-1", # Frankfurt
            "eu-west-2", # London
            "sa-east-1", # Sao Paulo,
          ]
    name: Artillery in ${{ matrix.region }}

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Prepare
        shell: bash
        run: |
          cat <<EOF > .keys.csv
          ${{ secrets.ARTILLERY_KEYS_CSV }}
          EOF
        working-directory: tools/artillery

      - name: Run
        run: npx artillery@latest run-lambda --record --key=${{ secrets.ARTILLERY_CLOUD_KEY }} --region ${{ matrix.region }} --count=5 --target=https://canary.unkey.dev  ./keys.verifyKey.yaml
        working-directory: tools/artillery
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  production-api:
    needs:
      - test-routes
      - canary-tests
      # - canary-benchmarks
    environment: Production
    
    runs-on: ubuntu-latest
    name: Deploy API
    steps:
      - uses: actions/checkout@v4
      - name: Install
        uses: ./.github/actions/install

      - name: Build
        run: pnpm turbo run build --filter='./apps/api'

      - name: Deploy
        run: wrangler deploy --env=production --var VERSION:$(git rev-parse --short HEAD)
        working-directory: apps/api
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  production-logdrain:
    needs:
      - production-api
    environment: Production
    runs-on: ubuntu-latest
    name: Deploy Logdrain
    steps:
      - uses: actions/checkout@v4
      - name: Install
        uses: ./.github/actions/install

      - name: Build
        run: pnpm turbo run build --filter='./apps/logdrain'

      - name: Deploy
        run: wrangler deploy
        working-directory: apps/logdrain
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  deploy-trigger:
    needs: test-routes
    uses: ./.github/workflows/deploy_trigger.yaml

  deploy-enterprise-worker:
    needs: production-api
    uses: ./.github/workflows/deploy_enterprise_workers.yaml
