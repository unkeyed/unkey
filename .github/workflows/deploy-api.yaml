name: Deploy API

on:
  release:
    types:
      - published

concurrency: deploy

jobs:
  build:
    name: Build API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get Version
        run: echo "VERSION=$(git describe --tags --always)" > $GITHUB_ENV

      - name: Get tag
        run: echo "TAG=ghcr.io/${{ github.repository }}:${{env.VERSION}}" > $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to image repository
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: apps/api
          platforms: linux/amd64
          push: true
          tags: ${{ env.TAG }}
          build-args: VERSION=${{env.VERSION}}


  deploy:
    name: Deploy API
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3

      - name: Get tag
        run: echo "TAG=ghcr.io/${{ github.repository }}:$(git describe --tags --always)" > $GITHUB_ENV

      - name: Login to image repository
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Download image
        run: docker pull ${{env.TAG}}

      - name: Deploy preview
        run:  flyctl --app="unkey-api-preview" deploy --image=${{ env.TAG }} --strategy=immediate
        working-directory: apps/api
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Deploy prod
        if: "!github.event.release.prerelease"
        run: flyctl --app="unkey-api-production" deploy --image=${{ env.TAG }} --strategy=canary
        working-directory: apps/api
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
