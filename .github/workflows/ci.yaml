name: Check Pull Request

on:
  pull_request:
    branches: [main]

concurrency: pr-${{ github.event.number }}


jobs:
  docs:
    name: Check Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check for broken links
        run: npx mintlify@latest broken-links
        working-directory: apps/docs


  test_api_worker:
    name: Unit Test API
    runs-on: ubuntu-latest
    services:
         mysql:
           image: mysql:latest
           env:
             MYSQL_ROOT_PASSWORD: root
             MYSQL_DATABASE: unkey
             MYSQL_USER: unkey
             MYSQL_PASSWORD: password
           ports:
             - 3306:3306
           options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '^1.20'

      - name: Run Planetscale Proxy
        run: |
          go install github.com/mattrobenolt/ps-http-sim@latest
          # start the proxy in the background
          ps-http-sim -mysql-dbname=unkey -listen-addr=0.0.0.0 > pscale.logs &

      - name: Install
        uses: ./.github/actions/pnpm

      - name: Install bun
        run:  npm i -g bun

      - name: Load Schema into MySQL
        run: pnpm drizzle-kit push:mysql
        working-directory: internal/db
        env:
          DRIZZLE_DATABASE_URL: 'mysql://unkey:password@localhost:3306/unkey'


      - name: Test
        run: bun test src/routes --coverage --timeout 10000 --rerun-each 3
        working-directory: apps/api
        env:
          DATABASE_HOST: localhost:8080
          DATABASE_USERNAME: unkey
          DATABASE_PASSWORD: password
          DATABASE_NAME: unkey


      - run: cat pscale.logs
        if: always()


  lint:

    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3


      - name: Install
        uses: ./.github/actions/pnpm

      - name: Format
        run: pnpm biome ci .



  test:
    strategy:
      matrix:
        package:
          - "@unkey/billing"
          - "@unkey/hash"
          - "@unkey/keys"
          - "@unkey/api"
          - "@unkey/nextjs"
          - "@unkey/hono"
          - "@unkey/nuxt"

    name: Test ${{matrix.package}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3


      - name: Install
        uses: ./.github/actions/pnpm

      - name: Build
        run: pnpm turbo run build --filter=${{matrix.package}}

      - name: Test
        run: pnpm turbo run test --filter=${{matrix.package}}




  # tinybird:
  #
  #   name: Tinybird CI
  #   concurrency: tinybird
  #   uses: tinybirdco/ci/.github/workflows/ci.yml@v2.4.0
  #   with:
  #     data_project_dir: ./internal/tinybird
  #   secrets:
  #     tb_admin_token: ${{ secrets.TINYBIRD_ADMIN_TOKEN }} # set admin token associated to an account in GitHub secrets
  #     tb_host: https://api.tinybird.co

  build_packages:
    strategy:
      matrix:
        package: ["@unkey/api", "@unkey/nextjs", "@unkey/hono", "@unkey/nuxt"]
    name: Build ${{matrix.package}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3


      - name: Install
        uses: ./.github/actions/pnpm

      - name: Build packages
        run: pnpm turbo run build --filter=${{matrix.package}}




  validate-pr-title:
    permissions:
      pull-requests: write
    name: Validate PR title
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        id: lint_pr_title
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: marocchino/sticky-pull-request-comment@v2
        # When the previous steps fails, the workflow would stop. By adding this
        # condition you can continue the execution with the populated error message.
        if: always() && (steps.lint_pr_title.outputs.error_message != null)
        with:
          header: pr-title-lint-error
          message: |
            Hey there and thank you for opening this pull request! üëãüèº

            We require pull request titles to follow the [Conventional Commits specification](https://www.conventionalcommits.org/en/v1.0.0/) and it looks like your proposed title needs to be adjusted.
            Here is an example:
            ```
            <type>[optional scope]: <description>
            fix: I fixed something for Unkey
            ```

            Details:

            ```
            ${{ steps.lint_pr_title.outputs.error_message }}
            ```

      # Delete a previous comment when the issue has been resolved
      - if: ${{ steps.lint_pr_title.outputs.error_message == null }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: pr-title-lint-error
          message: |
            Thank you for following the naming conventions for pull request titles! üôè
