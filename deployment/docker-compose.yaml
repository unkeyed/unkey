name: unkey

services:
  mysql:
    container_name: mysql
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: unkey
      MYSQL_USER: unkey
      MYSQL_PASSWORD: password
    command: ["--max_connections=1000"]
    ports:
      - 3306:3306
    volumes:
      - mysql:/var/lib/mysql
  planetscale:
    container_name: planetscale
    image: ghcr.io/mattrobenolt/ps-http-sim:latest
    command:
      [
        "-listen-port=3900",
        "-mysql-dbname=unkey",
        "-mysql-addr=mysql",
        "-mysql-max-rows=100000",
        "-mysql-idle-timeout=1s",
      ]
    depends_on:
      - mysql
    ports:
      - 3900:3900
  apiv2_lb:
    container_name: apiv2_lb
    image: nginx:latest
    volumes:
      - ./nginx.apiv2.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - apiv2
    ports:
      - 7070:7070

  apiv2:
    deploy:
      replicas: 3
      endpoint_mode: vip
    command: ["api"]
    build:
      context: ../go
      dockerfile: ./Dockerfile
    depends_on:
      - mysql
      - redis
      - clickhouse
      - tempo
    environment:
      UNKEY_HTTP_PORT: 7070
      UNKEY_CLUSTER: true
      UNKEY_CLUSTER_GOSSIP_PORT: 9090
      UNKEY_CLUSTER_RPC_PORT: 9091
      # UNKEY_CLUSTER_ADVERTISE_ADDR_STATIC: "${HOSTNAME}"
      UNKEY_CLUSTER_DISCOVERY_REDIS_URL: "redis://redis:6379"
      UNKEY_DATABASE_PRIMARY_DSN: "mysql://unkey:password@tcp(mysql:3900)/unkey?parseTime=true"
      UNKEY_CLICKHOUSE_URL: "clickhouse://default:password@clickhouse:9000"
      UNKEY_OTEL_OTLP_ENDPOINT: "otel-collector:4318" # Point directly to Tempo

  redis:
    image: redis:latest
    ports:
      - 6379:6379

  agent:
    command: ["/usr/local/bin/unkey", "agent", "--config", "config.docker.json"]
    build:
      context: ../apps/agent
      dockerfile: ./Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - s3
      - clickhouse
    environment:
      PORT: 8080
      SERF_PORT: 9090
      RPC_PORT: 9095
      AUTH_TOKEN: "agent-auth-secret"
      VAULT_S3_URL: "http://s3:3902"
      VAULT_S3_BUCKET: "vault"
      VAULT_S3_ACCESS_KEY_ID: "minio_root_user"
      VAULT_S3_ACCESS_KEY_SECRET: "minio_root_password"
      VAULT_MASTER_KEYS: "Ch9rZWtfMmdqMFBJdVhac1NSa0ZhNE5mOWlLSnBHenFPENTt7an5MRogENt9Si6wms4pQ2XIvqNSIgNpaBenJmXgcInhu6Nfv2U="
      CLICKHOUSE_URL: "clickhouse://default:password@clickhouse:9000"

  chproxy:
    build:
      context: ../apps/chproxy
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
    depends_on:
      - clickhouse
    environment:
      PORT: 7123
      CLICKHOUSE_URL: http://default:password@clickhouse:8123
      BASIC_AUTH: proxy:password
    ports:
      - "7123:7123"
  clickhouse:
    image: bitnami/clickhouse:latest
    container_name: clickhouse
    environment:
      CLICKHOUSE_ADMIN_USER: default
      CLICKHOUSE_ADMIN_PASSWORD: password
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse:/bitnami/clickhouse

  clickhouse_migrator:
    build:
      context: ../internal/clickhouse
      dockerfile: ./Dockerfile
    depends_on:
      - clickhouse

  s3:
    container_name: s3
    image: bitnami/minio:latest
    ports:
      - 3902:3902
      - 2903:2903
    environment:
      MINIO_ROOT_USER: minio_root_user
      MINIO_ROOT_PASSWORD: minio_root_password
      MINIO_API_PORT_NUMBER: 3902
      MINIO_CONSOLE_PORT_NUMBER: 3903
    volumes:
      - s3:/data

  api:
    build:
      context: ..
      dockerfile: ./apps/api/Dockerfile.dev
    ports:
      - 8787:8787
    command:
      [
        "pnpm",
        "wrangler",
        "dev",
        "--ip=0.0.0.0",
        "--var=VERSION:1",
        "--var=DATABASE_HOST:planetscale:3900",
        "--var=DATABASE_USERNAME:unkey",
        "--var=DATABASE_PASSWORD:password",
        "--var=AGENT_URL:http://agent:8080",
        "--var=AGENT_TOKEN:agent-auth-secret",
        "--var=EMIT_METRICS_LOGS:false",
        "--var=SYNC_RATELIMIT_ON_NO_DATA:1.0",
        "--var=CLICKHOUSE_URL:http://default:password@clickhouse:8123",
        "--var=CLICKHOUSE_INSERT_URL:http://proxy:password@chproxy:7123",
      ]

    depends_on:
      - planetscale
      - agent
      - clickhouse
      - chproxy
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4318:4318" # OTLP HTTP
    depends_on:
      - prometheus
      - tempo
      - loki
      - grafana
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/config.yaml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"
      - "--web.enable-remote-write-receiver" # Add this flag
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/config.yaml:/etc/prometheus/config.yaml
      - prometheus:/prometheus

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana:/var/lib/grafana

  # Tempo for distributed tracing
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./tempo/config.yaml:/etc/tempo.yaml
      - tempo:/tmp/tempo
    ports:
      - "3200:3200" # tempo

  # Loki for logs
  loki:
    container_name: loki
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - ./loki/config.yaml:/etc/loki/config.yaml

volumes:
  mysql:
  grafana:
  tempo:
  loki:
  clickhouse:
  clickhouse-keeper:
  s3:
  prometheus:
