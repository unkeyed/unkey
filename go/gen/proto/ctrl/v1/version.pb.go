// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/ctrl/v1/version.proto

package ctrlv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Version status enum
type VersionStatus int32

const (
	VersionStatus_VERSION_STATUS_UNSPECIFIED VersionStatus = 0
	VersionStatus_VERSION_STATUS_PENDING     VersionStatus = 1
	VersionStatus_VERSION_STATUS_BUILDING    VersionStatus = 2
	VersionStatus_VERSION_STATUS_DEPLOYING   VersionStatus = 3
	VersionStatus_VERSION_STATUS_ACTIVE      VersionStatus = 4
	VersionStatus_VERSION_STATUS_FAILED      VersionStatus = 5
	VersionStatus_VERSION_STATUS_ARCHIVED    VersionStatus = 6
)

// Enum value maps for VersionStatus.
var (
	VersionStatus_name = map[int32]string{
		0: "VERSION_STATUS_UNSPECIFIED",
		1: "VERSION_STATUS_PENDING",
		2: "VERSION_STATUS_BUILDING",
		3: "VERSION_STATUS_DEPLOYING",
		4: "VERSION_STATUS_ACTIVE",
		5: "VERSION_STATUS_FAILED",
		6: "VERSION_STATUS_ARCHIVED",
	}
	VersionStatus_value = map[string]int32{
		"VERSION_STATUS_UNSPECIFIED": 0,
		"VERSION_STATUS_PENDING":     1,
		"VERSION_STATUS_BUILDING":    2,
		"VERSION_STATUS_DEPLOYING":   3,
		"VERSION_STATUS_ACTIVE":      4,
		"VERSION_STATUS_FAILED":      5,
		"VERSION_STATUS_ARCHIVED":    6,
	}
)

func (x VersionStatus) Enum() *VersionStatus {
	p := new(VersionStatus)
	*p = x
	return p
}

func (x VersionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VersionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ctrl_v1_version_proto_enumTypes[0].Descriptor()
}

func (VersionStatus) Type() protoreflect.EnumType {
	return &file_proto_ctrl_v1_version_proto_enumTypes[0]
}

func (x VersionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VersionStatus.Descriptor instead.
func (VersionStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_ctrl_v1_version_proto_rawDescGZIP(), []int{0}
}

// Source type for version creation
type SourceType int32

const (
	SourceType_SOURCE_TYPE_UNSPECIFIED SourceType = 0
	SourceType_SOURCE_TYPE_GIT         SourceType = 1
	SourceType_SOURCE_TYPE_CLI_UPLOAD  SourceType = 2
)

// Enum value maps for SourceType.
var (
	SourceType_name = map[int32]string{
		0: "SOURCE_TYPE_UNSPECIFIED",
		1: "SOURCE_TYPE_GIT",
		2: "SOURCE_TYPE_CLI_UPLOAD",
	}
	SourceType_value = map[string]int32{
		"SOURCE_TYPE_UNSPECIFIED": 0,
		"SOURCE_TYPE_GIT":         1,
		"SOURCE_TYPE_CLI_UPLOAD":  2,
	}
)

func (x SourceType) Enum() *SourceType {
	p := new(SourceType)
	*p = x
	return p
}

func (x SourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ctrl_v1_version_proto_enumTypes[1].Descriptor()
}

func (SourceType) Type() protoreflect.EnumType {
	return &file_proto_ctrl_v1_version_proto_enumTypes[1]
}

func (x SourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SourceType.Descriptor instead.
func (SourceType) EnumDescriptor() ([]byte, []int) {
	return file_proto_ctrl_v1_version_proto_rawDescGZIP(), []int{1}
}

type CreateVersionRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceId string                 `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	ProjectId   string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Branch      string                 `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
	// Source information
	SourceType   SourceType `protobuf:"varint,4,opt,name=source_type,json=sourceType,proto3,enum=ctrl.v1.SourceType" json:"source_type,omitempty"`
	GitCommitSha string     `protobuf:"bytes,5,opt,name=git_commit_sha,json=gitCommitSha,proto3" json:"git_commit_sha,omitempty"` // For git sources
	UploadUrl    string     `protobuf:"bytes,6,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"`            // Request pre-signed URL for CLI uploads
	// Optional environment override (defaults based on branch)
	EnvironmentId string `protobuf:"bytes,7,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVersionRequest) Reset() {
	*x = CreateVersionRequest{}
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVersionRequest) ProtoMessage() {}

func (x *CreateVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVersionRequest.ProtoReflect.Descriptor instead.
func (*CreateVersionRequest) Descriptor() ([]byte, []int) {
	return file_proto_ctrl_v1_version_proto_rawDescGZIP(), []int{0}
}

func (x *CreateVersionRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *CreateVersionRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateVersionRequest) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *CreateVersionRequest) GetSourceType() SourceType {
	if x != nil {
		return x.SourceType
	}
	return SourceType_SOURCE_TYPE_UNSPECIFIED
}

func (x *CreateVersionRequest) GetGitCommitSha() string {
	if x != nil {
		return x.GitCommitSha
	}
	return ""
}

func (x *CreateVersionRequest) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

func (x *CreateVersionRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

type CreateVersionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VersionId     string                 `protobuf:"bytes,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	UploadUrl     string                 `protobuf:"bytes,2,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"` // Pre-signed S3 URL for CLI uploads
	Status        VersionStatus          `protobuf:"varint,3,opt,name=status,proto3,enum=ctrl.v1.VersionStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVersionResponse) Reset() {
	*x = CreateVersionResponse{}
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVersionResponse) ProtoMessage() {}

func (x *CreateVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVersionResponse.ProtoReflect.Descriptor instead.
func (*CreateVersionResponse) Descriptor() ([]byte, []int) {
	return file_proto_ctrl_v1_version_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVersionResponse) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *CreateVersionResponse) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

func (x *CreateVersionResponse) GetStatus() VersionStatus {
	if x != nil {
		return x.Status
	}
	return VersionStatus_VERSION_STATUS_UNSPECIFIED
}

type GetVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VersionId     string                 `protobuf:"bytes,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_proto_ctrl_v1_version_proto_rawDescGZIP(), []int{2}
}

func (x *GetVersionRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

type GetVersionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       *Version               `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionResponse) Reset() {
	*x = GetVersionResponse{}
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionResponse) ProtoMessage() {}

func (x *GetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionResponse.ProtoReflect.Descriptor instead.
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return file_proto_ctrl_v1_version_proto_rawDescGZIP(), []int{3}
}

func (x *GetVersionResponse) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

type ListVersionsRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceId string                 `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	ProjectId   string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Filters
	EnvironmentId string        `protobuf:"bytes,3,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	Branch        string        `protobuf:"bytes,4,opt,name=branch,proto3" json:"branch,omitempty"`
	Status        VersionStatus `protobuf:"varint,5,opt,name=status,proto3,enum=ctrl.v1.VersionStatus" json:"status,omitempty"`
	// Pagination
	PageSize      int32  `protobuf:"varint,10,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string `protobuf:"bytes,11,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVersionsRequest) Reset() {
	*x = ListVersionsRequest{}
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVersionsRequest) ProtoMessage() {}

func (x *ListVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListVersionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_ctrl_v1_version_proto_rawDescGZIP(), []int{4}
}

func (x *ListVersionsRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *ListVersionsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListVersionsRequest) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *ListVersionsRequest) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *ListVersionsRequest) GetStatus() VersionStatus {
	if x != nil {
		return x.Status
	}
	return VersionStatus_VERSION_STATUS_UNSPECIFIED
}

func (x *ListVersionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListVersionsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListVersionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Versions      []*Version             `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVersionsResponse) Reset() {
	*x = ListVersionsResponse{}
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVersionsResponse) ProtoMessage() {}

func (x *ListVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListVersionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_ctrl_v1_version_proto_rawDescGZIP(), []int{5}
}

func (x *ListVersionsResponse) GetVersions() []*Version {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *ListVersionsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListVersionsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type Version struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkspaceId   string                 `protobuf:"bytes,2,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	ProjectId     string                 `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	EnvironmentId string                 `protobuf:"bytes,4,opt,name=environment_id,json=environmentId,proto3" json:"environment_id,omitempty"`
	// Source information
	GitCommitSha string `protobuf:"bytes,5,opt,name=git_commit_sha,json=gitCommitSha,proto3" json:"git_commit_sha,omitempty"`
	GitBranch    string `protobuf:"bytes,6,opt,name=git_branch,json=gitBranch,proto3" json:"git_branch,omitempty"`
	// Status and lifecycle
	Status       VersionStatus `protobuf:"varint,7,opt,name=status,proto3,enum=ctrl.v1.VersionStatus" json:"status,omitempty"`
	ErrorMessage string        `protobuf:"bytes,8,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // For failed versions
	// Configuration snapshot (resolved at creation time)
	EnvironmentVariables map[string]string `protobuf:"bytes,9,rep,name=environment_variables,json=environmentVariables,proto3" json:"environment_variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Topology configuration
	Topology *Topology `protobuf:"bytes,10,opt,name=topology,proto3" json:"topology,omitempty"`
	// Timestamps
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Associated hostnames for this version
	Hostnames []string `protobuf:"bytes,13,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	// Build information
	RootfsImageId string `protobuf:"bytes,14,opt,name=rootfs_image_id,json=rootfsImageId,proto3" json:"rootfs_image_id,omitempty"`
	BuildId       string `protobuf:"bytes,15,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_proto_ctrl_v1_version_proto_rawDescGZIP(), []int{6}
}

func (x *Version) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Version) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *Version) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Version) GetEnvironmentId() string {
	if x != nil {
		return x.EnvironmentId
	}
	return ""
}

func (x *Version) GetGitCommitSha() string {
	if x != nil {
		return x.GitCommitSha
	}
	return ""
}

func (x *Version) GetGitBranch() string {
	if x != nil {
		return x.GitBranch
	}
	return ""
}

func (x *Version) GetStatus() VersionStatus {
	if x != nil {
		return x.Status
	}
	return VersionStatus_VERSION_STATUS_UNSPECIFIED
}

func (x *Version) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *Version) GetEnvironmentVariables() map[string]string {
	if x != nil {
		return x.EnvironmentVariables
	}
	return nil
}

func (x *Version) GetTopology() *Topology {
	if x != nil {
		return x.Topology
	}
	return nil
}

func (x *Version) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Version) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Version) GetHostnames() []string {
	if x != nil {
		return x.Hostnames
	}
	return nil
}

func (x *Version) GetRootfsImageId() string {
	if x != nil {
		return x.RootfsImageId
	}
	return ""
}

func (x *Version) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

type Topology struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuMillicores int32                  `protobuf:"varint,1,opt,name=cpu_millicores,json=cpuMillicores,proto3" json:"cpu_millicores,omitempty"`
	MemoryMb      int32                  `protobuf:"varint,2,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	// Regional configuration
	Regions []*RegionalConfig `protobuf:"bytes,3,rep,name=regions,proto3" json:"regions,omitempty"`
	// Runtime settings
	IdleTimeoutSeconds int32  `protobuf:"varint,4,opt,name=idle_timeout_seconds,json=idleTimeoutSeconds,proto3" json:"idle_timeout_seconds,omitempty"` // 0 means no timeout
	HealthCheckPath    string `protobuf:"bytes,5,opt,name=health_check_path,json=healthCheckPath,proto3" json:"health_check_path,omitempty"`
	Port               int32  `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Topology) Reset() {
	*x = Topology{}
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Topology) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topology) ProtoMessage() {}

func (x *Topology) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topology.ProtoReflect.Descriptor instead.
func (*Topology) Descriptor() ([]byte, []int) {
	return file_proto_ctrl_v1_version_proto_rawDescGZIP(), []int{7}
}

func (x *Topology) GetCpuMillicores() int32 {
	if x != nil {
		return x.CpuMillicores
	}
	return 0
}

func (x *Topology) GetMemoryMb() int32 {
	if x != nil {
		return x.MemoryMb
	}
	return 0
}

func (x *Topology) GetRegions() []*RegionalConfig {
	if x != nil {
		return x.Regions
	}
	return nil
}

func (x *Topology) GetIdleTimeoutSeconds() int32 {
	if x != nil {
		return x.IdleTimeoutSeconds
	}
	return 0
}

func (x *Topology) GetHealthCheckPath() string {
	if x != nil {
		return x.HealthCheckPath
	}
	return ""
}

func (x *Topology) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type RegionalConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	MinInstances  int32                  `protobuf:"varint,2,opt,name=min_instances,json=minInstances,proto3" json:"min_instances,omitempty"`
	MaxInstances  int32                  `protobuf:"varint,3,opt,name=max_instances,json=maxInstances,proto3" json:"max_instances,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegionalConfig) Reset() {
	*x = RegionalConfig{}
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegionalConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionalConfig) ProtoMessage() {}

func (x *RegionalConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_ctrl_v1_version_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionalConfig.ProtoReflect.Descriptor instead.
func (*RegionalConfig) Descriptor() ([]byte, []int) {
	return file_proto_ctrl_v1_version_proto_rawDescGZIP(), []int{8}
}

func (x *RegionalConfig) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *RegionalConfig) GetMinInstances() int32 {
	if x != nil {
		return x.MinInstances
	}
	return 0
}

func (x *RegionalConfig) GetMaxInstances() int32 {
	if x != nil {
		return x.MaxInstances
	}
	return 0
}

var File_proto_ctrl_v1_version_proto protoreflect.FileDescriptor

const file_proto_ctrl_v1_version_proto_rawDesc = "" +
	"\n" +
	"\x1bproto/ctrl/v1/version.proto\x12\actrl.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x92\x02\n" +
	"\x14CreateVersionRequest\x12!\n" +
	"\fworkspace_id\x18\x01 \x01(\tR\vworkspaceId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\x12\x16\n" +
	"\x06branch\x18\x03 \x01(\tR\x06branch\x124\n" +
	"\vsource_type\x18\x04 \x01(\x0e2\x13.ctrl.v1.SourceTypeR\n" +
	"sourceType\x12$\n" +
	"\x0egit_commit_sha\x18\x05 \x01(\tR\fgitCommitSha\x12\x1d\n" +
	"\n" +
	"upload_url\x18\x06 \x01(\tR\tuploadUrl\x12%\n" +
	"\x0eenvironment_id\x18\a \x01(\tR\renvironmentId\"\x85\x01\n" +
	"\x15CreateVersionResponse\x12\x1d\n" +
	"\n" +
	"version_id\x18\x01 \x01(\tR\tversionId\x12\x1d\n" +
	"\n" +
	"upload_url\x18\x02 \x01(\tR\tuploadUrl\x12.\n" +
	"\x06status\x18\x03 \x01(\x0e2\x16.ctrl.v1.VersionStatusR\x06status\"2\n" +
	"\x11GetVersionRequest\x12\x1d\n" +
	"\n" +
	"version_id\x18\x01 \x01(\tR\tversionId\"@\n" +
	"\x12GetVersionResponse\x12*\n" +
	"\aversion\x18\x01 \x01(\v2\x10.ctrl.v1.VersionR\aversion\"\x82\x02\n" +
	"\x13ListVersionsRequest\x12!\n" +
	"\fworkspace_id\x18\x01 \x01(\tR\vworkspaceId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\x12%\n" +
	"\x0eenvironment_id\x18\x03 \x01(\tR\renvironmentId\x12\x16\n" +
	"\x06branch\x18\x04 \x01(\tR\x06branch\x12.\n" +
	"\x06status\x18\x05 \x01(\x0e2\x16.ctrl.v1.VersionStatusR\x06status\x12\x1b\n" +
	"\tpage_size\x18\n" +
	" \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\v \x01(\tR\tpageToken\"\x8d\x01\n" +
	"\x14ListVersionsResponse\x12,\n" +
	"\bversions\x18\x01 \x03(\v2\x10.ctrl.v1.VersionR\bversions\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\xcc\x05\n" +
	"\aVersion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fworkspace_id\x18\x02 \x01(\tR\vworkspaceId\x12\x1d\n" +
	"\n" +
	"project_id\x18\x03 \x01(\tR\tprojectId\x12%\n" +
	"\x0eenvironment_id\x18\x04 \x01(\tR\renvironmentId\x12$\n" +
	"\x0egit_commit_sha\x18\x05 \x01(\tR\fgitCommitSha\x12\x1d\n" +
	"\n" +
	"git_branch\x18\x06 \x01(\tR\tgitBranch\x12.\n" +
	"\x06status\x18\a \x01(\x0e2\x16.ctrl.v1.VersionStatusR\x06status\x12#\n" +
	"\rerror_message\x18\b \x01(\tR\ferrorMessage\x12_\n" +
	"\x15environment_variables\x18\t \x03(\v2*.ctrl.v1.Version.EnvironmentVariablesEntryR\x14environmentVariables\x12-\n" +
	"\btopology\x18\n" +
	" \x01(\v2\x11.ctrl.v1.TopologyR\btopology\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1c\n" +
	"\thostnames\x18\r \x03(\tR\thostnames\x12&\n" +
	"\x0frootfs_image_id\x18\x0e \x01(\tR\rrootfsImageId\x12\x19\n" +
	"\bbuild_id\x18\x0f \x01(\tR\abuildId\x1aG\n" +
	"\x19EnvironmentVariablesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf3\x01\n" +
	"\bTopology\x12%\n" +
	"\x0ecpu_millicores\x18\x01 \x01(\x05R\rcpuMillicores\x12\x1b\n" +
	"\tmemory_mb\x18\x02 \x01(\x05R\bmemoryMb\x121\n" +
	"\aregions\x18\x03 \x03(\v2\x17.ctrl.v1.RegionalConfigR\aregions\x120\n" +
	"\x14idle_timeout_seconds\x18\x04 \x01(\x05R\x12idleTimeoutSeconds\x12*\n" +
	"\x11health_check_path\x18\x05 \x01(\tR\x0fhealthCheckPath\x12\x12\n" +
	"\x04port\x18\x06 \x01(\x05R\x04port\"r\n" +
	"\x0eRegionalConfig\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\x12#\n" +
	"\rmin_instances\x18\x02 \x01(\x05R\fminInstances\x12#\n" +
	"\rmax_instances\x18\x03 \x01(\x05R\fmaxInstances*\xd9\x01\n" +
	"\rVersionStatus\x12\x1e\n" +
	"\x1aVERSION_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16VERSION_STATUS_PENDING\x10\x01\x12\x1b\n" +
	"\x17VERSION_STATUS_BUILDING\x10\x02\x12\x1c\n" +
	"\x18VERSION_STATUS_DEPLOYING\x10\x03\x12\x19\n" +
	"\x15VERSION_STATUS_ACTIVE\x10\x04\x12\x19\n" +
	"\x15VERSION_STATUS_FAILED\x10\x05\x12\x1b\n" +
	"\x17VERSION_STATUS_ARCHIVED\x10\x06*Z\n" +
	"\n" +
	"SourceType\x12\x1b\n" +
	"\x17SOURCE_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fSOURCE_TYPE_GIT\x10\x01\x12\x1a\n" +
	"\x16SOURCE_TYPE_CLI_UPLOAD\x10\x022\xfa\x01\n" +
	"\x0eVersionService\x12P\n" +
	"\rCreateVersion\x12\x1d.ctrl.v1.CreateVersionRequest\x1a\x1e.ctrl.v1.CreateVersionResponse\"\x00\x12G\n" +
	"\n" +
	"GetVersion\x12\x1a.ctrl.v1.GetVersionRequest\x1a\x1b.ctrl.v1.GetVersionResponse\"\x00\x12M\n" +
	"\fListVersions\x12\x1c.ctrl.v1.ListVersionsRequest\x1a\x1d.ctrl.v1.ListVersionsResponse\"\x00B6Z4github.com/unkeyed/unkey/go/gen/proto/ctrl/v1;ctrlv1b\x06proto3"

var (
	file_proto_ctrl_v1_version_proto_rawDescOnce sync.Once
	file_proto_ctrl_v1_version_proto_rawDescData []byte
)

func file_proto_ctrl_v1_version_proto_rawDescGZIP() []byte {
	file_proto_ctrl_v1_version_proto_rawDescOnce.Do(func() {
		file_proto_ctrl_v1_version_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_ctrl_v1_version_proto_rawDesc), len(file_proto_ctrl_v1_version_proto_rawDesc)))
	})
	return file_proto_ctrl_v1_version_proto_rawDescData
}

var file_proto_ctrl_v1_version_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_ctrl_v1_version_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_ctrl_v1_version_proto_goTypes = []any{
	(VersionStatus)(0),            // 0: ctrl.v1.VersionStatus
	(SourceType)(0),               // 1: ctrl.v1.SourceType
	(*CreateVersionRequest)(nil),  // 2: ctrl.v1.CreateVersionRequest
	(*CreateVersionResponse)(nil), // 3: ctrl.v1.CreateVersionResponse
	(*GetVersionRequest)(nil),     // 4: ctrl.v1.GetVersionRequest
	(*GetVersionResponse)(nil),    // 5: ctrl.v1.GetVersionResponse
	(*ListVersionsRequest)(nil),   // 6: ctrl.v1.ListVersionsRequest
	(*ListVersionsResponse)(nil),  // 7: ctrl.v1.ListVersionsResponse
	(*Version)(nil),               // 8: ctrl.v1.Version
	(*Topology)(nil),              // 9: ctrl.v1.Topology
	(*RegionalConfig)(nil),        // 10: ctrl.v1.RegionalConfig
	nil,                           // 11: ctrl.v1.Version.EnvironmentVariablesEntry
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
}
var file_proto_ctrl_v1_version_proto_depIdxs = []int32{
	1,  // 0: ctrl.v1.CreateVersionRequest.source_type:type_name -> ctrl.v1.SourceType
	0,  // 1: ctrl.v1.CreateVersionResponse.status:type_name -> ctrl.v1.VersionStatus
	8,  // 2: ctrl.v1.GetVersionResponse.version:type_name -> ctrl.v1.Version
	0,  // 3: ctrl.v1.ListVersionsRequest.status:type_name -> ctrl.v1.VersionStatus
	8,  // 4: ctrl.v1.ListVersionsResponse.versions:type_name -> ctrl.v1.Version
	0,  // 5: ctrl.v1.Version.status:type_name -> ctrl.v1.VersionStatus
	11, // 6: ctrl.v1.Version.environment_variables:type_name -> ctrl.v1.Version.EnvironmentVariablesEntry
	9,  // 7: ctrl.v1.Version.topology:type_name -> ctrl.v1.Topology
	12, // 8: ctrl.v1.Version.created_at:type_name -> google.protobuf.Timestamp
	12, // 9: ctrl.v1.Version.updated_at:type_name -> google.protobuf.Timestamp
	10, // 10: ctrl.v1.Topology.regions:type_name -> ctrl.v1.RegionalConfig
	2,  // 11: ctrl.v1.VersionService.CreateVersion:input_type -> ctrl.v1.CreateVersionRequest
	4,  // 12: ctrl.v1.VersionService.GetVersion:input_type -> ctrl.v1.GetVersionRequest
	6,  // 13: ctrl.v1.VersionService.ListVersions:input_type -> ctrl.v1.ListVersionsRequest
	3,  // 14: ctrl.v1.VersionService.CreateVersion:output_type -> ctrl.v1.CreateVersionResponse
	5,  // 15: ctrl.v1.VersionService.GetVersion:output_type -> ctrl.v1.GetVersionResponse
	7,  // 16: ctrl.v1.VersionService.ListVersions:output_type -> ctrl.v1.ListVersionsResponse
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_ctrl_v1_version_proto_init() }
func file_proto_ctrl_v1_version_proto_init() {
	if File_proto_ctrl_v1_version_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_ctrl_v1_version_proto_rawDesc), len(file_proto_ctrl_v1_version_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_ctrl_v1_version_proto_goTypes,
		DependencyIndexes: file_proto_ctrl_v1_version_proto_depIdxs,
		EnumInfos:         file_proto_ctrl_v1_version_proto_enumTypes,
		MessageInfos:      file_proto_ctrl_v1_version_proto_msgTypes,
	}.Build()
	File_proto_ctrl_v1_version_proto = out.File
	file_proto_ctrl_v1_version_proto_goTypes = nil
	file_proto_ctrl_v1_version_proto_depIdxs = nil
}
