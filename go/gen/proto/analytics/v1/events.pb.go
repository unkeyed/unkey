// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: analytics/v1/events.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// KeyVerificationEvent represents a key verification operation event.
// This event is emitted whenever an API key is validated.
type KeyVerificationEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request ID for tracing correlation
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Unix timestamp in milliseconds
	Time int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	// Workspace identifier
	WorkspaceId string `protobuf:"bytes,3,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// Key space identifier (API identifier)
	KeySpaceId string `protobuf:"bytes,4,opt,name=key_space_id,json=keySpaceId,proto3" json:"key_space_id,omitempty"`
	// Identity identifier (empty if no identity)
	IdentityId string `protobuf:"bytes,5,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
	// Key identifier
	KeyId string `protobuf:"bytes,6,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	// Geographic region where verification occurred
	Region string `protobuf:"bytes,7,opt,name=region,proto3" json:"region,omitempty"`
	// Verification outcome (e.g., "VALID", "EXPIRED", "RATE_LIMITED")
	Outcome string `protobuf:"bytes,8,opt,name=outcome,proto3" json:"outcome,omitempty"`
	// Tags associated with the key
	Tags []string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	// Credits spent on this verification
	SpentCredits int64 `protobuf:"varint,10,opt,name=spent_credits,json=spentCredits,proto3" json:"spent_credits,omitempty"`
	// Latency in milliseconds for this verification
	Latency       float64 `protobuf:"fixed64,11,opt,name=latency,proto3" json:"latency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyVerificationEvent) Reset() {
	*x = KeyVerificationEvent{}
	mi := &file_analytics_v1_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyVerificationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyVerificationEvent) ProtoMessage() {}

func (x *KeyVerificationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_v1_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyVerificationEvent.ProtoReflect.Descriptor instead.
func (*KeyVerificationEvent) Descriptor() ([]byte, []int) {
	return file_analytics_v1_events_proto_rawDescGZIP(), []int{0}
}

func (x *KeyVerificationEvent) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *KeyVerificationEvent) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *KeyVerificationEvent) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *KeyVerificationEvent) GetKeySpaceId() string {
	if x != nil {
		return x.KeySpaceId
	}
	return ""
}

func (x *KeyVerificationEvent) GetIdentityId() string {
	if x != nil {
		return x.IdentityId
	}
	return ""
}

func (x *KeyVerificationEvent) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *KeyVerificationEvent) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *KeyVerificationEvent) GetOutcome() string {
	if x != nil {
		return x.Outcome
	}
	return ""
}

func (x *KeyVerificationEvent) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *KeyVerificationEvent) GetSpentCredits() int64 {
	if x != nil {
		return x.SpentCredits
	}
	return 0
}

func (x *KeyVerificationEvent) GetLatency() float64 {
	if x != nil {
		return x.Latency
	}
	return 0
}

// RatelimitEvent represents a rate limiting operation event.
// This event is emitted whenever rate limiting is applied.
type RatelimitEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request ID for tracing correlation
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Unix timestamp in milliseconds
	Time int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	// Workspace identifier
	WorkspaceId string `protobuf:"bytes,3,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// Namespace identifier for the rate limit
	NamespaceId string `protobuf:"bytes,4,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// Identifier being rate limited
	Identifier string `protobuf:"bytes,5,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// Whether the request passed rate limiting
	Passed bool `protobuf:"varint,6,opt,name=passed,proto3" json:"passed,omitempty"`
	// Latency in milliseconds for this rate limit check
	Latency float64 `protobuf:"fixed64,7,opt,name=latency,proto3" json:"latency,omitempty"`
	// Override ID if any override was applied
	OverrideId string `protobuf:"bytes,8,opt,name=override_id,json=overrideId,proto3" json:"override_id,omitempty"`
	// Rate limit configuration
	Limit uint64 `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	// Remaining requests
	Remaining uint64 `protobuf:"varint,10,opt,name=remaining,proto3" json:"remaining,omitempty"`
	// Reset timestamp
	ResetAt       int64 `protobuf:"varint,11,opt,name=reset_at,json=resetAt,proto3" json:"reset_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RatelimitEvent) Reset() {
	*x = RatelimitEvent{}
	mi := &file_analytics_v1_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RatelimitEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatelimitEvent) ProtoMessage() {}

func (x *RatelimitEvent) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_v1_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatelimitEvent.ProtoReflect.Descriptor instead.
func (*RatelimitEvent) Descriptor() ([]byte, []int) {
	return file_analytics_v1_events_proto_rawDescGZIP(), []int{1}
}

func (x *RatelimitEvent) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RatelimitEvent) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *RatelimitEvent) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *RatelimitEvent) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *RatelimitEvent) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *RatelimitEvent) GetPassed() bool {
	if x != nil {
		return x.Passed
	}
	return false
}

func (x *RatelimitEvent) GetLatency() float64 {
	if x != nil {
		return x.Latency
	}
	return 0
}

func (x *RatelimitEvent) GetOverrideId() string {
	if x != nil {
		return x.OverrideId
	}
	return ""
}

func (x *RatelimitEvent) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RatelimitEvent) GetRemaining() uint64 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *RatelimitEvent) GetResetAt() int64 {
	if x != nil {
		return x.ResetAt
	}
	return 0
}

// ApiRequestEvent represents an HTTP API request event.
// This event is emitted for API requests that need to be tracked.
type ApiRequestEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Request ID for tracing correlation
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// Unix timestamp in milliseconds
	Time int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	// Workspace identifier
	WorkspaceId string `protobuf:"bytes,3,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	// Request host
	Host string `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	// HTTP method
	Method string `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`
	// Request path
	Path string `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	// Query string
	QueryString string `protobuf:"bytes,7,opt,name=query_string,json=queryString,proto3" json:"query_string,omitempty"`
	// Query parameters as key-value pairs
	QueryParams map[string]*QueryParams `protobuf:"bytes,8,rep,name=query_params,json=queryParams,proto3" json:"query_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Request headers
	RequestHeaders []string `protobuf:"bytes,9,rep,name=request_headers,json=requestHeaders,proto3" json:"request_headers,omitempty"`
	// Request body (sanitized)
	RequestBody string `protobuf:"bytes,10,opt,name=request_body,json=requestBody,proto3" json:"request_body,omitempty"`
	// HTTP response status code
	ResponseStatus int32 `protobuf:"varint,11,opt,name=response_status,json=responseStatus,proto3" json:"response_status,omitempty"`
	// Response headers
	ResponseHeaders []string `protobuf:"bytes,12,rep,name=response_headers,json=responseHeaders,proto3" json:"response_headers,omitempty"`
	// Response body (sanitized)
	ResponseBody string `protobuf:"bytes,13,opt,name=response_body,json=responseBody,proto3" json:"response_body,omitempty"`
	// Error message if any
	Error string `protobuf:"bytes,14,opt,name=error,proto3" json:"error,omitempty"`
	// Service latency in milliseconds
	ServiceLatency int64 `protobuf:"varint,15,opt,name=service_latency,json=serviceLatency,proto3" json:"service_latency,omitempty"`
	// User agent
	UserAgent string `protobuf:"bytes,16,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	// IP address
	IpAddress string `protobuf:"bytes,17,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// Geographic region
	Region        string `protobuf:"bytes,18,opt,name=region,proto3" json:"region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiRequestEvent) Reset() {
	*x = ApiRequestEvent{}
	mi := &file_analytics_v1_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiRequestEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiRequestEvent) ProtoMessage() {}

func (x *ApiRequestEvent) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_v1_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiRequestEvent.ProtoReflect.Descriptor instead.
func (*ApiRequestEvent) Descriptor() ([]byte, []int) {
	return file_analytics_v1_events_proto_rawDescGZIP(), []int{2}
}

func (x *ApiRequestEvent) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ApiRequestEvent) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *ApiRequestEvent) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *ApiRequestEvent) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ApiRequestEvent) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiRequestEvent) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ApiRequestEvent) GetQueryString() string {
	if x != nil {
		return x.QueryString
	}
	return ""
}

func (x *ApiRequestEvent) GetQueryParams() map[string]*QueryParams {
	if x != nil {
		return x.QueryParams
	}
	return nil
}

func (x *ApiRequestEvent) GetRequestHeaders() []string {
	if x != nil {
		return x.RequestHeaders
	}
	return nil
}

func (x *ApiRequestEvent) GetRequestBody() string {
	if x != nil {
		return x.RequestBody
	}
	return ""
}

func (x *ApiRequestEvent) GetResponseStatus() int32 {
	if x != nil {
		return x.ResponseStatus
	}
	return 0
}

func (x *ApiRequestEvent) GetResponseHeaders() []string {
	if x != nil {
		return x.ResponseHeaders
	}
	return nil
}

func (x *ApiRequestEvent) GetResponseBody() string {
	if x != nil {
		return x.ResponseBody
	}
	return ""
}

func (x *ApiRequestEvent) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ApiRequestEvent) GetServiceLatency() int64 {
	if x != nil {
		return x.ServiceLatency
	}
	return 0
}

func (x *ApiRequestEvent) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *ApiRequestEvent) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *ApiRequestEvent) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// QueryParams represents multiple values for a query parameter
type QueryParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryParams) Reset() {
	*x = QueryParams{}
	mi := &file_analytics_v1_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryParams) ProtoMessage() {}

func (x *QueryParams) ProtoReflect() protoreflect.Message {
	mi := &file_analytics_v1_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryParams.ProtoReflect.Descriptor instead.
func (*QueryParams) Descriptor() ([]byte, []int) {
	return file_analytics_v1_events_proto_rawDescGZIP(), []int{3}
}

func (x *QueryParams) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_analytics_v1_events_proto protoreflect.FileDescriptor

const file_analytics_v1_events_proto_rawDesc = "" +
	"\n" +
	"\x19analytics/v1/events.proto\x12\fanalytics.v1\"\xcb\x02\n" +
	"\x14KeyVerificationEvent\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x12\n" +
	"\x04time\x18\x02 \x01(\x03R\x04time\x12!\n" +
	"\fworkspace_id\x18\x03 \x01(\tR\vworkspaceId\x12 \n" +
	"\fkey_space_id\x18\x04 \x01(\tR\n" +
	"keySpaceId\x12\x1f\n" +
	"\videntity_id\x18\x05 \x01(\tR\n" +
	"identityId\x12\x15\n" +
	"\x06key_id\x18\x06 \x01(\tR\x05keyId\x12\x16\n" +
	"\x06region\x18\a \x01(\tR\x06region\x12\x18\n" +
	"\aoutcome\x18\b \x01(\tR\aoutcome\x12\x12\n" +
	"\x04tags\x18\t \x03(\tR\x04tags\x12#\n" +
	"\rspent_credits\x18\n" +
	" \x01(\x03R\fspentCredits\x12\x18\n" +
	"\alatency\x18\v \x01(\x01R\alatency\"\xcb\x02\n" +
	"\x0eRatelimitEvent\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x12\n" +
	"\x04time\x18\x02 \x01(\x03R\x04time\x12!\n" +
	"\fworkspace_id\x18\x03 \x01(\tR\vworkspaceId\x12!\n" +
	"\fnamespace_id\x18\x04 \x01(\tR\vnamespaceId\x12\x1e\n" +
	"\n" +
	"identifier\x18\x05 \x01(\tR\n" +
	"identifier\x12\x16\n" +
	"\x06passed\x18\x06 \x01(\bR\x06passed\x12\x18\n" +
	"\alatency\x18\a \x01(\x01R\alatency\x12\x1f\n" +
	"\voverride_id\x18\b \x01(\tR\n" +
	"overrideId\x12\x14\n" +
	"\x05limit\x18\t \x01(\x04R\x05limit\x12\x1c\n" +
	"\tremaining\x18\n" +
	" \x01(\x04R\tremaining\x12\x19\n" +
	"\breset_at\x18\v \x01(\x03R\aresetAt\"\xd2\x05\n" +
	"\x0fApiRequestEvent\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x12\n" +
	"\x04time\x18\x02 \x01(\x03R\x04time\x12!\n" +
	"\fworkspace_id\x18\x03 \x01(\tR\vworkspaceId\x12\x12\n" +
	"\x04host\x18\x04 \x01(\tR\x04host\x12\x16\n" +
	"\x06method\x18\x05 \x01(\tR\x06method\x12\x12\n" +
	"\x04path\x18\x06 \x01(\tR\x04path\x12!\n" +
	"\fquery_string\x18\a \x01(\tR\vqueryString\x12Q\n" +
	"\fquery_params\x18\b \x03(\v2..analytics.v1.ApiRequestEvent.QueryParamsEntryR\vqueryParams\x12'\n" +
	"\x0frequest_headers\x18\t \x03(\tR\x0erequestHeaders\x12!\n" +
	"\frequest_body\x18\n" +
	" \x01(\tR\vrequestBody\x12'\n" +
	"\x0fresponse_status\x18\v \x01(\x05R\x0eresponseStatus\x12)\n" +
	"\x10response_headers\x18\f \x03(\tR\x0fresponseHeaders\x12#\n" +
	"\rresponse_body\x18\r \x01(\tR\fresponseBody\x12\x14\n" +
	"\x05error\x18\x0e \x01(\tR\x05error\x12'\n" +
	"\x0fservice_latency\x18\x0f \x01(\x03R\x0eserviceLatency\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x10 \x01(\tR\tuserAgent\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x11 \x01(\tR\tipAddress\x12\x16\n" +
	"\x06region\x18\x12 \x01(\tR\x06region\x1aY\n" +
	"\x10QueryParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.analytics.v1.QueryParamsR\x05value:\x028\x01\"%\n" +
	"\vQueryParams\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06valuesB4Z2github.com/unkeyed/unkey/go/gen/proto/analytics/v1b\x06proto3"

var (
	file_analytics_v1_events_proto_rawDescOnce sync.Once
	file_analytics_v1_events_proto_rawDescData []byte
)

func file_analytics_v1_events_proto_rawDescGZIP() []byte {
	file_analytics_v1_events_proto_rawDescOnce.Do(func() {
		file_analytics_v1_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_analytics_v1_events_proto_rawDesc), len(file_analytics_v1_events_proto_rawDesc)))
	})
	return file_analytics_v1_events_proto_rawDescData
}

var file_analytics_v1_events_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_analytics_v1_events_proto_goTypes = []any{
	(*KeyVerificationEvent)(nil), // 0: analytics.v1.KeyVerificationEvent
	(*RatelimitEvent)(nil),       // 1: analytics.v1.RatelimitEvent
	(*ApiRequestEvent)(nil),      // 2: analytics.v1.ApiRequestEvent
	(*QueryParams)(nil),          // 3: analytics.v1.QueryParams
	nil,                          // 4: analytics.v1.ApiRequestEvent.QueryParamsEntry
}
var file_analytics_v1_events_proto_depIdxs = []int32{
	4, // 0: analytics.v1.ApiRequestEvent.query_params:type_name -> analytics.v1.ApiRequestEvent.QueryParamsEntry
	3, // 1: analytics.v1.ApiRequestEvent.QueryParamsEntry.value:type_name -> analytics.v1.QueryParams
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_analytics_v1_events_proto_init() }
func file_analytics_v1_events_proto_init() {
	if File_analytics_v1_events_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_analytics_v1_events_proto_rawDesc), len(file_analytics_v1_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_analytics_v1_events_proto_goTypes,
		DependencyIndexes: file_analytics_v1_events_proto_depIdxs,
		MessageInfos:      file_analytics_v1_events_proto_msgTypes,
	}.Build()
	File_analytics_v1_events_proto = out.File
	file_analytics_v1_events_proto_goTypes = nil
	file_analytics_v1_events_proto_depIdxs = nil
}
