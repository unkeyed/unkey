// Code generated by protoc-gen-go-restate. DO NOT EDIT.
// versions:
// - protoc-gen-go-restate v0.1
// - protoc             (unknown)
// source: workflows/v1/deploy.proto

package workflowsv1

import (
	fmt "fmt"
	sdk_go "github.com/restatedev/sdk-go"
)

// DeployWorkflowsClient is the client API for workflows.v1.DeployWorkflows service.
type DeployWorkflowsClient interface {
	Deploy(opts ...sdk_go.ClientOption) sdk_go.Client[*DeployRequest, *DeployResponse]
}

type deployWorkflowsClient struct {
	ctx        sdk_go.Context
	workflowID string
	options    []sdk_go.ClientOption
}

func NewDeployWorkflowsClient(ctx sdk_go.Context, workflowID string, opts ...sdk_go.ClientOption) DeployWorkflowsClient {
	cOpts := append([]sdk_go.ClientOption{sdk_go.WithProtoJSON}, opts...)
	return &deployWorkflowsClient{
		ctx,
		workflowID,
		cOpts,
	}
}
func (c *deployWorkflowsClient) Deploy(opts ...sdk_go.ClientOption) sdk_go.Client[*DeployRequest, *DeployResponse] {
	cOpts := c.options
	if len(opts) > 0 {
		cOpts = append(append([]sdk_go.ClientOption{}, cOpts...), opts...)
	}
	return sdk_go.WithRequestType[*DeployRequest](sdk_go.Workflow[*DeployResponse](c.ctx, "workflows.v1.DeployWorkflows", c.workflowID, "Deploy", cOpts...))
}

// DeployWorkflowsServer is the server API for workflows.v1.DeployWorkflows service.
// All implementations should embed UnimplementedDeployWorkflowsServer
// for forward compatibility.
type DeployWorkflowsServer interface {
	Deploy(ctx sdk_go.WorkflowSharedContext, req *DeployRequest) (*DeployResponse, error)
}

// UnimplementedDeployWorkflowsServer should be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedDeployWorkflowsServer struct{}

func (UnimplementedDeployWorkflowsServer) Deploy(ctx sdk_go.WorkflowSharedContext, req *DeployRequest) (*DeployResponse, error) {
	return nil, sdk_go.TerminalError(fmt.Errorf("method Deploy not implemented"), 501)
}
func (UnimplementedDeployWorkflowsServer) testEmbeddedByValue() {}

// UnsafeDeployWorkflowsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DeployWorkflowsServer will
// result in compilation errors.
type UnsafeDeployWorkflowsServer interface {
	mustEmbedUnimplementedDeployWorkflowsServer()
}

func NewDeployWorkflowsServer(srv DeployWorkflowsServer, opts ...sdk_go.ServiceDefinitionOption) sdk_go.ServiceDefinition {
	// If the following call panics, it indicates UnimplementedDeployWorkflowsServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	sOpts := append([]sdk_go.ServiceDefinitionOption{sdk_go.WithProtoJSON}, opts...)
	router := sdk_go.NewWorkflow("workflows.v1.DeployWorkflows", sOpts...)
	router = router.Handler("Deploy", sdk_go.NewWorkflowSharedHandler(srv.Deploy))
	return router
}
