// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: hydra/v1/certificate.proto

package hydrav1

import (
	_ "github.com/restatedev/sdk-go/generated/dev/restate/sdk"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProcessChallengeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorkspaceId   string                 `protobuf:"bytes,1,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessChallengeRequest) Reset() {
	*x = ProcessChallengeRequest{}
	mi := &file_hydra_v1_certificate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessChallengeRequest) ProtoMessage() {}

func (x *ProcessChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hydra_v1_certificate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessChallengeRequest.ProtoReflect.Descriptor instead.
func (*ProcessChallengeRequest) Descriptor() ([]byte, []int) {
	return file_hydra_v1_certificate_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessChallengeRequest) GetWorkspaceId() string {
	if x != nil {
		return x.WorkspaceId
	}
	return ""
}

func (x *ProcessChallengeRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

type ProcessChallengeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CertificateId string                 `protobuf:"bytes,1,opt,name=certificate_id,json=certificateId,proto3" json:"certificate_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // "success", "failed", "pending"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessChallengeResponse) Reset() {
	*x = ProcessChallengeResponse{}
	mi := &file_hydra_v1_certificate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessChallengeResponse) ProtoMessage() {}

func (x *ProcessChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hydra_v1_certificate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessChallengeResponse.ProtoReflect.Descriptor instead.
func (*ProcessChallengeResponse) Descriptor() ([]byte, []int) {
	return file_hydra_v1_certificate_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessChallengeResponse) GetCertificateId() string {
	if x != nil {
		return x.CertificateId
	}
	return ""
}

func (x *ProcessChallengeResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_hydra_v1_certificate_proto protoreflect.FileDescriptor

const file_hydra_v1_certificate_proto_rawDesc = "" +
	"\n" +
	"\x1ahydra/v1/certificate.proto\x12\bhydra.v1\x1a\x18dev/restate/sdk/go.proto\"T\n" +
	"\x17ProcessChallengeRequest\x12!\n" +
	"\fworkspace_id\x18\x01 \x01(\tR\vworkspaceId\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\"Y\n" +
	"\x18ProcessChallengeResponse\x12%\n" +
	"\x0ecertificate_id\x18\x01 \x01(\tR\rcertificateId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status2w\n" +
	"\x12CertificateService\x12[\n" +
	"\x10ProcessChallenge\x12!.hydra.v1.ProcessChallengeRequest\x1a\".hydra.v1.ProcessChallengeResponse\"\x00\x1a\x04\x98\x80\x01\x01B\x99\x01\n" +
	"\fcom.hydra.v1B\x10CertificateProtoP\x01Z6github.com/unkeyed/unkey/go/gen/proto/hydra/v1;hydrav1\xa2\x02\x03HXX\xaa\x02\bHydra.V1\xca\x02\bHydra\\V1\xe2\x02\x14Hydra\\V1\\GPBMetadata\xea\x02\tHydra::V1b\x06proto3"

var (
	file_hydra_v1_certificate_proto_rawDescOnce sync.Once
	file_hydra_v1_certificate_proto_rawDescData []byte
)

func file_hydra_v1_certificate_proto_rawDescGZIP() []byte {
	file_hydra_v1_certificate_proto_rawDescOnce.Do(func() {
		file_hydra_v1_certificate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_hydra_v1_certificate_proto_rawDesc), len(file_hydra_v1_certificate_proto_rawDesc)))
	})
	return file_hydra_v1_certificate_proto_rawDescData
}

var file_hydra_v1_certificate_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_hydra_v1_certificate_proto_goTypes = []any{
	(*ProcessChallengeRequest)(nil),  // 0: hydra.v1.ProcessChallengeRequest
	(*ProcessChallengeResponse)(nil), // 1: hydra.v1.ProcessChallengeResponse
}
var file_hydra_v1_certificate_proto_depIdxs = []int32{
	0, // 0: hydra.v1.CertificateService.ProcessChallenge:input_type -> hydra.v1.ProcessChallengeRequest
	1, // 1: hydra.v1.CertificateService.ProcessChallenge:output_type -> hydra.v1.ProcessChallengeResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_hydra_v1_certificate_proto_init() }
func file_hydra_v1_certificate_proto_init() {
	if File_hydra_v1_certificate_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_hydra_v1_certificate_proto_rawDesc), len(file_hydra_v1_certificate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hydra_v1_certificate_proto_goTypes,
		DependencyIndexes: file_hydra_v1_certificate_proto_depIdxs,
		MessageInfos:      file_hydra_v1_certificate_proto_msgTypes,
	}.Build()
	File_hydra_v1_certificate_proto = out.File
	file_hydra_v1_certificate_proto_goTypes = nil
	file_hydra_v1_certificate_proto_depIdxs = nil
}
