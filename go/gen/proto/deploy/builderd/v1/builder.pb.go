// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/deploy/builderd/v1/builder.proto

package builderdv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Build job lifecycle states
type BuildState int32

const (
	BuildState_BUILD_STATE_UNSPECIFIED BuildState = 0
	BuildState_BUILD_STATE_PENDING     BuildState = 1 // Job queued
	BuildState_BUILD_STATE_PULLING     BuildState = 2 // Pulling Docker image or source
	BuildState_BUILD_STATE_EXTRACTING  BuildState = 3 // Extracting/preparing source
	BuildState_BUILD_STATE_BUILDING    BuildState = 4 // Building rootfs
	BuildState_BUILD_STATE_OPTIMIZING  BuildState = 5 // Applying optimizations
	BuildState_BUILD_STATE_COMPLETED   BuildState = 6 // Build successful
	BuildState_BUILD_STATE_FAILED      BuildState = 7 // Build failed
	BuildState_BUILD_STATE_CANCELLED   BuildState = 8 // Build cancelled
	BuildState_BUILD_STATE_CLEANING    BuildState = 9 // Cleaning up resources
)

// Enum value maps for BuildState.
var (
	BuildState_name = map[int32]string{
		0: "BUILD_STATE_UNSPECIFIED",
		1: "BUILD_STATE_PENDING",
		2: "BUILD_STATE_PULLING",
		3: "BUILD_STATE_EXTRACTING",
		4: "BUILD_STATE_BUILDING",
		5: "BUILD_STATE_OPTIMIZING",
		6: "BUILD_STATE_COMPLETED",
		7: "BUILD_STATE_FAILED",
		8: "BUILD_STATE_CANCELLED",
		9: "BUILD_STATE_CLEANING",
	}
	BuildState_value = map[string]int32{
		"BUILD_STATE_UNSPECIFIED": 0,
		"BUILD_STATE_PENDING":     1,
		"BUILD_STATE_PULLING":     2,
		"BUILD_STATE_EXTRACTING":  3,
		"BUILD_STATE_BUILDING":    4,
		"BUILD_STATE_OPTIMIZING":  5,
		"BUILD_STATE_COMPLETED":   6,
		"BUILD_STATE_FAILED":      7,
		"BUILD_STATE_CANCELLED":   8,
		"BUILD_STATE_CLEANING":    9,
	}
)

func (x BuildState) Enum() *BuildState {
	p := new(BuildState)
	*p = x
	return p
}

func (x BuildState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BuildState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_deploy_builderd_v1_builder_proto_enumTypes[0].Descriptor()
}

func (BuildState) Type() protoreflect.EnumType {
	return &file_proto_deploy_builderd_v1_builder_proto_enumTypes[0]
}

func (x BuildState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BuildState.Descriptor instead.
func (BuildState) EnumDescriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{0}
}

// Tenant service tiers
type TenantTier int32

const (
	TenantTier_TENANT_TIER_UNSPECIFIED TenantTier = 0
	TenantTier_TENANT_TIER_FREE        TenantTier = 1 // Limited resources
	TenantTier_TENANT_TIER_PRO         TenantTier = 2 // Standard resources
	TenantTier_TENANT_TIER_ENTERPRISE  TenantTier = 3 // Higher limits + isolation
	TenantTier_TENANT_TIER_DEDICATED   TenantTier = 4 // Dedicated infrastructure
)

// Enum value maps for TenantTier.
var (
	TenantTier_name = map[int32]string{
		0: "TENANT_TIER_UNSPECIFIED",
		1: "TENANT_TIER_FREE",
		2: "TENANT_TIER_PRO",
		3: "TENANT_TIER_ENTERPRISE",
		4: "TENANT_TIER_DEDICATED",
	}
	TenantTier_value = map[string]int32{
		"TENANT_TIER_UNSPECIFIED": 0,
		"TENANT_TIER_FREE":        1,
		"TENANT_TIER_PRO":         2,
		"TENANT_TIER_ENTERPRISE":  3,
		"TENANT_TIER_DEDICATED":   4,
	}
)

func (x TenantTier) Enum() *TenantTier {
	p := new(TenantTier)
	*p = x
	return p
}

func (x TenantTier) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TenantTier) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_deploy_builderd_v1_builder_proto_enumTypes[1].Descriptor()
}

func (TenantTier) Type() protoreflect.EnumType {
	return &file_proto_deploy_builderd_v1_builder_proto_enumTypes[1]
}

func (x TenantTier) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TenantTier.Descriptor instead.
func (TenantTier) EnumDescriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{1}
}

// Init process strategies for microVMs
type InitStrategy int32

const (
	InitStrategy_INIT_STRATEGY_UNSPECIFIED InitStrategy = 0
	InitStrategy_INIT_STRATEGY_TINI        InitStrategy = 1 // Use tini as init (recommended)
	InitStrategy_INIT_STRATEGY_DIRECT      InitStrategy = 2 // Direct exec (risky)
	InitStrategy_INIT_STRATEGY_CUSTOM      InitStrategy = 3 // Custom init script
)

// Enum value maps for InitStrategy.
var (
	InitStrategy_name = map[int32]string{
		0: "INIT_STRATEGY_UNSPECIFIED",
		1: "INIT_STRATEGY_TINI",
		2: "INIT_STRATEGY_DIRECT",
		3: "INIT_STRATEGY_CUSTOM",
	}
	InitStrategy_value = map[string]int32{
		"INIT_STRATEGY_UNSPECIFIED": 0,
		"INIT_STRATEGY_TINI":        1,
		"INIT_STRATEGY_DIRECT":      2,
		"INIT_STRATEGY_CUSTOM":      3,
	}
)

func (x InitStrategy) Enum() *InitStrategy {
	p := new(InitStrategy)
	*p = x
	return p
}

func (x InitStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InitStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_deploy_builderd_v1_builder_proto_enumTypes[2].Descriptor()
}

func (InitStrategy) Type() protoreflect.EnumType {
	return &file_proto_deploy_builderd_v1_builder_proto_enumTypes[2]
}

func (x InitStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InitStrategy.Descriptor instead.
func (InitStrategy) EnumDescriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{2}
}

// Multi-tenant context
type TenantContext struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TenantId       string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`                                                           // Primary tenant identifier
	CustomerId     string                 `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`                                                     // Customer within tenant (for billing)
	OrganizationId string                 `protobuf:"bytes,3,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`                                         // Organization (for enterprise)
	Tier           TenantTier             `protobuf:"varint,4,opt,name=tier,proto3,enum=deploy.builderd.v1.TenantTier" json:"tier,omitempty"`                                               // Service tier
	Permissions    []string               `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions,omitempty"`                                                                     // Build permissions
	Metadata       map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Tenant metadata
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TenantContext) Reset() {
	*x = TenantContext{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TenantContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantContext) ProtoMessage() {}

func (x *TenantContext) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantContext.ProtoReflect.Descriptor instead.
func (*TenantContext) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{0}
}

func (x *TenantContext) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *TenantContext) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *TenantContext) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *TenantContext) GetTier() TenantTier {
	if x != nil {
		return x.Tier
	}
	return TenantTier_TENANT_TIER_UNSPECIFIED
}

func (x *TenantContext) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *TenantContext) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Build source types - extensible for future build types
type BuildSource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to SourceType:
	//
	//	*BuildSource_DockerImage
	//	*BuildSource_GitRepository
	//	*BuildSource_Archive
	SourceType    isBuildSource_SourceType `protobuf_oneof:"source_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildSource) Reset() {
	*x = BuildSource{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildSource) ProtoMessage() {}

func (x *BuildSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildSource.ProtoReflect.Descriptor instead.
func (*BuildSource) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{1}
}

func (x *BuildSource) GetSourceType() isBuildSource_SourceType {
	if x != nil {
		return x.SourceType
	}
	return nil
}

func (x *BuildSource) GetDockerImage() *DockerImageSource {
	if x != nil {
		if x, ok := x.SourceType.(*BuildSource_DockerImage); ok {
			return x.DockerImage
		}
	}
	return nil
}

func (x *BuildSource) GetGitRepository() *GitRepositorySource {
	if x != nil {
		if x, ok := x.SourceType.(*BuildSource_GitRepository); ok {
			return x.GitRepository
		}
	}
	return nil
}

func (x *BuildSource) GetArchive() *ArchiveSource {
	if x != nil {
		if x, ok := x.SourceType.(*BuildSource_Archive); ok {
			return x.Archive
		}
	}
	return nil
}

type isBuildSource_SourceType interface {
	isBuildSource_SourceType()
}

type BuildSource_DockerImage struct {
	DockerImage *DockerImageSource `protobuf:"bytes,1,opt,name=docker_image,json=dockerImage,proto3,oneof"`
}

type BuildSource_GitRepository struct {
	GitRepository *GitRepositorySource `protobuf:"bytes,2,opt,name=git_repository,json=gitRepository,proto3,oneof"`
}

type BuildSource_Archive struct {
	Archive *ArchiveSource `protobuf:"bytes,3,opt,name=archive,proto3,oneof"` // Future: nix_flake = 4, buildpack = 5, etc.
}

func (*BuildSource_DockerImage) isBuildSource_SourceType() {}

func (*BuildSource_GitRepository) isBuildSource_SourceType() {}

func (*BuildSource_Archive) isBuildSource_SourceType() {}

// Docker image extraction (first implementation)
type DockerImageSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageUri      string                 `protobuf:"bytes,1,opt,name=image_uri,json=imageUri,proto3" json:"image_uri,omitempty"` // "ghcr.io/unkeyed/unkey:f4cfee5"
	Auth          *DockerAuth            `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`                         // Registry authentication
	PullTags      []string               `protobuf:"bytes,3,rep,name=pull_tags,json=pullTags,proto3" json:"pull_tags,omitempty"` // Additional tags to consider
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerImageSource) Reset() {
	*x = DockerImageSource{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerImageSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerImageSource) ProtoMessage() {}

func (x *DockerImageSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerImageSource.ProtoReflect.Descriptor instead.
func (*DockerImageSource) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{2}
}

func (x *DockerImageSource) GetImageUri() string {
	if x != nil {
		return x.ImageUri
	}
	return ""
}

func (x *DockerImageSource) GetAuth() *DockerAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *DockerImageSource) GetPullTags() []string {
	if x != nil {
		return x.PullTags
	}
	return nil
}

type DockerAuth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Registry      string                 `protobuf:"bytes,4,opt,name=registry,proto3" json:"registry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerAuth) Reset() {
	*x = DockerAuth{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerAuth) ProtoMessage() {}

func (x *DockerAuth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerAuth.ProtoReflect.Descriptor instead.
func (*DockerAuth) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{3}
}

func (x *DockerAuth) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DockerAuth) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *DockerAuth) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *DockerAuth) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

// Git repository builds (future)
type GitRepositorySource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryUrl string                 `protobuf:"bytes,1,opt,name=repository_url,json=repositoryUrl,proto3" json:"repository_url,omitempty"` // "https://github.com/unkeyed/unkey"
	Ref           string                 `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`                                          // branch/tag/commit
	BuildContext  string                 `protobuf:"bytes,3,opt,name=build_context,json=buildContext,proto3" json:"build_context,omitempty"`    // subdirectory if needed
	Auth          *GitAuth               `protobuf:"bytes,4,opt,name=auth,proto3" json:"auth,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GitRepositorySource) Reset() {
	*x = GitRepositorySource{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GitRepositorySource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitRepositorySource) ProtoMessage() {}

func (x *GitRepositorySource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitRepositorySource.ProtoReflect.Descriptor instead.
func (*GitRepositorySource) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{4}
}

func (x *GitRepositorySource) GetRepositoryUrl() string {
	if x != nil {
		return x.RepositoryUrl
	}
	return ""
}

func (x *GitRepositorySource) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *GitRepositorySource) GetBuildContext() string {
	if x != nil {
		return x.BuildContext
	}
	return ""
}

func (x *GitRepositorySource) GetAuth() *GitAuth {
	if x != nil {
		return x.Auth
	}
	return nil
}

type GitAuth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	SshKey        string                 `protobuf:"bytes,3,opt,name=ssh_key,json=sshKey,proto3" json:"ssh_key,omitempty"`
	Token         string                 `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GitAuth) Reset() {
	*x = GitAuth{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GitAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitAuth) ProtoMessage() {}

func (x *GitAuth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitAuth.ProtoReflect.Descriptor instead.
func (*GitAuth) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{5}
}

func (x *GitAuth) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GitAuth) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *GitAuth) GetSshKey() string {
	if x != nil {
		return x.SshKey
	}
	return ""
}

func (x *GitAuth) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// Archive builds (future)
type ArchiveSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArchiveUrl    string                 `protobuf:"bytes,1,opt,name=archive_url,json=archiveUrl,proto3" json:"archive_url,omitempty"`       // URL to tar.gz, zip, etc.
	ArchiveType   string                 `protobuf:"bytes,2,opt,name=archive_type,json=archiveType,proto3" json:"archive_type,omitempty"`    // "tar.gz", "zip"
	BuildContext  string                 `protobuf:"bytes,3,opt,name=build_context,json=buildContext,proto3" json:"build_context,omitempty"` // subdirectory in archive
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArchiveSource) Reset() {
	*x = ArchiveSource{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArchiveSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveSource) ProtoMessage() {}

func (x *ArchiveSource) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveSource.ProtoReflect.Descriptor instead.
func (*ArchiveSource) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{6}
}

func (x *ArchiveSource) GetArchiveUrl() string {
	if x != nil {
		return x.ArchiveUrl
	}
	return ""
}

func (x *ArchiveSource) GetArchiveType() string {
	if x != nil {
		return x.ArchiveType
	}
	return ""
}

func (x *ArchiveSource) GetBuildContext() string {
	if x != nil {
		return x.BuildContext
	}
	return ""
}

// Build target types - extensible
type BuildTarget struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to TargetType:
	//
	//	*BuildTarget_MicrovmRootfs
	//	*BuildTarget_ContainerImage
	TargetType    isBuildTarget_TargetType `protobuf_oneof:"target_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildTarget) Reset() {
	*x = BuildTarget{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildTarget) ProtoMessage() {}

func (x *BuildTarget) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildTarget.ProtoReflect.Descriptor instead.
func (*BuildTarget) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{7}
}

func (x *BuildTarget) GetTargetType() isBuildTarget_TargetType {
	if x != nil {
		return x.TargetType
	}
	return nil
}

func (x *BuildTarget) GetMicrovmRootfs() *MicroVMRootfs {
	if x != nil {
		if x, ok := x.TargetType.(*BuildTarget_MicrovmRootfs); ok {
			return x.MicrovmRootfs
		}
	}
	return nil
}

func (x *BuildTarget) GetContainerImage() *ContainerImage {
	if x != nil {
		if x, ok := x.TargetType.(*BuildTarget_ContainerImage); ok {
			return x.ContainerImage
		}
	}
	return nil
}

type isBuildTarget_TargetType interface {
	isBuildTarget_TargetType()
}

type BuildTarget_MicrovmRootfs struct {
	MicrovmRootfs *MicroVMRootfs `protobuf:"bytes,1,opt,name=microvm_rootfs,json=microvmRootfs,proto3,oneof"`
}

type BuildTarget_ContainerImage struct {
	ContainerImage *ContainerImage `protobuf:"bytes,2,opt,name=container_image,json=containerImage,proto3,oneof"` // Future: wasm_module = 3, lambda_layer = 4, etc.
}

func (*BuildTarget_MicrovmRootfs) isBuildTarget_TargetType() {}

func (*BuildTarget_ContainerImage) isBuildTarget_TargetType() {}

// MicroVM rootfs (our focus)
type MicroVMRootfs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InitStrategy  InitStrategy           `protobuf:"varint,1,opt,name=init_strategy,json=initStrategy,proto3,enum=deploy.builderd.v1.InitStrategy" json:"init_strategy,omitempty"`
	RuntimeConfig *RuntimeConfig         `protobuf:"bytes,2,opt,name=runtime_config,json=runtimeConfig,proto3" json:"runtime_config,omitempty"`
	Optimization  *OptimizationSettings  `protobuf:"bytes,3,opt,name=optimization,proto3" json:"optimization,omitempty"`
	PreservePaths []string               `protobuf:"bytes,4,rep,name=preserve_paths,json=preservePaths,proto3" json:"preserve_paths,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MicroVMRootfs) Reset() {
	*x = MicroVMRootfs{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MicroVMRootfs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MicroVMRootfs) ProtoMessage() {}

func (x *MicroVMRootfs) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MicroVMRootfs.ProtoReflect.Descriptor instead.
func (*MicroVMRootfs) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{8}
}

func (x *MicroVMRootfs) GetInitStrategy() InitStrategy {
	if x != nil {
		return x.InitStrategy
	}
	return InitStrategy_INIT_STRATEGY_UNSPECIFIED
}

func (x *MicroVMRootfs) GetRuntimeConfig() *RuntimeConfig {
	if x != nil {
		return x.RuntimeConfig
	}
	return nil
}

func (x *MicroVMRootfs) GetOptimization() *OptimizationSettings {
	if x != nil {
		return x.Optimization
	}
	return nil
}

func (x *MicroVMRootfs) GetPreservePaths() []string {
	if x != nil {
		return x.PreservePaths
	}
	return nil
}

// Container image (future)
type ContainerImage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaseImage     string                 `protobuf:"bytes,1,opt,name=base_image,json=baseImage,proto3" json:"base_image,omitempty"`
	Layers        []string               `protobuf:"bytes,2,rep,name=layers,proto3" json:"layers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerImage) Reset() {
	*x = ContainerImage{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerImage) ProtoMessage() {}

func (x *ContainerImage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerImage.ProtoReflect.Descriptor instead.
func (*ContainerImage) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{9}
}

func (x *ContainerImage) GetBaseImage() string {
	if x != nil {
		return x.BaseImage
	}
	return ""
}

func (x *ContainerImage) GetLayers() []string {
	if x != nil {
		return x.Layers
	}
	return nil
}

type RuntimeConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Command       []string               `protobuf:"bytes,1,rep,name=command,proto3" json:"command,omitempty"`                                                                                   // Override CMD
	Entrypoint    []string               `protobuf:"bytes,2,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`                                                                             // Override ENTRYPOINT
	WorkingDir    string                 `protobuf:"bytes,3,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`                                                           // Override WORKDIR
	Environment   map[string]string      `protobuf:"bytes,4,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Environment variables
	ExposedPorts  []string               `protobuf:"bytes,5,rep,name=exposed_ports,json=exposedPorts,proto3" json:"exposed_ports,omitempty"`                                                     // Ports to expose
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeConfig) Reset() {
	*x = RuntimeConfig{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeConfig) ProtoMessage() {}

func (x *RuntimeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeConfig.ProtoReflect.Descriptor instead.
func (*RuntimeConfig) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{10}
}

func (x *RuntimeConfig) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *RuntimeConfig) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *RuntimeConfig) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *RuntimeConfig) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *RuntimeConfig) GetExposedPorts() []string {
	if x != nil {
		return x.ExposedPorts
	}
	return nil
}

type OptimizationSettings struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	StripDebugSymbols bool                   `protobuf:"varint,1,opt,name=strip_debug_symbols,json=stripDebugSymbols,proto3" json:"strip_debug_symbols,omitempty"` // Strip debug info
	CompressBinaries  bool                   `protobuf:"varint,2,opt,name=compress_binaries,json=compressBinaries,proto3" json:"compress_binaries,omitempty"`      // Compress with UPX
	RemoveDocs        bool                   `protobuf:"varint,3,opt,name=remove_docs,json=removeDocs,proto3" json:"remove_docs,omitempty"`                        // Remove documentation
	RemoveCache       bool                   `protobuf:"varint,4,opt,name=remove_cache,json=removeCache,proto3" json:"remove_cache,omitempty"`                     // Remove package caches
	PreservePaths     []string               `protobuf:"bytes,5,rep,name=preserve_paths,json=preservePaths,proto3" json:"preserve_paths,omitempty"`                // Paths to always keep
	ExcludePatterns   []string               `protobuf:"bytes,6,rep,name=exclude_patterns,json=excludePatterns,proto3" json:"exclude_patterns,omitempty"`          // Files to exclude
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *OptimizationSettings) Reset() {
	*x = OptimizationSettings{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptimizationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimizationSettings) ProtoMessage() {}

func (x *OptimizationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimizationSettings.ProtoReflect.Descriptor instead.
func (*OptimizationSettings) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{11}
}

func (x *OptimizationSettings) GetStripDebugSymbols() bool {
	if x != nil {
		return x.StripDebugSymbols
	}
	return false
}

func (x *OptimizationSettings) GetCompressBinaries() bool {
	if x != nil {
		return x.CompressBinaries
	}
	return false
}

func (x *OptimizationSettings) GetRemoveDocs() bool {
	if x != nil {
		return x.RemoveDocs
	}
	return false
}

func (x *OptimizationSettings) GetRemoveCache() bool {
	if x != nil {
		return x.RemoveCache
	}
	return false
}

func (x *OptimizationSettings) GetPreservePaths() []string {
	if x != nil {
		return x.PreservePaths
	}
	return nil
}

func (x *OptimizationSettings) GetExcludePatterns() []string {
	if x != nil {
		return x.ExcludePatterns
	}
	return nil
}

// Build strategies - how to build from source to target
type BuildStrategy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to StrategyType:
	//
	//	*BuildStrategy_DockerExtract
	//	*BuildStrategy_GoApi
	//	*BuildStrategy_Sinatra
	//	*BuildStrategy_Nodejs
	StrategyType  isBuildStrategy_StrategyType `protobuf_oneof:"strategy_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildStrategy) Reset() {
	*x = BuildStrategy{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildStrategy) ProtoMessage() {}

func (x *BuildStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildStrategy.ProtoReflect.Descriptor instead.
func (*BuildStrategy) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{12}
}

func (x *BuildStrategy) GetStrategyType() isBuildStrategy_StrategyType {
	if x != nil {
		return x.StrategyType
	}
	return nil
}

func (x *BuildStrategy) GetDockerExtract() *DockerExtractStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*BuildStrategy_DockerExtract); ok {
			return x.DockerExtract
		}
	}
	return nil
}

func (x *BuildStrategy) GetGoApi() *GoApiStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*BuildStrategy_GoApi); ok {
			return x.GoApi
		}
	}
	return nil
}

func (x *BuildStrategy) GetSinatra() *SinatraStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*BuildStrategy_Sinatra); ok {
			return x.Sinatra
		}
	}
	return nil
}

func (x *BuildStrategy) GetNodejs() *NodejsStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*BuildStrategy_Nodejs); ok {
			return x.Nodejs
		}
	}
	return nil
}

type isBuildStrategy_StrategyType interface {
	isBuildStrategy_StrategyType()
}

type BuildStrategy_DockerExtract struct {
	DockerExtract *DockerExtractStrategy `protobuf:"bytes,1,opt,name=docker_extract,json=dockerExtract,proto3,oneof"`
}

type BuildStrategy_GoApi struct {
	GoApi *GoApiStrategy `protobuf:"bytes,2,opt,name=go_api,json=goApi,proto3,oneof"`
}

type BuildStrategy_Sinatra struct {
	Sinatra *SinatraStrategy `protobuf:"bytes,3,opt,name=sinatra,proto3,oneof"`
}

type BuildStrategy_Nodejs struct {
	Nodejs *NodejsStrategy `protobuf:"bytes,4,opt,name=nodejs,proto3,oneof"` // Future: python_wsgi = 5, rust_binary = 6, etc.
}

func (*BuildStrategy_DockerExtract) isBuildStrategy_StrategyType() {}

func (*BuildStrategy_GoApi) isBuildStrategy_StrategyType() {}

func (*BuildStrategy_Sinatra) isBuildStrategy_StrategyType() {}

func (*BuildStrategy_Nodejs) isBuildStrategy_StrategyType() {}

// Docker extraction strategy (first implementation)
type DockerExtractStrategy struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PreserveLayers    bool                   `protobuf:"varint,1,opt,name=preserve_layers,json=preserveLayers,proto3" json:"preserve_layers,omitempty"`          // Keep layer structure
	FlattenFilesystem bool                   `protobuf:"varint,2,opt,name=flatten_filesystem,json=flattenFilesystem,proto3" json:"flatten_filesystem,omitempty"` // Merge all layers
	ExcludePatterns   []string               `protobuf:"bytes,3,rep,name=exclude_patterns,json=excludePatterns,proto3" json:"exclude_patterns,omitempty"`        // Files to exclude
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DockerExtractStrategy) Reset() {
	*x = DockerExtractStrategy{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerExtractStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerExtractStrategy) ProtoMessage() {}

func (x *DockerExtractStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerExtractStrategy.ProtoReflect.Descriptor instead.
func (*DockerExtractStrategy) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{13}
}

func (x *DockerExtractStrategy) GetPreserveLayers() bool {
	if x != nil {
		return x.PreserveLayers
	}
	return false
}

func (x *DockerExtractStrategy) GetFlattenFilesystem() bool {
	if x != nil {
		return x.FlattenFilesystem
	}
	return false
}

func (x *DockerExtractStrategy) GetExcludePatterns() []string {
	if x != nil {
		return x.ExcludePatterns
	}
	return nil
}

// Go API strategy (future)
type GoApiStrategy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GoVersion     string                 `protobuf:"bytes,1,opt,name=go_version,json=goVersion,proto3" json:"go_version,omitempty"`       // "1.21", "latest"
	BuildFlags    []string               `protobuf:"bytes,2,rep,name=build_flags,json=buildFlags,proto3" json:"build_flags,omitempty"`    // "-ldflags", "-tags"
	MainPackage   string                 `protobuf:"bytes,3,opt,name=main_package,json=mainPackage,proto3" json:"main_package,omitempty"` // "./cmd/api"
	EnableCgo     bool                   `protobuf:"varint,4,opt,name=enable_cgo,json=enableCgo,proto3" json:"enable_cgo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GoApiStrategy) Reset() {
	*x = GoApiStrategy{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoApiStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoApiStrategy) ProtoMessage() {}

func (x *GoApiStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoApiStrategy.ProtoReflect.Descriptor instead.
func (*GoApiStrategy) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{14}
}

func (x *GoApiStrategy) GetGoVersion() string {
	if x != nil {
		return x.GoVersion
	}
	return ""
}

func (x *GoApiStrategy) GetBuildFlags() []string {
	if x != nil {
		return x.BuildFlags
	}
	return nil
}

func (x *GoApiStrategy) GetMainPackage() string {
	if x != nil {
		return x.MainPackage
	}
	return ""
}

func (x *GoApiStrategy) GetEnableCgo() bool {
	if x != nil {
		return x.EnableCgo
	}
	return false
}

// Sinatra strategy (future)
type SinatraStrategy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RubyVersion   string                 `protobuf:"bytes,1,opt,name=ruby_version,json=rubyVersion,proto3" json:"ruby_version,omitempty"`                                                                        // "3.2", "latest"
	GemfilePath   string                 `protobuf:"bytes,2,opt,name=gemfile_path,json=gemfilePath,proto3" json:"gemfile_path,omitempty"`                                                                        // "Gemfile"
	RackServer    string                 `protobuf:"bytes,3,opt,name=rack_server,json=rackServer,proto3" json:"rack_server,omitempty"`                                                                           // "puma", "unicorn"
	RackConfig    map[string]string      `protobuf:"bytes,4,rep,name=rack_config,json=rackConfig,proto3" json:"rack_config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Server-specific config
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SinatraStrategy) Reset() {
	*x = SinatraStrategy{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SinatraStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SinatraStrategy) ProtoMessage() {}

func (x *SinatraStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SinatraStrategy.ProtoReflect.Descriptor instead.
func (*SinatraStrategy) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{15}
}

func (x *SinatraStrategy) GetRubyVersion() string {
	if x != nil {
		return x.RubyVersion
	}
	return ""
}

func (x *SinatraStrategy) GetGemfilePath() string {
	if x != nil {
		return x.GemfilePath
	}
	return ""
}

func (x *SinatraStrategy) GetRackServer() string {
	if x != nil {
		return x.RackServer
	}
	return ""
}

func (x *SinatraStrategy) GetRackConfig() map[string]string {
	if x != nil {
		return x.RackConfig
	}
	return nil
}

// Node.js strategy (future)
type NodejsStrategy struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	NodeVersion      string                 `protobuf:"bytes,1,opt,name=node_version,json=nodeVersion,proto3" json:"node_version,omitempty"`                 // "18", "20", "latest"
	PackageManager   string                 `protobuf:"bytes,2,opt,name=package_manager,json=packageManager,proto3" json:"package_manager,omitempty"`        // "npm", "yarn", "pnpm"
	StartScript      string                 `protobuf:"bytes,3,opt,name=start_script,json=startScript,proto3" json:"start_script,omitempty"`                 // "start", "server"
	EnableProduction bool                   `protobuf:"varint,4,opt,name=enable_production,json=enableProduction,proto3" json:"enable_production,omitempty"` // NODE_ENV=production
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *NodejsStrategy) Reset() {
	*x = NodejsStrategy{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodejsStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodejsStrategy) ProtoMessage() {}

func (x *NodejsStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodejsStrategy.ProtoReflect.Descriptor instead.
func (*NodejsStrategy) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{16}
}

func (x *NodejsStrategy) GetNodeVersion() string {
	if x != nil {
		return x.NodeVersion
	}
	return ""
}

func (x *NodejsStrategy) GetPackageManager() string {
	if x != nil {
		return x.PackageManager
	}
	return ""
}

func (x *NodejsStrategy) GetStartScript() string {
	if x != nil {
		return x.StartScript
	}
	return ""
}

func (x *NodejsStrategy) GetEnableProduction() bool {
	if x != nil {
		return x.EnableProduction
	}
	return false
}

// Tenant-aware resource limits
type TenantResourceLimits struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Per-build limits
	MaxMemoryBytes int64 `protobuf:"varint,1,opt,name=max_memory_bytes,json=maxMemoryBytes,proto3" json:"max_memory_bytes,omitempty"`
	MaxCpuCores    int32 `protobuf:"varint,2,opt,name=max_cpu_cores,json=maxCpuCores,proto3" json:"max_cpu_cores,omitempty"`
	MaxDiskBytes   int64 `protobuf:"varint,3,opt,name=max_disk_bytes,json=maxDiskBytes,proto3" json:"max_disk_bytes,omitempty"`
	TimeoutSeconds int32 `protobuf:"varint,4,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	// Tenant-wide quotas
	MaxConcurrentBuilds int32 `protobuf:"varint,5,opt,name=max_concurrent_builds,json=maxConcurrentBuilds,proto3" json:"max_concurrent_builds,omitempty"`   // Concurrent builds per tenant
	MaxDailyBuilds      int32 `protobuf:"varint,6,opt,name=max_daily_builds,json=maxDailyBuilds,proto3" json:"max_daily_builds,omitempty"`                  // Daily build quota
	MaxStorageBytes     int64 `protobuf:"varint,7,opt,name=max_storage_bytes,json=maxStorageBytes,proto3" json:"max_storage_bytes,omitempty"`               // Total storage quota
	MaxBuildTimeMinutes int32 `protobuf:"varint,8,opt,name=max_build_time_minutes,json=maxBuildTimeMinutes,proto3" json:"max_build_time_minutes,omitempty"` // Max time per build
	// Network restrictions
	AllowedRegistries    []string `protobuf:"bytes,9,rep,name=allowed_registries,json=allowedRegistries,proto3" json:"allowed_registries,omitempty"`              // Docker registries
	AllowedGitHosts      []string `protobuf:"bytes,10,rep,name=allowed_git_hosts,json=allowedGitHosts,proto3" json:"allowed_git_hosts,omitempty"`                 // Git hosts
	AllowExternalNetwork bool     `protobuf:"varint,11,opt,name=allow_external_network,json=allowExternalNetwork,proto3" json:"allow_external_network,omitempty"` // External network access
	// Security restrictions
	AllowPrivilegedBuilds bool     `protobuf:"varint,12,opt,name=allow_privileged_builds,json=allowPrivilegedBuilds,proto3" json:"allow_privileged_builds,omitempty"` // Privileged containers
	BlockedCommands       []string `protobuf:"bytes,13,rep,name=blocked_commands,json=blockedCommands,proto3" json:"blocked_commands,omitempty"`                      // Forbidden commands
	SandboxLevel          int32    `protobuf:"varint,14,opt,name=sandbox_level,json=sandboxLevel,proto3" json:"sandbox_level,omitempty"`                              // Isolation level (0-3)
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *TenantResourceLimits) Reset() {
	*x = TenantResourceLimits{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TenantResourceLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantResourceLimits) ProtoMessage() {}

func (x *TenantResourceLimits) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantResourceLimits.ProtoReflect.Descriptor instead.
func (*TenantResourceLimits) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{17}
}

func (x *TenantResourceLimits) GetMaxMemoryBytes() int64 {
	if x != nil {
		return x.MaxMemoryBytes
	}
	return 0
}

func (x *TenantResourceLimits) GetMaxCpuCores() int32 {
	if x != nil {
		return x.MaxCpuCores
	}
	return 0
}

func (x *TenantResourceLimits) GetMaxDiskBytes() int64 {
	if x != nil {
		return x.MaxDiskBytes
	}
	return 0
}

func (x *TenantResourceLimits) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *TenantResourceLimits) GetMaxConcurrentBuilds() int32 {
	if x != nil {
		return x.MaxConcurrentBuilds
	}
	return 0
}

func (x *TenantResourceLimits) GetMaxDailyBuilds() int32 {
	if x != nil {
		return x.MaxDailyBuilds
	}
	return 0
}

func (x *TenantResourceLimits) GetMaxStorageBytes() int64 {
	if x != nil {
		return x.MaxStorageBytes
	}
	return 0
}

func (x *TenantResourceLimits) GetMaxBuildTimeMinutes() int32 {
	if x != nil {
		return x.MaxBuildTimeMinutes
	}
	return 0
}

func (x *TenantResourceLimits) GetAllowedRegistries() []string {
	if x != nil {
		return x.AllowedRegistries
	}
	return nil
}

func (x *TenantResourceLimits) GetAllowedGitHosts() []string {
	if x != nil {
		return x.AllowedGitHosts
	}
	return nil
}

func (x *TenantResourceLimits) GetAllowExternalNetwork() bool {
	if x != nil {
		return x.AllowExternalNetwork
	}
	return false
}

func (x *TenantResourceLimits) GetAllowPrivilegedBuilds() bool {
	if x != nil {
		return x.AllowPrivilegedBuilds
	}
	return false
}

func (x *TenantResourceLimits) GetBlockedCommands() []string {
	if x != nil {
		return x.BlockedCommands
	}
	return nil
}

func (x *TenantResourceLimits) GetSandboxLevel() int32 {
	if x != nil {
		return x.SandboxLevel
	}
	return 0
}

// Main build configuration
type BuildConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Tenant identification
	Tenant *TenantContext `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	// What we're building from
	Source *BuildSource `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// What we're building to
	Target *BuildTarget `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
	// How to build it
	Strategy *BuildStrategy `protobuf:"bytes,4,opt,name=strategy,proto3" json:"strategy,omitempty"`
	// Build constraints (tenant-aware)
	Limits *TenantResourceLimits `protobuf:"bytes,5,opt,name=limits,proto3" json:"limits,omitempty"`
	// Build metadata
	BuildName string            `protobuf:"bytes,6,opt,name=build_name,json=buildName,proto3" json:"build_name,omitempty"`                                                    // Human-readable name
	Labels    map[string]string `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Custom labels
	// Suggested asset ID to use when registering the built artifact
	// This allows the caller to pre-generate the asset ID
	SuggestedAssetId string `protobuf:"bytes,8,opt,name=suggested_asset_id,json=suggestedAssetId,proto3" json:"suggested_asset_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BuildConfig) Reset() {
	*x = BuildConfig{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildConfig) ProtoMessage() {}

func (x *BuildConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildConfig.ProtoReflect.Descriptor instead.
func (*BuildConfig) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{18}
}

func (x *BuildConfig) GetTenant() *TenantContext {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *BuildConfig) GetSource() *BuildSource {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *BuildConfig) GetTarget() *BuildTarget {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *BuildConfig) GetStrategy() *BuildStrategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *BuildConfig) GetLimits() *TenantResourceLimits {
	if x != nil {
		return x.Limits
	}
	return nil
}

func (x *BuildConfig) GetBuildName() string {
	if x != nil {
		return x.BuildName
	}
	return ""
}

func (x *BuildConfig) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *BuildConfig) GetSuggestedAssetId() string {
	if x != nil {
		return x.SuggestedAssetId
	}
	return ""
}

// Build isolation metadata
type BuildIsolation struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SandboxId           string                 `protobuf:"bytes,1,opt,name=sandbox_id,json=sandboxId,proto3" json:"sandbox_id,omitempty"`                               // Unique sandbox identifier
	NetworkNamespace    string                 `protobuf:"bytes,2,opt,name=network_namespace,json=networkNamespace,proto3" json:"network_namespace,omitempty"`          // Network isolation
	FilesystemNamespace string                 `protobuf:"bytes,3,opt,name=filesystem_namespace,json=filesystemNamespace,proto3" json:"filesystem_namespace,omitempty"` // Filesystem isolation
	SecurityContexts    []string               `protobuf:"bytes,4,rep,name=security_contexts,json=securityContexts,proto3" json:"security_contexts,omitempty"`          // SELinux/AppArmor contexts
	CgroupPath          string                 `protobuf:"bytes,5,opt,name=cgroup_path,json=cgroupPath,proto3" json:"cgroup_path,omitempty"`                            // Resource cgroup
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *BuildIsolation) Reset() {
	*x = BuildIsolation{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildIsolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildIsolation) ProtoMessage() {}

func (x *BuildIsolation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildIsolation.ProtoReflect.Descriptor instead.
func (*BuildIsolation) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{19}
}

func (x *BuildIsolation) GetSandboxId() string {
	if x != nil {
		return x.SandboxId
	}
	return ""
}

func (x *BuildIsolation) GetNetworkNamespace() string {
	if x != nil {
		return x.NetworkNamespace
	}
	return ""
}

func (x *BuildIsolation) GetFilesystemNamespace() string {
	if x != nil {
		return x.FilesystemNamespace
	}
	return ""
}

func (x *BuildIsolation) GetSecurityContexts() []string {
	if x != nil {
		return x.SecurityContexts
	}
	return nil
}

func (x *BuildIsolation) GetCgroupPath() string {
	if x != nil {
		return x.CgroupPath
	}
	return ""
}

// Image metadata extracted from Docker images
type ImageMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OriginalImage string                 `protobuf:"bytes,1,opt,name=original_image,json=originalImage,proto3" json:"original_image,omitempty"`                                        // Original Docker image
	ImageDigest   string                 `protobuf:"bytes,2,opt,name=image_digest,json=imageDigest,proto3" json:"image_digest,omitempty"`                                              // Docker image SHA256
	Layers        []string               `protobuf:"bytes,3,rep,name=layers,proto3" json:"layers,omitempty"`                                                                           // Layer digests
	Labels        map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Docker labels
	Command       []string               `protobuf:"bytes,5,rep,name=command,proto3" json:"command,omitempty"`                                                                         // Original CMD
	Entrypoint    []string               `protobuf:"bytes,6,rep,name=entrypoint,proto3" json:"entrypoint,omitempty"`                                                                   // Original ENTRYPOINT
	WorkingDir    string                 `protobuf:"bytes,7,opt,name=working_dir,json=workingDir,proto3" json:"working_dir,omitempty"`                                                 // WORKDIR
	Env           map[string]string      `protobuf:"bytes,8,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`       // Environment variables
	ExposedPorts  []string               `protobuf:"bytes,9,rep,name=exposed_ports,json=exposedPorts,proto3" json:"exposed_ports,omitempty"`                                           // EXPOSE ports
	User          string                 `protobuf:"bytes,10,opt,name=user,proto3" json:"user,omitempty"`                                                                              // USER directive
	Volumes       []string               `protobuf:"bytes,11,rep,name=volumes,proto3" json:"volumes,omitempty"`                                                                        // VOLUME directives
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageMetadata) Reset() {
	*x = ImageMetadata{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageMetadata) ProtoMessage() {}

func (x *ImageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageMetadata.ProtoReflect.Descriptor instead.
func (*ImageMetadata) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{20}
}

func (x *ImageMetadata) GetOriginalImage() string {
	if x != nil {
		return x.OriginalImage
	}
	return ""
}

func (x *ImageMetadata) GetImageDigest() string {
	if x != nil {
		return x.ImageDigest
	}
	return ""
}

func (x *ImageMetadata) GetLayers() []string {
	if x != nil {
		return x.Layers
	}
	return nil
}

func (x *ImageMetadata) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ImageMetadata) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *ImageMetadata) GetEntrypoint() []string {
	if x != nil {
		return x.Entrypoint
	}
	return nil
}

func (x *ImageMetadata) GetWorkingDir() string {
	if x != nil {
		return x.WorkingDir
	}
	return ""
}

func (x *ImageMetadata) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *ImageMetadata) GetExposedPorts() []string {
	if x != nil {
		return x.ExposedPorts
	}
	return nil
}

func (x *ImageMetadata) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ImageMetadata) GetVolumes() []string {
	if x != nil {
		return x.Volumes
	}
	return nil
}

// Build performance metrics
type BuildMetrics struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	PullDurationMs     int64                  `protobuf:"varint,1,opt,name=pull_duration_ms,json=pullDurationMs,proto3" json:"pull_duration_ms,omitempty"`             // Time to pull image/source
	ExtractDurationMs  int64                  `protobuf:"varint,2,opt,name=extract_duration_ms,json=extractDurationMs,proto3" json:"extract_duration_ms,omitempty"`    // Time to extract layers
	BuildDurationMs    int64                  `protobuf:"varint,3,opt,name=build_duration_ms,json=buildDurationMs,proto3" json:"build_duration_ms,omitempty"`          // Time to build rootfs
	OptimizeDurationMs int64                  `protobuf:"varint,4,opt,name=optimize_duration_ms,json=optimizeDurationMs,proto3" json:"optimize_duration_ms,omitempty"` // Time for optimizations
	TotalDurationMs    int64                  `protobuf:"varint,5,opt,name=total_duration_ms,json=totalDurationMs,proto3" json:"total_duration_ms,omitempty"`          // Total build time
	OriginalSizeBytes  int64                  `protobuf:"varint,6,opt,name=original_size_bytes,json=originalSizeBytes,proto3" json:"original_size_bytes,omitempty"`    // Original image/source size
	RootfsSizeBytes    int64                  `protobuf:"varint,7,opt,name=rootfs_size_bytes,json=rootfsSizeBytes,proto3" json:"rootfs_size_bytes,omitempty"`          // Final rootfs size
	CompressionRatio   int64                  `protobuf:"varint,8,opt,name=compression_ratio,json=compressionRatio,proto3" json:"compression_ratio,omitempty"`         // Size reduction percentage
	MemoryPeakBytes    int64                  `protobuf:"varint,9,opt,name=memory_peak_bytes,json=memoryPeakBytes,proto3" json:"memory_peak_bytes,omitempty"`          // Peak memory usage
	DiskUsageBytes     int64                  `protobuf:"varint,10,opt,name=disk_usage_bytes,json=diskUsageBytes,proto3" json:"disk_usage_bytes,omitempty"`            // Temporary disk usage
	CpuCoresUsed       int32                  `protobuf:"varint,11,opt,name=cpu_cores_used,json=cpuCoresUsed,proto3" json:"cpu_cores_used,omitempty"`                  // CPU cores utilized
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BuildMetrics) Reset() {
	*x = BuildMetrics{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildMetrics) ProtoMessage() {}

func (x *BuildMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildMetrics.ProtoReflect.Descriptor instead.
func (*BuildMetrics) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{21}
}

func (x *BuildMetrics) GetPullDurationMs() int64 {
	if x != nil {
		return x.PullDurationMs
	}
	return 0
}

func (x *BuildMetrics) GetExtractDurationMs() int64 {
	if x != nil {
		return x.ExtractDurationMs
	}
	return 0
}

func (x *BuildMetrics) GetBuildDurationMs() int64 {
	if x != nil {
		return x.BuildDurationMs
	}
	return 0
}

func (x *BuildMetrics) GetOptimizeDurationMs() int64 {
	if x != nil {
		return x.OptimizeDurationMs
	}
	return 0
}

func (x *BuildMetrics) GetTotalDurationMs() int64 {
	if x != nil {
		return x.TotalDurationMs
	}
	return 0
}

func (x *BuildMetrics) GetOriginalSizeBytes() int64 {
	if x != nil {
		return x.OriginalSizeBytes
	}
	return 0
}

func (x *BuildMetrics) GetRootfsSizeBytes() int64 {
	if x != nil {
		return x.RootfsSizeBytes
	}
	return 0
}

func (x *BuildMetrics) GetCompressionRatio() int64 {
	if x != nil {
		return x.CompressionRatio
	}
	return 0
}

func (x *BuildMetrics) GetMemoryPeakBytes() int64 {
	if x != nil {
		return x.MemoryPeakBytes
	}
	return 0
}

func (x *BuildMetrics) GetDiskUsageBytes() int64 {
	if x != nil {
		return x.DiskUsageBytes
	}
	return 0
}

func (x *BuildMetrics) GetCpuCoresUsed() int32 {
	if x != nil {
		return x.CpuCoresUsed
	}
	return 0
}

// Complete build job information
type BuildJob struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	BuildId string                 `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`                  // Unique build identifier
	Config  *BuildConfig           `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`                                   // Build configuration
	State   BuildState             `protobuf:"varint,3,opt,name=state,proto3,enum=deploy.builderd.v1.BuildState" json:"state,omitempty"` // Current build state
	// Timestamps
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	StartedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	// Results
	RootfsPath      string `protobuf:"bytes,7,opt,name=rootfs_path,json=rootfsPath,proto3" json:"rootfs_path,omitempty"`                   // Path to built rootfs
	RootfsSizeBytes int64  `protobuf:"varint,8,opt,name=rootfs_size_bytes,json=rootfsSizeBytes,proto3" json:"rootfs_size_bytes,omitempty"` // Size of rootfs
	RootfsChecksum  string `protobuf:"bytes,9,opt,name=rootfs_checksum,json=rootfsChecksum,proto3" json:"rootfs_checksum,omitempty"`       // SHA256 of rootfs
	// Build metadata
	ImageMetadata *ImageMetadata  `protobuf:"bytes,10,opt,name=image_metadata,json=imageMetadata,proto3" json:"image_metadata,omitempty"`
	Metrics       *BuildMetrics   `protobuf:"bytes,11,opt,name=metrics,proto3" json:"metrics,omitempty"`
	Isolation     *BuildIsolation `protobuf:"bytes,12,opt,name=isolation,proto3" json:"isolation,omitempty"`
	// Error information
	ErrorMessage string   `protobuf:"bytes,13,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	BuildLogs    []string `protobuf:"bytes,14,rep,name=build_logs,json=buildLogs,proto3" json:"build_logs,omitempty"`
	// Progress information
	ProgressPercent int32  `protobuf:"varint,15,opt,name=progress_percent,json=progressPercent,proto3" json:"progress_percent,omitempty"` // 0-100
	CurrentStep     string `protobuf:"bytes,16,opt,name=current_step,json=currentStep,proto3" json:"current_step,omitempty"`              // Current build step
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BuildJob) Reset() {
	*x = BuildJob{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildJob) ProtoMessage() {}

func (x *BuildJob) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildJob.ProtoReflect.Descriptor instead.
func (*BuildJob) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{22}
}

func (x *BuildJob) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *BuildJob) GetConfig() *BuildConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *BuildJob) GetState() BuildState {
	if x != nil {
		return x.State
	}
	return BuildState_BUILD_STATE_UNSPECIFIED
}

func (x *BuildJob) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BuildJob) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *BuildJob) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *BuildJob) GetRootfsPath() string {
	if x != nil {
		return x.RootfsPath
	}
	return ""
}

func (x *BuildJob) GetRootfsSizeBytes() int64 {
	if x != nil {
		return x.RootfsSizeBytes
	}
	return 0
}

func (x *BuildJob) GetRootfsChecksum() string {
	if x != nil {
		return x.RootfsChecksum
	}
	return ""
}

func (x *BuildJob) GetImageMetadata() *ImageMetadata {
	if x != nil {
		return x.ImageMetadata
	}
	return nil
}

func (x *BuildJob) GetMetrics() *BuildMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *BuildJob) GetIsolation() *BuildIsolation {
	if x != nil {
		return x.Isolation
	}
	return nil
}

func (x *BuildJob) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *BuildJob) GetBuildLogs() []string {
	if x != nil {
		return x.BuildLogs
	}
	return nil
}

func (x *BuildJob) GetProgressPercent() int32 {
	if x != nil {
		return x.ProgressPercent
	}
	return 0
}

func (x *BuildJob) GetCurrentStep() string {
	if x != nil {
		return x.CurrentStep
	}
	return ""
}

// Build log entry for streaming
type StreamBuildLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Level         string                 `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"` // "info", "warn", "error", "debug"
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Component     string                 `protobuf:"bytes,4,opt,name=component,proto3" json:"component,omitempty"` // "puller", "extractor", "builder"
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamBuildLogsResponse) Reset() {
	*x = StreamBuildLogsResponse{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamBuildLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamBuildLogsResponse) ProtoMessage() {}

func (x *StreamBuildLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamBuildLogsResponse.ProtoReflect.Descriptor instead.
func (*StreamBuildLogsResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{23}
}

func (x *StreamBuildLogsResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *StreamBuildLogsResponse) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *StreamBuildLogsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StreamBuildLogsResponse) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *StreamBuildLogsResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Tenant usage statistics
type TenantUsageStats struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ActiveBuilds         int32                  `protobuf:"varint,1,opt,name=active_builds,json=activeBuilds,proto3" json:"active_builds,omitempty"`
	DailyBuildsUsed      int32                  `protobuf:"varint,2,opt,name=daily_builds_used,json=dailyBuildsUsed,proto3" json:"daily_builds_used,omitempty"`
	StorageBytesUsed     int64                  `protobuf:"varint,3,opt,name=storage_bytes_used,json=storageBytesUsed,proto3" json:"storage_bytes_used,omitempty"`
	ComputeMinutesUsed   int64                  `protobuf:"varint,4,opt,name=compute_minutes_used,json=computeMinutesUsed,proto3" json:"compute_minutes_used,omitempty"`
	BuildsQueued         int32                  `protobuf:"varint,5,opt,name=builds_queued,json=buildsQueued,proto3" json:"builds_queued,omitempty"`
	BuildsCompletedToday int32                  `protobuf:"varint,6,opt,name=builds_completed_today,json=buildsCompletedToday,proto3" json:"builds_completed_today,omitempty"`
	BuildsFailedToday    int32                  `protobuf:"varint,7,opt,name=builds_failed_today,json=buildsFailedToday,proto3" json:"builds_failed_today,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TenantUsageStats) Reset() {
	*x = TenantUsageStats{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TenantUsageStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantUsageStats) ProtoMessage() {}

func (x *TenantUsageStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantUsageStats.ProtoReflect.Descriptor instead.
func (*TenantUsageStats) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{24}
}

func (x *TenantUsageStats) GetActiveBuilds() int32 {
	if x != nil {
		return x.ActiveBuilds
	}
	return 0
}

func (x *TenantUsageStats) GetDailyBuildsUsed() int32 {
	if x != nil {
		return x.DailyBuildsUsed
	}
	return 0
}

func (x *TenantUsageStats) GetStorageBytesUsed() int64 {
	if x != nil {
		return x.StorageBytesUsed
	}
	return 0
}

func (x *TenantUsageStats) GetComputeMinutesUsed() int64 {
	if x != nil {
		return x.ComputeMinutesUsed
	}
	return 0
}

func (x *TenantUsageStats) GetBuildsQueued() int32 {
	if x != nil {
		return x.BuildsQueued
	}
	return 0
}

func (x *TenantUsageStats) GetBuildsCompletedToday() int32 {
	if x != nil {
		return x.BuildsCompletedToday
	}
	return 0
}

func (x *TenantUsageStats) GetBuildsFailedToday() int32 {
	if x != nil {
		return x.BuildsFailedToday
	}
	return 0
}

type QuotaViolation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QuotaType     string                 `protobuf:"bytes,1,opt,name=quota_type,json=quotaType,proto3" json:"quota_type,omitempty"` // "concurrent_builds", "daily_builds", etc.
	CurrentValue  int64                  `protobuf:"varint,2,opt,name=current_value,json=currentValue,proto3" json:"current_value,omitempty"`
	LimitValue    int64                  `protobuf:"varint,3,opt,name=limit_value,json=limitValue,proto3" json:"limit_value,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuotaViolation) Reset() {
	*x = QuotaViolation{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuotaViolation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuotaViolation) ProtoMessage() {}

func (x *QuotaViolation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuotaViolation.ProtoReflect.Descriptor instead.
func (*QuotaViolation) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{25}
}

func (x *QuotaViolation) GetQuotaType() string {
	if x != nil {
		return x.QuotaType
	}
	return ""
}

func (x *QuotaViolation) GetCurrentValue() int64 {
	if x != nil {
		return x.CurrentValue
	}
	return 0
}

func (x *QuotaViolation) GetLimitValue() int64 {
	if x != nil {
		return x.LimitValue
	}
	return 0
}

func (x *QuotaViolation) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request/Response messages
type CreateBuildRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *BuildConfig           `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBuildRequest) Reset() {
	*x = CreateBuildRequest{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBuildRequest) ProtoMessage() {}

func (x *CreateBuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBuildRequest.ProtoReflect.Descriptor instead.
func (*CreateBuildRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{26}
}

func (x *CreateBuildRequest) GetConfig() *BuildConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type CreateBuildResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BuildId       string                 `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	State         BuildState             `protobuf:"varint,2,opt,name=state,proto3,enum=deploy.builderd.v1.BuildState" json:"state,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	RootfsPath    string                 `protobuf:"bytes,4,opt,name=rootfs_path,json=rootfsPath,proto3" json:"rootfs_path,omitempty"` // Path to the generated rootfs for VM creation
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBuildResponse) Reset() {
	*x = CreateBuildResponse{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBuildResponse) ProtoMessage() {}

func (x *CreateBuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBuildResponse.ProtoReflect.Descriptor instead.
func (*CreateBuildResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{27}
}

func (x *CreateBuildResponse) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *CreateBuildResponse) GetState() BuildState {
	if x != nil {
		return x.State
	}
	return BuildState_BUILD_STATE_UNSPECIFIED
}

func (x *CreateBuildResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CreateBuildResponse) GetRootfsPath() string {
	if x != nil {
		return x.RootfsPath
	}
	return ""
}

type GetBuildRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BuildId       string                 `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // For authorization
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBuildRequest) Reset() {
	*x = GetBuildRequest{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuildRequest) ProtoMessage() {}

func (x *GetBuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuildRequest.ProtoReflect.Descriptor instead.
func (*GetBuildRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{28}
}

func (x *GetBuildRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *GetBuildRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type GetBuildResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Build         *BuildJob              `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBuildResponse) Reset() {
	*x = GetBuildResponse{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuildResponse) ProtoMessage() {}

func (x *GetBuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuildResponse.ProtoReflect.Descriptor instead.
func (*GetBuildResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{29}
}

func (x *GetBuildResponse) GetBuild() *BuildJob {
	if x != nil {
		return x.Build
	}
	return nil
}

type ListBuildsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // Required for filtering
	StateFilter   []BuildState           `protobuf:"varint,2,rep,packed,name=state_filter,json=stateFilter,proto3,enum=deploy.builderd.v1.BuildState" json:"state_filter,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBuildsRequest) Reset() {
	*x = ListBuildsRequest{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBuildsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBuildsRequest) ProtoMessage() {}

func (x *ListBuildsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBuildsRequest.ProtoReflect.Descriptor instead.
func (*ListBuildsRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{30}
}

func (x *ListBuildsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ListBuildsRequest) GetStateFilter() []BuildState {
	if x != nil {
		return x.StateFilter
	}
	return nil
}

func (x *ListBuildsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListBuildsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListBuildsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Builds        []*BuildJob            `protobuf:"bytes,1,rep,name=builds,proto3" json:"builds,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBuildsResponse) Reset() {
	*x = ListBuildsResponse{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBuildsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBuildsResponse) ProtoMessage() {}

func (x *ListBuildsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBuildsResponse.ProtoReflect.Descriptor instead.
func (*ListBuildsResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{31}
}

func (x *ListBuildsResponse) GetBuilds() []*BuildJob {
	if x != nil {
		return x.Builds
	}
	return nil
}

func (x *ListBuildsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListBuildsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type CancelBuildRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BuildId       string                 `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // For authorization
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelBuildRequest) Reset() {
	*x = CancelBuildRequest{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelBuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelBuildRequest) ProtoMessage() {}

func (x *CancelBuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelBuildRequest.ProtoReflect.Descriptor instead.
func (*CancelBuildRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{32}
}

func (x *CancelBuildRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *CancelBuildRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type CancelBuildResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	State         BuildState             `protobuf:"varint,2,opt,name=state,proto3,enum=deploy.builderd.v1.BuildState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelBuildResponse) Reset() {
	*x = CancelBuildResponse{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelBuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelBuildResponse) ProtoMessage() {}

func (x *CancelBuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelBuildResponse.ProtoReflect.Descriptor instead.
func (*CancelBuildResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{33}
}

func (x *CancelBuildResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelBuildResponse) GetState() BuildState {
	if x != nil {
		return x.State
	}
	return BuildState_BUILD_STATE_UNSPECIFIED
}

type DeleteBuildRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BuildId       string                 `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // For authorization
	Force         bool                   `protobuf:"varint,3,opt,name=force,proto3" json:"force,omitempty"`                      // Delete even if running
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBuildRequest) Reset() {
	*x = DeleteBuildRequest{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBuildRequest) ProtoMessage() {}

func (x *DeleteBuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBuildRequest.ProtoReflect.Descriptor instead.
func (*DeleteBuildRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{34}
}

func (x *DeleteBuildRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *DeleteBuildRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *DeleteBuildRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type DeleteBuildResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBuildResponse) Reset() {
	*x = DeleteBuildResponse{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBuildResponse) ProtoMessage() {}

func (x *DeleteBuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBuildResponse.ProtoReflect.Descriptor instead.
func (*DeleteBuildResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteBuildResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type StreamBuildLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BuildId       string                 `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"` // For authorization
	Follow        bool                   `protobuf:"varint,3,opt,name=follow,proto3" json:"follow,omitempty"`                    // Continue streaming new logs
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamBuildLogsRequest) Reset() {
	*x = StreamBuildLogsRequest{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamBuildLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamBuildLogsRequest) ProtoMessage() {}

func (x *StreamBuildLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamBuildLogsRequest.ProtoReflect.Descriptor instead.
func (*StreamBuildLogsRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{36}
}

func (x *StreamBuildLogsRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *StreamBuildLogsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *StreamBuildLogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

type GetTenantQuotasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTenantQuotasRequest) Reset() {
	*x = GetTenantQuotasRequest{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTenantQuotasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantQuotasRequest) ProtoMessage() {}

func (x *GetTenantQuotasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantQuotasRequest.ProtoReflect.Descriptor instead.
func (*GetTenantQuotasRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{37}
}

func (x *GetTenantQuotasRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type GetTenantQuotasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CurrentLimits *TenantResourceLimits  `protobuf:"bytes,1,opt,name=current_limits,json=currentLimits,proto3" json:"current_limits,omitempty"`
	CurrentUsage  *TenantUsageStats      `protobuf:"bytes,2,opt,name=current_usage,json=currentUsage,proto3" json:"current_usage,omitempty"`
	Violations    []*QuotaViolation      `protobuf:"bytes,3,rep,name=violations,proto3" json:"violations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTenantQuotasResponse) Reset() {
	*x = GetTenantQuotasResponse{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTenantQuotasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantQuotasResponse) ProtoMessage() {}

func (x *GetTenantQuotasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantQuotasResponse.ProtoReflect.Descriptor instead.
func (*GetTenantQuotasResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{38}
}

func (x *GetTenantQuotasResponse) GetCurrentLimits() *TenantResourceLimits {
	if x != nil {
		return x.CurrentLimits
	}
	return nil
}

func (x *GetTenantQuotasResponse) GetCurrentUsage() *TenantUsageStats {
	if x != nil {
		return x.CurrentUsage
	}
	return nil
}

func (x *GetTenantQuotasResponse) GetViolations() []*QuotaViolation {
	if x != nil {
		return x.Violations
	}
	return nil
}

type GetBuildStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBuildStatsRequest) Reset() {
	*x = GetBuildStatsRequest{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBuildStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuildStatsRequest) ProtoMessage() {}

func (x *GetBuildStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuildStatsRequest.ProtoReflect.Descriptor instead.
func (*GetBuildStatsRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{39}
}

func (x *GetBuildStatsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GetBuildStatsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetBuildStatsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type GetBuildStatsResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TotalBuilds         int32                  `protobuf:"varint,1,opt,name=total_builds,json=totalBuilds,proto3" json:"total_builds,omitempty"`
	SuccessfulBuilds    int32                  `protobuf:"varint,2,opt,name=successful_builds,json=successfulBuilds,proto3" json:"successful_builds,omitempty"`
	FailedBuilds        int32                  `protobuf:"varint,3,opt,name=failed_builds,json=failedBuilds,proto3" json:"failed_builds,omitempty"`
	AvgBuildTimeMs      int64                  `protobuf:"varint,4,opt,name=avg_build_time_ms,json=avgBuildTimeMs,proto3" json:"avg_build_time_ms,omitempty"`
	TotalStorageBytes   int64                  `protobuf:"varint,5,opt,name=total_storage_bytes,json=totalStorageBytes,proto3" json:"total_storage_bytes,omitempty"`
	TotalComputeMinutes int64                  `protobuf:"varint,6,opt,name=total_compute_minutes,json=totalComputeMinutes,proto3" json:"total_compute_minutes,omitempty"`
	RecentBuilds        []*BuildJob            `protobuf:"bytes,7,rep,name=recent_builds,json=recentBuilds,proto3" json:"recent_builds,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetBuildStatsResponse) Reset() {
	*x = GetBuildStatsResponse{}
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBuildStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBuildStatsResponse) ProtoMessage() {}

func (x *GetBuildStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_builderd_v1_builder_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBuildStatsResponse.ProtoReflect.Descriptor instead.
func (*GetBuildStatsResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP(), []int{40}
}

func (x *GetBuildStatsResponse) GetTotalBuilds() int32 {
	if x != nil {
		return x.TotalBuilds
	}
	return 0
}

func (x *GetBuildStatsResponse) GetSuccessfulBuilds() int32 {
	if x != nil {
		return x.SuccessfulBuilds
	}
	return 0
}

func (x *GetBuildStatsResponse) GetFailedBuilds() int32 {
	if x != nil {
		return x.FailedBuilds
	}
	return 0
}

func (x *GetBuildStatsResponse) GetAvgBuildTimeMs() int64 {
	if x != nil {
		return x.AvgBuildTimeMs
	}
	return 0
}

func (x *GetBuildStatsResponse) GetTotalStorageBytes() int64 {
	if x != nil {
		return x.TotalStorageBytes
	}
	return 0
}

func (x *GetBuildStatsResponse) GetTotalComputeMinutes() int64 {
	if x != nil {
		return x.TotalComputeMinutes
	}
	return 0
}

func (x *GetBuildStatsResponse) GetRecentBuilds() []*BuildJob {
	if x != nil {
		return x.RecentBuilds
	}
	return nil
}

var File_proto_deploy_builderd_v1_builder_proto protoreflect.FileDescriptor

const file_proto_deploy_builderd_v1_builder_proto_rawDesc = "" +
	"\n" +
	"&proto/deploy/builderd/v1/builder.proto\x12\x12deploy.builderd.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd6\x02\n" +
	"\rTenantContext\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x1f\n" +
	"\vcustomer_id\x18\x02 \x01(\tR\n" +
	"customerId\x12'\n" +
	"\x0forganization_id\x18\x03 \x01(\tR\x0eorganizationId\x122\n" +
	"\x04tier\x18\x04 \x01(\x0e2\x1e.deploy.builderd.v1.TenantTierR\x04tier\x12 \n" +
	"\vpermissions\x18\x05 \x03(\tR\vpermissions\x12K\n" +
	"\bmetadata\x18\x06 \x03(\v2/.deploy.builderd.v1.TenantContext.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf9\x01\n" +
	"\vBuildSource\x12J\n" +
	"\fdocker_image\x18\x01 \x01(\v2%.deploy.builderd.v1.DockerImageSourceH\x00R\vdockerImage\x12P\n" +
	"\x0egit_repository\x18\x02 \x01(\v2'.deploy.builderd.v1.GitRepositorySourceH\x00R\rgitRepository\x12=\n" +
	"\aarchive\x18\x03 \x01(\v2!.deploy.builderd.v1.ArchiveSourceH\x00R\aarchiveB\r\n" +
	"\vsource_type\"\x81\x01\n" +
	"\x11DockerImageSource\x12\x1b\n" +
	"\timage_uri\x18\x01 \x01(\tR\bimageUri\x122\n" +
	"\x04auth\x18\x02 \x01(\v2\x1e.deploy.builderd.v1.DockerAuthR\x04auth\x12\x1b\n" +
	"\tpull_tags\x18\x03 \x03(\tR\bpullTags\"v\n" +
	"\n" +
	"DockerAuth\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\x12\x1a\n" +
	"\bregistry\x18\x04 \x01(\tR\bregistry\"\xa4\x01\n" +
	"\x13GitRepositorySource\x12%\n" +
	"\x0erepository_url\x18\x01 \x01(\tR\rrepositoryUrl\x12\x10\n" +
	"\x03ref\x18\x02 \x01(\tR\x03ref\x12#\n" +
	"\rbuild_context\x18\x03 \x01(\tR\fbuildContext\x12/\n" +
	"\x04auth\x18\x04 \x01(\v2\x1b.deploy.builderd.v1.GitAuthR\x04auth\"p\n" +
	"\aGitAuth\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x17\n" +
	"\assh_key\x18\x03 \x01(\tR\x06sshKey\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\"x\n" +
	"\rArchiveSource\x12\x1f\n" +
	"\varchive_url\x18\x01 \x01(\tR\n" +
	"archiveUrl\x12!\n" +
	"\farchive_type\x18\x02 \x01(\tR\varchiveType\x12#\n" +
	"\rbuild_context\x18\x03 \x01(\tR\fbuildContext\"\xb7\x01\n" +
	"\vBuildTarget\x12J\n" +
	"\x0emicrovm_rootfs\x18\x01 \x01(\v2!.deploy.builderd.v1.MicroVMRootfsH\x00R\rmicrovmRootfs\x12M\n" +
	"\x0fcontainer_image\x18\x02 \x01(\v2\".deploy.builderd.v1.ContainerImageH\x00R\x0econtainerImageB\r\n" +
	"\vtarget_type\"\x95\x02\n" +
	"\rMicroVMRootfs\x12E\n" +
	"\rinit_strategy\x18\x01 \x01(\x0e2 .deploy.builderd.v1.InitStrategyR\finitStrategy\x12H\n" +
	"\x0eruntime_config\x18\x02 \x01(\v2!.deploy.builderd.v1.RuntimeConfigR\rruntimeConfig\x12L\n" +
	"\foptimization\x18\x03 \x01(\v2(.deploy.builderd.v1.OptimizationSettingsR\foptimization\x12%\n" +
	"\x0epreserve_paths\x18\x04 \x03(\tR\rpreservePaths\"G\n" +
	"\x0eContainerImage\x12\x1d\n" +
	"\n" +
	"base_image\x18\x01 \x01(\tR\tbaseImage\x12\x16\n" +
	"\x06layers\x18\x02 \x03(\tR\x06layers\"\xa5\x02\n" +
	"\rRuntimeConfig\x12\x18\n" +
	"\acommand\x18\x01 \x03(\tR\acommand\x12\x1e\n" +
	"\n" +
	"entrypoint\x18\x02 \x03(\tR\n" +
	"entrypoint\x12\x1f\n" +
	"\vworking_dir\x18\x03 \x01(\tR\n" +
	"workingDir\x12T\n" +
	"\venvironment\x18\x04 \x03(\v22.deploy.builderd.v1.RuntimeConfig.EnvironmentEntryR\venvironment\x12#\n" +
	"\rexposed_ports\x18\x05 \x03(\tR\fexposedPorts\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x89\x02\n" +
	"\x14OptimizationSettings\x12.\n" +
	"\x13strip_debug_symbols\x18\x01 \x01(\bR\x11stripDebugSymbols\x12+\n" +
	"\x11compress_binaries\x18\x02 \x01(\bR\x10compressBinaries\x12\x1f\n" +
	"\vremove_docs\x18\x03 \x01(\bR\n" +
	"removeDocs\x12!\n" +
	"\fremove_cache\x18\x04 \x01(\bR\vremoveCache\x12%\n" +
	"\x0epreserve_paths\x18\x05 \x03(\tR\rpreservePaths\x12)\n" +
	"\x10exclude_patterns\x18\x06 \x03(\tR\x0fexcludePatterns\"\xaf\x02\n" +
	"\rBuildStrategy\x12R\n" +
	"\x0edocker_extract\x18\x01 \x01(\v2).deploy.builderd.v1.DockerExtractStrategyH\x00R\rdockerExtract\x12:\n" +
	"\x06go_api\x18\x02 \x01(\v2!.deploy.builderd.v1.GoApiStrategyH\x00R\x05goApi\x12?\n" +
	"\asinatra\x18\x03 \x01(\v2#.deploy.builderd.v1.SinatraStrategyH\x00R\asinatra\x12<\n" +
	"\x06nodejs\x18\x04 \x01(\v2\".deploy.builderd.v1.NodejsStrategyH\x00R\x06nodejsB\x0f\n" +
	"\rstrategy_type\"\x9a\x01\n" +
	"\x15DockerExtractStrategy\x12'\n" +
	"\x0fpreserve_layers\x18\x01 \x01(\bR\x0epreserveLayers\x12-\n" +
	"\x12flatten_filesystem\x18\x02 \x01(\bR\x11flattenFilesystem\x12)\n" +
	"\x10exclude_patterns\x18\x03 \x03(\tR\x0fexcludePatterns\"\x91\x01\n" +
	"\rGoApiStrategy\x12\x1d\n" +
	"\n" +
	"go_version\x18\x01 \x01(\tR\tgoVersion\x12\x1f\n" +
	"\vbuild_flags\x18\x02 \x03(\tR\n" +
	"buildFlags\x12!\n" +
	"\fmain_package\x18\x03 \x01(\tR\vmainPackage\x12\x1d\n" +
	"\n" +
	"enable_cgo\x18\x04 \x01(\bR\tenableCgo\"\x8d\x02\n" +
	"\x0fSinatraStrategy\x12!\n" +
	"\fruby_version\x18\x01 \x01(\tR\vrubyVersion\x12!\n" +
	"\fgemfile_path\x18\x02 \x01(\tR\vgemfilePath\x12\x1f\n" +
	"\vrack_server\x18\x03 \x01(\tR\n" +
	"rackServer\x12T\n" +
	"\vrack_config\x18\x04 \x03(\v23.deploy.builderd.v1.SinatraStrategy.RackConfigEntryR\n" +
	"rackConfig\x1a=\n" +
	"\x0fRackConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xac\x01\n" +
	"\x0eNodejsStrategy\x12!\n" +
	"\fnode_version\x18\x01 \x01(\tR\vnodeVersion\x12'\n" +
	"\x0fpackage_manager\x18\x02 \x01(\tR\x0epackageManager\x12!\n" +
	"\fstart_script\x18\x03 \x01(\tR\vstartScript\x12+\n" +
	"\x11enable_production\x18\x04 \x01(\bR\x10enableProduction\"\x8b\x05\n" +
	"\x14TenantResourceLimits\x12(\n" +
	"\x10max_memory_bytes\x18\x01 \x01(\x03R\x0emaxMemoryBytes\x12\"\n" +
	"\rmax_cpu_cores\x18\x02 \x01(\x05R\vmaxCpuCores\x12$\n" +
	"\x0emax_disk_bytes\x18\x03 \x01(\x03R\fmaxDiskBytes\x12'\n" +
	"\x0ftimeout_seconds\x18\x04 \x01(\x05R\x0etimeoutSeconds\x122\n" +
	"\x15max_concurrent_builds\x18\x05 \x01(\x05R\x13maxConcurrentBuilds\x12(\n" +
	"\x10max_daily_builds\x18\x06 \x01(\x05R\x0emaxDailyBuilds\x12*\n" +
	"\x11max_storage_bytes\x18\a \x01(\x03R\x0fmaxStorageBytes\x123\n" +
	"\x16max_build_time_minutes\x18\b \x01(\x05R\x13maxBuildTimeMinutes\x12-\n" +
	"\x12allowed_registries\x18\t \x03(\tR\x11allowedRegistries\x12*\n" +
	"\x11allowed_git_hosts\x18\n" +
	" \x03(\tR\x0fallowedGitHosts\x124\n" +
	"\x16allow_external_network\x18\v \x01(\bR\x14allowExternalNetwork\x126\n" +
	"\x17allow_privileged_builds\x18\f \x01(\bR\x15allowPrivilegedBuilds\x12)\n" +
	"\x10blocked_commands\x18\r \x03(\tR\x0fblockedCommands\x12#\n" +
	"\rsandbox_level\x18\x0e \x01(\x05R\fsandboxLevel\"\x88\x04\n" +
	"\vBuildConfig\x129\n" +
	"\x06tenant\x18\x01 \x01(\v2!.deploy.builderd.v1.TenantContextR\x06tenant\x127\n" +
	"\x06source\x18\x02 \x01(\v2\x1f.deploy.builderd.v1.BuildSourceR\x06source\x127\n" +
	"\x06target\x18\x03 \x01(\v2\x1f.deploy.builderd.v1.BuildTargetR\x06target\x12=\n" +
	"\bstrategy\x18\x04 \x01(\v2!.deploy.builderd.v1.BuildStrategyR\bstrategy\x12@\n" +
	"\x06limits\x18\x05 \x01(\v2(.deploy.builderd.v1.TenantResourceLimitsR\x06limits\x12\x1d\n" +
	"\n" +
	"build_name\x18\x06 \x01(\tR\tbuildName\x12C\n" +
	"\x06labels\x18\a \x03(\v2+.deploy.builderd.v1.BuildConfig.LabelsEntryR\x06labels\x12,\n" +
	"\x12suggested_asset_id\x18\b \x01(\tR\x10suggestedAssetId\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdd\x01\n" +
	"\x0eBuildIsolation\x12\x1d\n" +
	"\n" +
	"sandbox_id\x18\x01 \x01(\tR\tsandboxId\x12+\n" +
	"\x11network_namespace\x18\x02 \x01(\tR\x10networkNamespace\x121\n" +
	"\x14filesystem_namespace\x18\x03 \x01(\tR\x13filesystemNamespace\x12+\n" +
	"\x11security_contexts\x18\x04 \x03(\tR\x10securityContexts\x12\x1f\n" +
	"\vcgroup_path\x18\x05 \x01(\tR\n" +
	"cgroupPath\"\x97\x04\n" +
	"\rImageMetadata\x12%\n" +
	"\x0eoriginal_image\x18\x01 \x01(\tR\roriginalImage\x12!\n" +
	"\fimage_digest\x18\x02 \x01(\tR\vimageDigest\x12\x16\n" +
	"\x06layers\x18\x03 \x03(\tR\x06layers\x12E\n" +
	"\x06labels\x18\x04 \x03(\v2-.deploy.builderd.v1.ImageMetadata.LabelsEntryR\x06labels\x12\x18\n" +
	"\acommand\x18\x05 \x03(\tR\acommand\x12\x1e\n" +
	"\n" +
	"entrypoint\x18\x06 \x03(\tR\n" +
	"entrypoint\x12\x1f\n" +
	"\vworking_dir\x18\a \x01(\tR\n" +
	"workingDir\x12<\n" +
	"\x03env\x18\b \x03(\v2*.deploy.builderd.v1.ImageMetadata.EnvEntryR\x03env\x12#\n" +
	"\rexposed_ports\x18\t \x03(\tR\fexposedPorts\x12\x12\n" +
	"\x04user\x18\n" +
	" \x01(\tR\x04user\x12\x18\n" +
	"\avolumes\x18\v \x03(\tR\avolumes\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf7\x03\n" +
	"\fBuildMetrics\x12(\n" +
	"\x10pull_duration_ms\x18\x01 \x01(\x03R\x0epullDurationMs\x12.\n" +
	"\x13extract_duration_ms\x18\x02 \x01(\x03R\x11extractDurationMs\x12*\n" +
	"\x11build_duration_ms\x18\x03 \x01(\x03R\x0fbuildDurationMs\x120\n" +
	"\x14optimize_duration_ms\x18\x04 \x01(\x03R\x12optimizeDurationMs\x12*\n" +
	"\x11total_duration_ms\x18\x05 \x01(\x03R\x0ftotalDurationMs\x12.\n" +
	"\x13original_size_bytes\x18\x06 \x01(\x03R\x11originalSizeBytes\x12*\n" +
	"\x11rootfs_size_bytes\x18\a \x01(\x03R\x0frootfsSizeBytes\x12+\n" +
	"\x11compression_ratio\x18\b \x01(\x03R\x10compressionRatio\x12*\n" +
	"\x11memory_peak_bytes\x18\t \x01(\x03R\x0fmemoryPeakBytes\x12(\n" +
	"\x10disk_usage_bytes\x18\n" +
	" \x01(\x03R\x0ediskUsageBytes\x12$\n" +
	"\x0ecpu_cores_used\x18\v \x01(\x05R\fcpuCoresUsed\"\x99\x06\n" +
	"\bBuildJob\x12\x19\n" +
	"\bbuild_id\x18\x01 \x01(\tR\abuildId\x127\n" +
	"\x06config\x18\x02 \x01(\v2\x1f.deploy.builderd.v1.BuildConfigR\x06config\x124\n" +
	"\x05state\x18\x03 \x01(\x0e2\x1e.deploy.builderd.v1.BuildStateR\x05state\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"started_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12\x1f\n" +
	"\vrootfs_path\x18\a \x01(\tR\n" +
	"rootfsPath\x12*\n" +
	"\x11rootfs_size_bytes\x18\b \x01(\x03R\x0frootfsSizeBytes\x12'\n" +
	"\x0frootfs_checksum\x18\t \x01(\tR\x0erootfsChecksum\x12H\n" +
	"\x0eimage_metadata\x18\n" +
	" \x01(\v2!.deploy.builderd.v1.ImageMetadataR\rimageMetadata\x12:\n" +
	"\ametrics\x18\v \x01(\v2 .deploy.builderd.v1.BuildMetricsR\ametrics\x12@\n" +
	"\tisolation\x18\f \x01(\v2\".deploy.builderd.v1.BuildIsolationR\tisolation\x12#\n" +
	"\rerror_message\x18\r \x01(\tR\ferrorMessage\x12\x1d\n" +
	"\n" +
	"build_logs\x18\x0e \x03(\tR\tbuildLogs\x12)\n" +
	"\x10progress_percent\x18\x0f \x01(\x05R\x0fprogressPercent\x12!\n" +
	"\fcurrent_step\x18\x10 \x01(\tR\vcurrentStep\"\xb5\x02\n" +
	"\x17StreamBuildLogsResponse\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x14\n" +
	"\x05level\x18\x02 \x01(\tR\x05level\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1c\n" +
	"\tcomponent\x18\x04 \x01(\tR\tcomponent\x12U\n" +
	"\bmetadata\x18\x05 \x03(\v29.deploy.builderd.v1.StreamBuildLogsResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xce\x02\n" +
	"\x10TenantUsageStats\x12#\n" +
	"\ractive_builds\x18\x01 \x01(\x05R\factiveBuilds\x12*\n" +
	"\x11daily_builds_used\x18\x02 \x01(\x05R\x0fdailyBuildsUsed\x12,\n" +
	"\x12storage_bytes_used\x18\x03 \x01(\x03R\x10storageBytesUsed\x120\n" +
	"\x14compute_minutes_used\x18\x04 \x01(\x03R\x12computeMinutesUsed\x12#\n" +
	"\rbuilds_queued\x18\x05 \x01(\x05R\fbuildsQueued\x124\n" +
	"\x16builds_completed_today\x18\x06 \x01(\x05R\x14buildsCompletedToday\x12.\n" +
	"\x13builds_failed_today\x18\a \x01(\x05R\x11buildsFailedToday\"\x8f\x01\n" +
	"\x0eQuotaViolation\x12\x1d\n" +
	"\n" +
	"quota_type\x18\x01 \x01(\tR\tquotaType\x12#\n" +
	"\rcurrent_value\x18\x02 \x01(\x03R\fcurrentValue\x12\x1f\n" +
	"\vlimit_value\x18\x03 \x01(\x03R\n" +
	"limitValue\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"M\n" +
	"\x12CreateBuildRequest\x127\n" +
	"\x06config\x18\x01 \x01(\v2\x1f.deploy.builderd.v1.BuildConfigR\x06config\"\xc2\x01\n" +
	"\x13CreateBuildResponse\x12\x19\n" +
	"\bbuild_id\x18\x01 \x01(\tR\abuildId\x124\n" +
	"\x05state\x18\x02 \x01(\x0e2\x1e.deploy.builderd.v1.BuildStateR\x05state\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x1f\n" +
	"\vrootfs_path\x18\x04 \x01(\tR\n" +
	"rootfsPath\"I\n" +
	"\x0fGetBuildRequest\x12\x19\n" +
	"\bbuild_id\x18\x01 \x01(\tR\abuildId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\"F\n" +
	"\x10GetBuildResponse\x122\n" +
	"\x05build\x18\x01 \x01(\v2\x1c.deploy.builderd.v1.BuildJobR\x05build\"\xaf\x01\n" +
	"\x11ListBuildsRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12A\n" +
	"\fstate_filter\x18\x02 \x03(\x0e2\x1e.deploy.builderd.v1.BuildStateR\vstateFilter\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tR\tpageToken\"\x93\x01\n" +
	"\x12ListBuildsResponse\x124\n" +
	"\x06builds\x18\x01 \x03(\v2\x1c.deploy.builderd.v1.BuildJobR\x06builds\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"L\n" +
	"\x12CancelBuildRequest\x12\x19\n" +
	"\bbuild_id\x18\x01 \x01(\tR\abuildId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\"e\n" +
	"\x13CancelBuildResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x124\n" +
	"\x05state\x18\x02 \x01(\x0e2\x1e.deploy.builderd.v1.BuildStateR\x05state\"b\n" +
	"\x12DeleteBuildRequest\x12\x19\n" +
	"\bbuild_id\x18\x01 \x01(\tR\abuildId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x14\n" +
	"\x05force\x18\x03 \x01(\bR\x05force\"/\n" +
	"\x13DeleteBuildResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"h\n" +
	"\x16StreamBuildLogsRequest\x12\x19\n" +
	"\bbuild_id\x18\x01 \x01(\tR\abuildId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x16\n" +
	"\x06follow\x18\x03 \x01(\bR\x06follow\"5\n" +
	"\x16GetTenantQuotasRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\"\xf9\x01\n" +
	"\x17GetTenantQuotasResponse\x12O\n" +
	"\x0ecurrent_limits\x18\x01 \x01(\v2(.deploy.builderd.v1.TenantResourceLimitsR\rcurrentLimits\x12I\n" +
	"\rcurrent_usage\x18\x02 \x01(\v2$.deploy.builderd.v1.TenantUsageStatsR\fcurrentUsage\x12B\n" +
	"\n" +
	"violations\x18\x03 \x03(\v2\".deploy.builderd.v1.QuotaViolationR\n" +
	"violations\"\xa5\x01\n" +
	"\x14GetBuildStatsRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\"\xde\x02\n" +
	"\x15GetBuildStatsResponse\x12!\n" +
	"\ftotal_builds\x18\x01 \x01(\x05R\vtotalBuilds\x12+\n" +
	"\x11successful_builds\x18\x02 \x01(\x05R\x10successfulBuilds\x12#\n" +
	"\rfailed_builds\x18\x03 \x01(\x05R\ffailedBuilds\x12)\n" +
	"\x11avg_build_time_ms\x18\x04 \x01(\x03R\x0eavgBuildTimeMs\x12.\n" +
	"\x13total_storage_bytes\x18\x05 \x01(\x03R\x11totalStorageBytes\x122\n" +
	"\x15total_compute_minutes\x18\x06 \x01(\x03R\x13totalComputeMinutes\x12A\n" +
	"\rrecent_builds\x18\a \x03(\v2\x1c.deploy.builderd.v1.BuildJobR\frecentBuilds*\x95\x02\n" +
	"\n" +
	"BuildState\x12\x1b\n" +
	"\x17BUILD_STATE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13BUILD_STATE_PENDING\x10\x01\x12\x17\n" +
	"\x13BUILD_STATE_PULLING\x10\x02\x12\x1a\n" +
	"\x16BUILD_STATE_EXTRACTING\x10\x03\x12\x18\n" +
	"\x14BUILD_STATE_BUILDING\x10\x04\x12\x1a\n" +
	"\x16BUILD_STATE_OPTIMIZING\x10\x05\x12\x19\n" +
	"\x15BUILD_STATE_COMPLETED\x10\x06\x12\x16\n" +
	"\x12BUILD_STATE_FAILED\x10\a\x12\x19\n" +
	"\x15BUILD_STATE_CANCELLED\x10\b\x12\x18\n" +
	"\x14BUILD_STATE_CLEANING\x10\t*\x8b\x01\n" +
	"\n" +
	"TenantTier\x12\x1b\n" +
	"\x17TENANT_TIER_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10TENANT_TIER_FREE\x10\x01\x12\x13\n" +
	"\x0fTENANT_TIER_PRO\x10\x02\x12\x1a\n" +
	"\x16TENANT_TIER_ENTERPRISE\x10\x03\x12\x19\n" +
	"\x15TENANT_TIER_DEDICATED\x10\x04*y\n" +
	"\fInitStrategy\x12\x1d\n" +
	"\x19INIT_STRATEGY_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12INIT_STRATEGY_TINI\x10\x01\x12\x18\n" +
	"\x14INIT_STRATEGY_DIRECT\x10\x02\x12\x18\n" +
	"\x14INIT_STRATEGY_CUSTOM\x10\x032\xa4\x06\n" +
	"\x0eBuilderService\x12^\n" +
	"\vCreateBuild\x12&.deploy.builderd.v1.CreateBuildRequest\x1a'.deploy.builderd.v1.CreateBuildResponse\x12U\n" +
	"\bGetBuild\x12#.deploy.builderd.v1.GetBuildRequest\x1a$.deploy.builderd.v1.GetBuildResponse\x12[\n" +
	"\n" +
	"ListBuilds\x12%.deploy.builderd.v1.ListBuildsRequest\x1a&.deploy.builderd.v1.ListBuildsResponse\x12^\n" +
	"\vCancelBuild\x12&.deploy.builderd.v1.CancelBuildRequest\x1a'.deploy.builderd.v1.CancelBuildResponse\x12^\n" +
	"\vDeleteBuild\x12&.deploy.builderd.v1.DeleteBuildRequest\x1a'.deploy.builderd.v1.DeleteBuildResponse\x12l\n" +
	"\x0fStreamBuildLogs\x12*.deploy.builderd.v1.StreamBuildLogsRequest\x1a+.deploy.builderd.v1.StreamBuildLogsResponse0\x01\x12j\n" +
	"\x0fGetTenantQuotas\x12*.deploy.builderd.v1.GetTenantQuotasRequest\x1a+.deploy.builderd.v1.GetTenantQuotasResponse\x12d\n" +
	"\rGetBuildStats\x12(.deploy.builderd.v1.GetBuildStatsRequest\x1a).deploy.builderd.v1.GetBuildStatsResponseBEZCgithub.com/unkeyed/unkey/go/gen/proto/deploy/builderd/v1;builderdv1b\x06proto3"

var (
	file_proto_deploy_builderd_v1_builder_proto_rawDescOnce sync.Once
	file_proto_deploy_builderd_v1_builder_proto_rawDescData []byte
)

func file_proto_deploy_builderd_v1_builder_proto_rawDescGZIP() []byte {
	file_proto_deploy_builderd_v1_builder_proto_rawDescOnce.Do(func() {
		file_proto_deploy_builderd_v1_builder_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_deploy_builderd_v1_builder_proto_rawDesc), len(file_proto_deploy_builderd_v1_builder_proto_rawDesc)))
	})
	return file_proto_deploy_builderd_v1_builder_proto_rawDescData
}

var file_proto_deploy_builderd_v1_builder_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_deploy_builderd_v1_builder_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_proto_deploy_builderd_v1_builder_proto_goTypes = []any{
	(BuildState)(0),                 // 0: deploy.builderd.v1.BuildState
	(TenantTier)(0),                 // 1: deploy.builderd.v1.TenantTier
	(InitStrategy)(0),               // 2: deploy.builderd.v1.InitStrategy
	(*TenantContext)(nil),           // 3: deploy.builderd.v1.TenantContext
	(*BuildSource)(nil),             // 4: deploy.builderd.v1.BuildSource
	(*DockerImageSource)(nil),       // 5: deploy.builderd.v1.DockerImageSource
	(*DockerAuth)(nil),              // 6: deploy.builderd.v1.DockerAuth
	(*GitRepositorySource)(nil),     // 7: deploy.builderd.v1.GitRepositorySource
	(*GitAuth)(nil),                 // 8: deploy.builderd.v1.GitAuth
	(*ArchiveSource)(nil),           // 9: deploy.builderd.v1.ArchiveSource
	(*BuildTarget)(nil),             // 10: deploy.builderd.v1.BuildTarget
	(*MicroVMRootfs)(nil),           // 11: deploy.builderd.v1.MicroVMRootfs
	(*ContainerImage)(nil),          // 12: deploy.builderd.v1.ContainerImage
	(*RuntimeConfig)(nil),           // 13: deploy.builderd.v1.RuntimeConfig
	(*OptimizationSettings)(nil),    // 14: deploy.builderd.v1.OptimizationSettings
	(*BuildStrategy)(nil),           // 15: deploy.builderd.v1.BuildStrategy
	(*DockerExtractStrategy)(nil),   // 16: deploy.builderd.v1.DockerExtractStrategy
	(*GoApiStrategy)(nil),           // 17: deploy.builderd.v1.GoApiStrategy
	(*SinatraStrategy)(nil),         // 18: deploy.builderd.v1.SinatraStrategy
	(*NodejsStrategy)(nil),          // 19: deploy.builderd.v1.NodejsStrategy
	(*TenantResourceLimits)(nil),    // 20: deploy.builderd.v1.TenantResourceLimits
	(*BuildConfig)(nil),             // 21: deploy.builderd.v1.BuildConfig
	(*BuildIsolation)(nil),          // 22: deploy.builderd.v1.BuildIsolation
	(*ImageMetadata)(nil),           // 23: deploy.builderd.v1.ImageMetadata
	(*BuildMetrics)(nil),            // 24: deploy.builderd.v1.BuildMetrics
	(*BuildJob)(nil),                // 25: deploy.builderd.v1.BuildJob
	(*StreamBuildLogsResponse)(nil), // 26: deploy.builderd.v1.StreamBuildLogsResponse
	(*TenantUsageStats)(nil),        // 27: deploy.builderd.v1.TenantUsageStats
	(*QuotaViolation)(nil),          // 28: deploy.builderd.v1.QuotaViolation
	(*CreateBuildRequest)(nil),      // 29: deploy.builderd.v1.CreateBuildRequest
	(*CreateBuildResponse)(nil),     // 30: deploy.builderd.v1.CreateBuildResponse
	(*GetBuildRequest)(nil),         // 31: deploy.builderd.v1.GetBuildRequest
	(*GetBuildResponse)(nil),        // 32: deploy.builderd.v1.GetBuildResponse
	(*ListBuildsRequest)(nil),       // 33: deploy.builderd.v1.ListBuildsRequest
	(*ListBuildsResponse)(nil),      // 34: deploy.builderd.v1.ListBuildsResponse
	(*CancelBuildRequest)(nil),      // 35: deploy.builderd.v1.CancelBuildRequest
	(*CancelBuildResponse)(nil),     // 36: deploy.builderd.v1.CancelBuildResponse
	(*DeleteBuildRequest)(nil),      // 37: deploy.builderd.v1.DeleteBuildRequest
	(*DeleteBuildResponse)(nil),     // 38: deploy.builderd.v1.DeleteBuildResponse
	(*StreamBuildLogsRequest)(nil),  // 39: deploy.builderd.v1.StreamBuildLogsRequest
	(*GetTenantQuotasRequest)(nil),  // 40: deploy.builderd.v1.GetTenantQuotasRequest
	(*GetTenantQuotasResponse)(nil), // 41: deploy.builderd.v1.GetTenantQuotasResponse
	(*GetBuildStatsRequest)(nil),    // 42: deploy.builderd.v1.GetBuildStatsRequest
	(*GetBuildStatsResponse)(nil),   // 43: deploy.builderd.v1.GetBuildStatsResponse
	nil,                             // 44: deploy.builderd.v1.TenantContext.MetadataEntry
	nil,                             // 45: deploy.builderd.v1.RuntimeConfig.EnvironmentEntry
	nil,                             // 46: deploy.builderd.v1.SinatraStrategy.RackConfigEntry
	nil,                             // 47: deploy.builderd.v1.BuildConfig.LabelsEntry
	nil,                             // 48: deploy.builderd.v1.ImageMetadata.LabelsEntry
	nil,                             // 49: deploy.builderd.v1.ImageMetadata.EnvEntry
	nil,                             // 50: deploy.builderd.v1.StreamBuildLogsResponse.MetadataEntry
	(*timestamppb.Timestamp)(nil),   // 51: google.protobuf.Timestamp
}
var file_proto_deploy_builderd_v1_builder_proto_depIdxs = []int32{
	1,  // 0: deploy.builderd.v1.TenantContext.tier:type_name -> deploy.builderd.v1.TenantTier
	44, // 1: deploy.builderd.v1.TenantContext.metadata:type_name -> deploy.builderd.v1.TenantContext.MetadataEntry
	5,  // 2: deploy.builderd.v1.BuildSource.docker_image:type_name -> deploy.builderd.v1.DockerImageSource
	7,  // 3: deploy.builderd.v1.BuildSource.git_repository:type_name -> deploy.builderd.v1.GitRepositorySource
	9,  // 4: deploy.builderd.v1.BuildSource.archive:type_name -> deploy.builderd.v1.ArchiveSource
	6,  // 5: deploy.builderd.v1.DockerImageSource.auth:type_name -> deploy.builderd.v1.DockerAuth
	8,  // 6: deploy.builderd.v1.GitRepositorySource.auth:type_name -> deploy.builderd.v1.GitAuth
	11, // 7: deploy.builderd.v1.BuildTarget.microvm_rootfs:type_name -> deploy.builderd.v1.MicroVMRootfs
	12, // 8: deploy.builderd.v1.BuildTarget.container_image:type_name -> deploy.builderd.v1.ContainerImage
	2,  // 9: deploy.builderd.v1.MicroVMRootfs.init_strategy:type_name -> deploy.builderd.v1.InitStrategy
	13, // 10: deploy.builderd.v1.MicroVMRootfs.runtime_config:type_name -> deploy.builderd.v1.RuntimeConfig
	14, // 11: deploy.builderd.v1.MicroVMRootfs.optimization:type_name -> deploy.builderd.v1.OptimizationSettings
	45, // 12: deploy.builderd.v1.RuntimeConfig.environment:type_name -> deploy.builderd.v1.RuntimeConfig.EnvironmentEntry
	16, // 13: deploy.builderd.v1.BuildStrategy.docker_extract:type_name -> deploy.builderd.v1.DockerExtractStrategy
	17, // 14: deploy.builderd.v1.BuildStrategy.go_api:type_name -> deploy.builderd.v1.GoApiStrategy
	18, // 15: deploy.builderd.v1.BuildStrategy.sinatra:type_name -> deploy.builderd.v1.SinatraStrategy
	19, // 16: deploy.builderd.v1.BuildStrategy.nodejs:type_name -> deploy.builderd.v1.NodejsStrategy
	46, // 17: deploy.builderd.v1.SinatraStrategy.rack_config:type_name -> deploy.builderd.v1.SinatraStrategy.RackConfigEntry
	3,  // 18: deploy.builderd.v1.BuildConfig.tenant:type_name -> deploy.builderd.v1.TenantContext
	4,  // 19: deploy.builderd.v1.BuildConfig.source:type_name -> deploy.builderd.v1.BuildSource
	10, // 20: deploy.builderd.v1.BuildConfig.target:type_name -> deploy.builderd.v1.BuildTarget
	15, // 21: deploy.builderd.v1.BuildConfig.strategy:type_name -> deploy.builderd.v1.BuildStrategy
	20, // 22: deploy.builderd.v1.BuildConfig.limits:type_name -> deploy.builderd.v1.TenantResourceLimits
	47, // 23: deploy.builderd.v1.BuildConfig.labels:type_name -> deploy.builderd.v1.BuildConfig.LabelsEntry
	48, // 24: deploy.builderd.v1.ImageMetadata.labels:type_name -> deploy.builderd.v1.ImageMetadata.LabelsEntry
	49, // 25: deploy.builderd.v1.ImageMetadata.env:type_name -> deploy.builderd.v1.ImageMetadata.EnvEntry
	21, // 26: deploy.builderd.v1.BuildJob.config:type_name -> deploy.builderd.v1.BuildConfig
	0,  // 27: deploy.builderd.v1.BuildJob.state:type_name -> deploy.builderd.v1.BuildState
	51, // 28: deploy.builderd.v1.BuildJob.created_at:type_name -> google.protobuf.Timestamp
	51, // 29: deploy.builderd.v1.BuildJob.started_at:type_name -> google.protobuf.Timestamp
	51, // 30: deploy.builderd.v1.BuildJob.completed_at:type_name -> google.protobuf.Timestamp
	23, // 31: deploy.builderd.v1.BuildJob.image_metadata:type_name -> deploy.builderd.v1.ImageMetadata
	24, // 32: deploy.builderd.v1.BuildJob.metrics:type_name -> deploy.builderd.v1.BuildMetrics
	22, // 33: deploy.builderd.v1.BuildJob.isolation:type_name -> deploy.builderd.v1.BuildIsolation
	51, // 34: deploy.builderd.v1.StreamBuildLogsResponse.timestamp:type_name -> google.protobuf.Timestamp
	50, // 35: deploy.builderd.v1.StreamBuildLogsResponse.metadata:type_name -> deploy.builderd.v1.StreamBuildLogsResponse.MetadataEntry
	21, // 36: deploy.builderd.v1.CreateBuildRequest.config:type_name -> deploy.builderd.v1.BuildConfig
	0,  // 37: deploy.builderd.v1.CreateBuildResponse.state:type_name -> deploy.builderd.v1.BuildState
	51, // 38: deploy.builderd.v1.CreateBuildResponse.created_at:type_name -> google.protobuf.Timestamp
	25, // 39: deploy.builderd.v1.GetBuildResponse.build:type_name -> deploy.builderd.v1.BuildJob
	0,  // 40: deploy.builderd.v1.ListBuildsRequest.state_filter:type_name -> deploy.builderd.v1.BuildState
	25, // 41: deploy.builderd.v1.ListBuildsResponse.builds:type_name -> deploy.builderd.v1.BuildJob
	0,  // 42: deploy.builderd.v1.CancelBuildResponse.state:type_name -> deploy.builderd.v1.BuildState
	20, // 43: deploy.builderd.v1.GetTenantQuotasResponse.current_limits:type_name -> deploy.builderd.v1.TenantResourceLimits
	27, // 44: deploy.builderd.v1.GetTenantQuotasResponse.current_usage:type_name -> deploy.builderd.v1.TenantUsageStats
	28, // 45: deploy.builderd.v1.GetTenantQuotasResponse.violations:type_name -> deploy.builderd.v1.QuotaViolation
	51, // 46: deploy.builderd.v1.GetBuildStatsRequest.start_time:type_name -> google.protobuf.Timestamp
	51, // 47: deploy.builderd.v1.GetBuildStatsRequest.end_time:type_name -> google.protobuf.Timestamp
	25, // 48: deploy.builderd.v1.GetBuildStatsResponse.recent_builds:type_name -> deploy.builderd.v1.BuildJob
	29, // 49: deploy.builderd.v1.BuilderService.CreateBuild:input_type -> deploy.builderd.v1.CreateBuildRequest
	31, // 50: deploy.builderd.v1.BuilderService.GetBuild:input_type -> deploy.builderd.v1.GetBuildRequest
	33, // 51: deploy.builderd.v1.BuilderService.ListBuilds:input_type -> deploy.builderd.v1.ListBuildsRequest
	35, // 52: deploy.builderd.v1.BuilderService.CancelBuild:input_type -> deploy.builderd.v1.CancelBuildRequest
	37, // 53: deploy.builderd.v1.BuilderService.DeleteBuild:input_type -> deploy.builderd.v1.DeleteBuildRequest
	39, // 54: deploy.builderd.v1.BuilderService.StreamBuildLogs:input_type -> deploy.builderd.v1.StreamBuildLogsRequest
	40, // 55: deploy.builderd.v1.BuilderService.GetTenantQuotas:input_type -> deploy.builderd.v1.GetTenantQuotasRequest
	42, // 56: deploy.builderd.v1.BuilderService.GetBuildStats:input_type -> deploy.builderd.v1.GetBuildStatsRequest
	30, // 57: deploy.builderd.v1.BuilderService.CreateBuild:output_type -> deploy.builderd.v1.CreateBuildResponse
	32, // 58: deploy.builderd.v1.BuilderService.GetBuild:output_type -> deploy.builderd.v1.GetBuildResponse
	34, // 59: deploy.builderd.v1.BuilderService.ListBuilds:output_type -> deploy.builderd.v1.ListBuildsResponse
	36, // 60: deploy.builderd.v1.BuilderService.CancelBuild:output_type -> deploy.builderd.v1.CancelBuildResponse
	38, // 61: deploy.builderd.v1.BuilderService.DeleteBuild:output_type -> deploy.builderd.v1.DeleteBuildResponse
	26, // 62: deploy.builderd.v1.BuilderService.StreamBuildLogs:output_type -> deploy.builderd.v1.StreamBuildLogsResponse
	41, // 63: deploy.builderd.v1.BuilderService.GetTenantQuotas:output_type -> deploy.builderd.v1.GetTenantQuotasResponse
	43, // 64: deploy.builderd.v1.BuilderService.GetBuildStats:output_type -> deploy.builderd.v1.GetBuildStatsResponse
	57, // [57:65] is the sub-list for method output_type
	49, // [49:57] is the sub-list for method input_type
	49, // [49:49] is the sub-list for extension type_name
	49, // [49:49] is the sub-list for extension extendee
	0,  // [0:49] is the sub-list for field type_name
}

func init() { file_proto_deploy_builderd_v1_builder_proto_init() }
func file_proto_deploy_builderd_v1_builder_proto_init() {
	if File_proto_deploy_builderd_v1_builder_proto != nil {
		return
	}
	file_proto_deploy_builderd_v1_builder_proto_msgTypes[1].OneofWrappers = []any{
		(*BuildSource_DockerImage)(nil),
		(*BuildSource_GitRepository)(nil),
		(*BuildSource_Archive)(nil),
	}
	file_proto_deploy_builderd_v1_builder_proto_msgTypes[7].OneofWrappers = []any{
		(*BuildTarget_MicrovmRootfs)(nil),
		(*BuildTarget_ContainerImage)(nil),
	}
	file_proto_deploy_builderd_v1_builder_proto_msgTypes[12].OneofWrappers = []any{
		(*BuildStrategy_DockerExtract)(nil),
		(*BuildStrategy_GoApi)(nil),
		(*BuildStrategy_Sinatra)(nil),
		(*BuildStrategy_Nodejs)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_deploy_builderd_v1_builder_proto_rawDesc), len(file_proto_deploy_builderd_v1_builder_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_deploy_builderd_v1_builder_proto_goTypes,
		DependencyIndexes: file_proto_deploy_builderd_v1_builder_proto_depIdxs,
		EnumInfos:         file_proto_deploy_builderd_v1_builder_proto_enumTypes,
		MessageInfos:      file_proto_deploy_builderd_v1_builder_proto_msgTypes,
	}.Build()
	File_proto_deploy_builderd_v1_builder_proto = out.File
	file_proto_deploy_builderd_v1_builder_proto_goTypes = nil
	file_proto_deploy_builderd_v1_builder_proto_depIdxs = nil
}
