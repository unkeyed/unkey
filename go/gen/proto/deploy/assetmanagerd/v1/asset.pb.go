// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/deploy/assetmanagerd/v1/asset.proto

package assetmanagerdv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssetType int32

const (
	AssetType_ASSET_TYPE_UNSPECIFIED AssetType = 0
	AssetType_ASSET_TYPE_KERNEL      AssetType = 1
	AssetType_ASSET_TYPE_ROOTFS      AssetType = 2
	AssetType_ASSET_TYPE_INITRD      AssetType = 3
	AssetType_ASSET_TYPE_DISK_IMAGE  AssetType = 4
)

// Enum value maps for AssetType.
var (
	AssetType_name = map[int32]string{
		0: "ASSET_TYPE_UNSPECIFIED",
		1: "ASSET_TYPE_KERNEL",
		2: "ASSET_TYPE_ROOTFS",
		3: "ASSET_TYPE_INITRD",
		4: "ASSET_TYPE_DISK_IMAGE",
	}
	AssetType_value = map[string]int32{
		"ASSET_TYPE_UNSPECIFIED": 0,
		"ASSET_TYPE_KERNEL":      1,
		"ASSET_TYPE_ROOTFS":      2,
		"ASSET_TYPE_INITRD":      3,
		"ASSET_TYPE_DISK_IMAGE":  4,
	}
)

func (x AssetType) Enum() *AssetType {
	p := new(AssetType)
	*p = x
	return p
}

func (x AssetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssetType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_enumTypes[0].Descriptor()
}

func (AssetType) Type() protoreflect.EnumType {
	return &file_proto_deploy_assetmanagerd_v1_asset_proto_enumTypes[0]
}

func (x AssetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssetType.Descriptor instead.
func (AssetType) EnumDescriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{0}
}

type AssetStatus int32

const (
	AssetStatus_ASSET_STATUS_UNSPECIFIED AssetStatus = 0
	AssetStatus_ASSET_STATUS_UPLOADING   AssetStatus = 1
	AssetStatus_ASSET_STATUS_AVAILABLE   AssetStatus = 2
	AssetStatus_ASSET_STATUS_DELETING    AssetStatus = 3
	AssetStatus_ASSET_STATUS_ERROR       AssetStatus = 4
)

// Enum value maps for AssetStatus.
var (
	AssetStatus_name = map[int32]string{
		0: "ASSET_STATUS_UNSPECIFIED",
		1: "ASSET_STATUS_UPLOADING",
		2: "ASSET_STATUS_AVAILABLE",
		3: "ASSET_STATUS_DELETING",
		4: "ASSET_STATUS_ERROR",
	}
	AssetStatus_value = map[string]int32{
		"ASSET_STATUS_UNSPECIFIED": 0,
		"ASSET_STATUS_UPLOADING":   1,
		"ASSET_STATUS_AVAILABLE":   2,
		"ASSET_STATUS_DELETING":    3,
		"ASSET_STATUS_ERROR":       4,
	}
)

func (x AssetStatus) Enum() *AssetStatus {
	p := new(AssetStatus)
	*p = x
	return p
}

func (x AssetStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssetStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_enumTypes[1].Descriptor()
}

func (AssetStatus) Type() protoreflect.EnumType {
	return &file_proto_deploy_assetmanagerd_v1_asset_proto_enumTypes[1]
}

func (x AssetStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssetStatus.Descriptor instead.
func (AssetStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{1}
}

type StorageBackend int32

const (
	StorageBackend_STORAGE_BACKEND_UNSPECIFIED StorageBackend = 0
	StorageBackend_STORAGE_BACKEND_LOCAL       StorageBackend = 1
	StorageBackend_STORAGE_BACKEND_S3          StorageBackend = 2
	StorageBackend_STORAGE_BACKEND_HTTP        StorageBackend = 3
	StorageBackend_STORAGE_BACKEND_NFS         StorageBackend = 4
)

// Enum value maps for StorageBackend.
var (
	StorageBackend_name = map[int32]string{
		0: "STORAGE_BACKEND_UNSPECIFIED",
		1: "STORAGE_BACKEND_LOCAL",
		2: "STORAGE_BACKEND_S3",
		3: "STORAGE_BACKEND_HTTP",
		4: "STORAGE_BACKEND_NFS",
	}
	StorageBackend_value = map[string]int32{
		"STORAGE_BACKEND_UNSPECIFIED": 0,
		"STORAGE_BACKEND_LOCAL":       1,
		"STORAGE_BACKEND_S3":          2,
		"STORAGE_BACKEND_HTTP":        3,
		"STORAGE_BACKEND_NFS":         4,
	}
)

func (x StorageBackend) Enum() *StorageBackend {
	p := new(StorageBackend)
	*p = x
	return p
}

func (x StorageBackend) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageBackend) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_enumTypes[2].Descriptor()
}

func (StorageBackend) Type() protoreflect.EnumType {
	return &file_proto_deploy_assetmanagerd_v1_asset_proto_enumTypes[2]
}

func (x StorageBackend) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageBackend.Descriptor instead.
func (StorageBackend) EnumDescriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{2}
}

type Asset struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Id     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type   AssetType              `protobuf:"varint,3,opt,name=type,proto3,enum=deploy.assetmanagerd.v1.AssetType" json:"type,omitempty"`
	Status AssetStatus            `protobuf:"varint,4,opt,name=status,proto3,enum=deploy.assetmanagerd.v1.AssetStatus" json:"status,omitempty"`
	// Storage information
	Backend   StorageBackend `protobuf:"varint,5,opt,name=backend,proto3,enum=deploy.assetmanagerd.v1.StorageBackend" json:"backend,omitempty"`
	Location  string         `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"` // Path or URL depending on backend
	SizeBytes int64          `protobuf:"varint,7,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Checksum  string         `protobuf:"bytes,8,opt,name=checksum,proto3" json:"checksum,omitempty"` // SHA256
	// Metadata
	Labels         map[string]string `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedBy      string            `protobuf:"bytes,10,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`  // e.g., "builderd", "manual"
	CreatedAt      int64             `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // Unix timestamp
	LastAccessedAt int64             `protobuf:"varint,12,opt,name=last_accessed_at,json=lastAccessedAt,proto3" json:"last_accessed_at,omitempty"`
	// Reference counting for GC
	ReferenceCount int32 `protobuf:"varint,13,opt,name=reference_count,json=referenceCount,proto3" json:"reference_count,omitempty"`
	// Build information (if created by builderd)
	BuildId       string `protobuf:"bytes,14,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	SourceImage   string `protobuf:"bytes,15,opt,name=source_image,json=sourceImage,proto3" json:"source_image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Asset) Reset() {
	*x = Asset{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{0}
}

func (x *Asset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Asset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Asset) GetType() AssetType {
	if x != nil {
		return x.Type
	}
	return AssetType_ASSET_TYPE_UNSPECIFIED
}

func (x *Asset) GetStatus() AssetStatus {
	if x != nil {
		return x.Status
	}
	return AssetStatus_ASSET_STATUS_UNSPECIFIED
}

func (x *Asset) GetBackend() StorageBackend {
	if x != nil {
		return x.Backend
	}
	return StorageBackend_STORAGE_BACKEND_UNSPECIFIED
}

func (x *Asset) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Asset) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *Asset) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *Asset) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Asset) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Asset) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Asset) GetLastAccessedAt() int64 {
	if x != nil {
		return x.LastAccessedAt
	}
	return 0
}

func (x *Asset) GetReferenceCount() int32 {
	if x != nil {
		return x.ReferenceCount
	}
	return 0
}

func (x *Asset) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *Asset) GetSourceImage() string {
	if x != nil {
		return x.SourceImage
	}
	return ""
}

type UploadAssetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*UploadAssetRequest_Metadata
	//	*UploadAssetRequest_Chunk
	Data          isUploadAssetRequest_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAssetRequest) Reset() {
	*x = UploadAssetRequest{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAssetRequest) ProtoMessage() {}

func (x *UploadAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAssetRequest.ProtoReflect.Descriptor instead.
func (*UploadAssetRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{1}
}

func (x *UploadAssetRequest) GetData() isUploadAssetRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UploadAssetRequest) GetMetadata() *UploadAssetMetadata {
	if x != nil {
		if x, ok := x.Data.(*UploadAssetRequest_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *UploadAssetRequest) GetChunk() []byte {
	if x != nil {
		if x, ok := x.Data.(*UploadAssetRequest_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

type isUploadAssetRequest_Data interface {
	isUploadAssetRequest_Data()
}

type UploadAssetRequest_Metadata struct {
	Metadata *UploadAssetMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type UploadAssetRequest_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*UploadAssetRequest_Metadata) isUploadAssetRequest_Data() {}

func (*UploadAssetRequest_Chunk) isUploadAssetRequest_Data() {}

type UploadAssetMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          AssetType              `protobuf:"varint,2,opt,name=type,proto3,enum=deploy.assetmanagerd.v1.AssetType" json:"type,omitempty"`
	SizeBytes     int64                  `protobuf:"varint,3,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedBy     string                 `protobuf:"bytes,5,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	BuildId       string                 `protobuf:"bytes,6,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	SourceImage   string                 `protobuf:"bytes,7,opt,name=source_image,json=sourceImage,proto3" json:"source_image,omitempty"`
	Id            string                 `protobuf:"bytes,8,opt,name=id,proto3" json:"id,omitempty"` // Optional: specific asset ID to use
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAssetMetadata) Reset() {
	*x = UploadAssetMetadata{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAssetMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAssetMetadata) ProtoMessage() {}

func (x *UploadAssetMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAssetMetadata.ProtoReflect.Descriptor instead.
func (*UploadAssetMetadata) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{2}
}

func (x *UploadAssetMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadAssetMetadata) GetType() AssetType {
	if x != nil {
		return x.Type
	}
	return AssetType_ASSET_TYPE_UNSPECIFIED
}

func (x *UploadAssetMetadata) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *UploadAssetMetadata) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UploadAssetMetadata) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *UploadAssetMetadata) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *UploadAssetMetadata) GetSourceImage() string {
	if x != nil {
		return x.SourceImage
	}
	return ""
}

func (x *UploadAssetMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UploadAssetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Asset         *Asset                 `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadAssetResponse) Reset() {
	*x = UploadAssetResponse{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAssetResponse) ProtoMessage() {}

func (x *UploadAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAssetResponse.ProtoReflect.Descriptor instead.
func (*UploadAssetResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{3}
}

func (x *UploadAssetResponse) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

type RegisterAssetRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type      AssetType              `protobuf:"varint,2,opt,name=type,proto3,enum=deploy.assetmanagerd.v1.AssetType" json:"type,omitempty"`
	Backend   StorageBackend         `protobuf:"varint,3,opt,name=backend,proto3,enum=deploy.assetmanagerd.v1.StorageBackend" json:"backend,omitempty"`
	Location  string                 `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	SizeBytes int64                  `protobuf:"varint,5,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Checksum  string                 `protobuf:"bytes,6,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Labels    map[string]string      `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedBy string                 `protobuf:"bytes,8,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// Optional build information
	BuildId     string `protobuf:"bytes,9,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	SourceImage string `protobuf:"bytes,10,opt,name=source_image,json=sourceImage,proto3" json:"source_image,omitempty"`
	// Optional: specific asset ID to use (if not provided, one will be generated)
	Id            string `protobuf:"bytes,11,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterAssetRequest) Reset() {
	*x = RegisterAssetRequest{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAssetRequest) ProtoMessage() {}

func (x *RegisterAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAssetRequest.ProtoReflect.Descriptor instead.
func (*RegisterAssetRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterAssetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterAssetRequest) GetType() AssetType {
	if x != nil {
		return x.Type
	}
	return AssetType_ASSET_TYPE_UNSPECIFIED
}

func (x *RegisterAssetRequest) GetBackend() StorageBackend {
	if x != nil {
		return x.Backend
	}
	return StorageBackend_STORAGE_BACKEND_UNSPECIFIED
}

func (x *RegisterAssetRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *RegisterAssetRequest) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *RegisterAssetRequest) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *RegisterAssetRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *RegisterAssetRequest) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *RegisterAssetRequest) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *RegisterAssetRequest) GetSourceImage() string {
	if x != nil {
		return x.SourceImage
	}
	return ""
}

func (x *RegisterAssetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RegisterAssetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Asset         *Asset                 `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterAssetResponse) Reset() {
	*x = RegisterAssetResponse{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAssetResponse) ProtoMessage() {}

func (x *RegisterAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAssetResponse.ProtoReflect.Descriptor instead.
func (*RegisterAssetResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterAssetResponse) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

type GetAssetRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// If true, ensures asset is available locally (downloads if needed)
	EnsureLocal   bool `protobuf:"varint,2,opt,name=ensure_local,json=ensureLocal,proto3" json:"ensure_local,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAssetRequest) Reset() {
	*x = GetAssetRequest{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetRequest) ProtoMessage() {}

func (x *GetAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetRequest.ProtoReflect.Descriptor instead.
func (*GetAssetRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{6}
}

func (x *GetAssetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetAssetRequest) GetEnsureLocal() bool {
	if x != nil {
		return x.EnsureLocal
	}
	return false
}

type GetAssetResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Asset *Asset                 `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	// Local path if ensure_local was true
	LocalPath     string `protobuf:"bytes,2,opt,name=local_path,json=localPath,proto3" json:"local_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAssetResponse) Reset() {
	*x = GetAssetResponse{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAssetResponse) ProtoMessage() {}

func (x *GetAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAssetResponse.ProtoReflect.Descriptor instead.
func (*GetAssetResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{7}
}

func (x *GetAssetResponse) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *GetAssetResponse) GetLocalPath() string {
	if x != nil {
		return x.LocalPath
	}
	return ""
}

type ListAssetsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filter by type
	Type AssetType `protobuf:"varint,1,opt,name=type,proto3,enum=deploy.assetmanagerd.v1.AssetType" json:"type,omitempty"`
	// Filter by status
	Status AssetStatus `protobuf:"varint,2,opt,name=status,proto3,enum=deploy.assetmanagerd.v1.AssetStatus" json:"status,omitempty"`
	// Filter by labels (all must match)
	LabelSelector map[string]string `protobuf:"bytes,3,rep,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Pagination
	PageSize      int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAssetsRequest) Reset() {
	*x = ListAssetsRequest{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetsRequest) ProtoMessage() {}

func (x *ListAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetsRequest.ProtoReflect.Descriptor instead.
func (*ListAssetsRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{8}
}

func (x *ListAssetsRequest) GetType() AssetType {
	if x != nil {
		return x.Type
	}
	return AssetType_ASSET_TYPE_UNSPECIFIED
}

func (x *ListAssetsRequest) GetStatus() AssetStatus {
	if x != nil {
		return x.Status
	}
	return AssetStatus_ASSET_STATUS_UNSPECIFIED
}

func (x *ListAssetsRequest) GetLabelSelector() map[string]string {
	if x != nil {
		return x.LabelSelector
	}
	return nil
}

func (x *ListAssetsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAssetsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListAssetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Assets        []*Asset               `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAssetsResponse) Reset() {
	*x = ListAssetsResponse{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetsResponse) ProtoMessage() {}

func (x *ListAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetsResponse.ProtoReflect.Descriptor instead.
func (*ListAssetsResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{9}
}

func (x *ListAssetsResponse) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *ListAssetsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type AcquireAssetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetId       string                 `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	AcquiredBy    string                 `protobuf:"bytes,2,opt,name=acquired_by,json=acquiredBy,proto3" json:"acquired_by,omitempty"`  // e.g., "vm-123"
	TtlSeconds    int64                  `protobuf:"varint,3,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"` // Optional auto-release after TTL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcquireAssetRequest) Reset() {
	*x = AcquireAssetRequest{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcquireAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireAssetRequest) ProtoMessage() {}

func (x *AcquireAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireAssetRequest.ProtoReflect.Descriptor instead.
func (*AcquireAssetRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{10}
}

func (x *AcquireAssetRequest) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *AcquireAssetRequest) GetAcquiredBy() string {
	if x != nil {
		return x.AcquiredBy
	}
	return ""
}

func (x *AcquireAssetRequest) GetTtlSeconds() int64 {
	if x != nil {
		return x.TtlSeconds
	}
	return 0
}

type AcquireAssetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Asset         *Asset                 `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	LeaseId       string                 `protobuf:"bytes,2,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"` // Use this for release
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcquireAssetResponse) Reset() {
	*x = AcquireAssetResponse{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcquireAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireAssetResponse) ProtoMessage() {}

func (x *AcquireAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireAssetResponse.ProtoReflect.Descriptor instead.
func (*AcquireAssetResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{11}
}

func (x *AcquireAssetResponse) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

func (x *AcquireAssetResponse) GetLeaseId() string {
	if x != nil {
		return x.LeaseId
	}
	return ""
}

type ReleaseAssetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeaseId       string                 `protobuf:"bytes,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseAssetRequest) Reset() {
	*x = ReleaseAssetRequest{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseAssetRequest) ProtoMessage() {}

func (x *ReleaseAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseAssetRequest.ProtoReflect.Descriptor instead.
func (*ReleaseAssetRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{12}
}

func (x *ReleaseAssetRequest) GetLeaseId() string {
	if x != nil {
		return x.LeaseId
	}
	return ""
}

type ReleaseAssetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Asset         *Asset                 `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseAssetResponse) Reset() {
	*x = ReleaseAssetResponse{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseAssetResponse) ProtoMessage() {}

func (x *ReleaseAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseAssetResponse.ProtoReflect.Descriptor instead.
func (*ReleaseAssetResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{13}
}

func (x *ReleaseAssetResponse) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

type DeleteAssetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Force         bool                   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"` // Delete even if ref count > 0
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAssetRequest) Reset() {
	*x = DeleteAssetRequest{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssetRequest) ProtoMessage() {}

func (x *DeleteAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssetRequest.ProtoReflect.Descriptor instead.
func (*DeleteAssetRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteAssetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteAssetRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type DeleteAssetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Deleted       bool                   `protobuf:"varint,1,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAssetResponse) Reset() {
	*x = DeleteAssetResponse{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAssetResponse) ProtoMessage() {}

func (x *DeleteAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAssetResponse.ProtoReflect.Descriptor instead.
func (*DeleteAssetResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteAssetResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *DeleteAssetResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GarbageCollectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Delete assets not accessed in this many seconds
	MaxAgeSeconds int64 `protobuf:"varint,1,opt,name=max_age_seconds,json=maxAgeSeconds,proto3" json:"max_age_seconds,omitempty"`
	// Delete assets with 0 references
	DeleteUnreferenced bool `protobuf:"varint,2,opt,name=delete_unreferenced,json=deleteUnreferenced,proto3" json:"delete_unreferenced,omitempty"`
	// Dry run - just return what would be deleted
	DryRun        bool `protobuf:"varint,3,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GarbageCollectRequest) Reset() {
	*x = GarbageCollectRequest{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GarbageCollectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GarbageCollectRequest) ProtoMessage() {}

func (x *GarbageCollectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GarbageCollectRequest.ProtoReflect.Descriptor instead.
func (*GarbageCollectRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{16}
}

func (x *GarbageCollectRequest) GetMaxAgeSeconds() int64 {
	if x != nil {
		return x.MaxAgeSeconds
	}
	return 0
}

func (x *GarbageCollectRequest) GetDeleteUnreferenced() bool {
	if x != nil {
		return x.DeleteUnreferenced
	}
	return false
}

func (x *GarbageCollectRequest) GetDryRun() bool {
	if x != nil {
		return x.DryRun
	}
	return false
}

type GarbageCollectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeletedAssets []*Asset               `protobuf:"bytes,1,rep,name=deleted_assets,json=deletedAssets,proto3" json:"deleted_assets,omitempty"`
	BytesFreed    int64                  `protobuf:"varint,2,opt,name=bytes_freed,json=bytesFreed,proto3" json:"bytes_freed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GarbageCollectResponse) Reset() {
	*x = GarbageCollectResponse{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GarbageCollectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GarbageCollectResponse) ProtoMessage() {}

func (x *GarbageCollectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GarbageCollectResponse.ProtoReflect.Descriptor instead.
func (*GarbageCollectResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{17}
}

func (x *GarbageCollectResponse) GetDeletedAssets() []*Asset {
	if x != nil {
		return x.DeletedAssets
	}
	return nil
}

func (x *GarbageCollectResponse) GetBytesFreed() int64 {
	if x != nil {
		return x.BytesFreed
	}
	return 0
}

type PrepareAssetsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetIds      []string               `protobuf:"bytes,1,rep,name=asset_ids,json=assetIds,proto3" json:"asset_ids,omitempty"`
	TargetPath    string                 `protobuf:"bytes,2,opt,name=target_path,json=targetPath,proto3" json:"target_path,omitempty"`    // e.g., jailer chroot path
	PreparedFor   string                 `protobuf:"bytes,3,opt,name=prepared_for,json=preparedFor,proto3" json:"prepared_for,omitempty"` // e.g., "vm-123"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareAssetsRequest) Reset() {
	*x = PrepareAssetsRequest{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareAssetsRequest) ProtoMessage() {}

func (x *PrepareAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareAssetsRequest.ProtoReflect.Descriptor instead.
func (*PrepareAssetsRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{18}
}

func (x *PrepareAssetsRequest) GetAssetIds() []string {
	if x != nil {
		return x.AssetIds
	}
	return nil
}

func (x *PrepareAssetsRequest) GetTargetPath() string {
	if x != nil {
		return x.TargetPath
	}
	return ""
}

func (x *PrepareAssetsRequest) GetPreparedFor() string {
	if x != nil {
		return x.PreparedFor
	}
	return ""
}

type PrepareAssetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetPaths    map[string]string      `protobuf:"bytes,1,rep,name=asset_paths,json=assetPaths,proto3" json:"asset_paths,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // asset_id -> local path
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareAssetsResponse) Reset() {
	*x = PrepareAssetsResponse{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareAssetsResponse) ProtoMessage() {}

func (x *PrepareAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareAssetsResponse.ProtoReflect.Descriptor instead.
func (*PrepareAssetsResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{19}
}

func (x *PrepareAssetsResponse) GetAssetPaths() map[string]string {
	if x != nil {
		return x.AssetPaths
	}
	return nil
}

// QueryAssetsRequest is similar to ListAssetsRequest but with build options
type QueryAssetsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filter by type
	Type AssetType `protobuf:"varint,1,opt,name=type,proto3,enum=deploy.assetmanagerd.v1.AssetType" json:"type,omitempty"`
	// Filter by status
	Status AssetStatus `protobuf:"varint,2,opt,name=status,proto3,enum=deploy.assetmanagerd.v1.AssetStatus" json:"status,omitempty"`
	// Filter by labels (all must match)
	LabelSelector map[string]string `protobuf:"bytes,3,rep,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Pagination
	PageSize  int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken string `protobuf:"bytes,5,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Build options - if asset not found and these are set, trigger build
	BuildOptions  *BuildOptions `protobuf:"bytes,6,opt,name=build_options,json=buildOptions,proto3" json:"build_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryAssetsRequest) Reset() {
	*x = QueryAssetsRequest{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAssetsRequest) ProtoMessage() {}

func (x *QueryAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAssetsRequest.ProtoReflect.Descriptor instead.
func (*QueryAssetsRequest) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{20}
}

func (x *QueryAssetsRequest) GetType() AssetType {
	if x != nil {
		return x.Type
	}
	return AssetType_ASSET_TYPE_UNSPECIFIED
}

func (x *QueryAssetsRequest) GetStatus() AssetStatus {
	if x != nil {
		return x.Status
	}
	return AssetStatus_ASSET_STATUS_UNSPECIFIED
}

func (x *QueryAssetsRequest) GetLabelSelector() map[string]string {
	if x != nil {
		return x.LabelSelector
	}
	return nil
}

func (x *QueryAssetsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryAssetsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *QueryAssetsRequest) GetBuildOptions() *BuildOptions {
	if x != nil {
		return x.BuildOptions
	}
	return nil
}

// BuildOptions controls automatic asset creation
type BuildOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable automatic building if assets don't exist
	EnableAutoBuild bool `protobuf:"varint,1,opt,name=enable_auto_build,json=enableAutoBuild,proto3" json:"enable_auto_build,omitempty"`
	// Wait for build completion before returning
	WaitForCompletion bool `protobuf:"varint,2,opt,name=wait_for_completion,json=waitForCompletion,proto3" json:"wait_for_completion,omitempty"`
	// Timeout for build operation (seconds)
	BuildTimeoutSeconds int32 `protobuf:"varint,3,opt,name=build_timeout_seconds,json=buildTimeoutSeconds,proto3" json:"build_timeout_seconds,omitempty"`
	// Additional labels to add to the built asset
	BuildLabels map[string]string `protobuf:"bytes,4,rep,name=build_labels,json=buildLabels,proto3" json:"build_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Tenant context for build authorization
	TenantId string `protobuf:"bytes,5,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// Suggested asset ID to use when registering the built asset
	// This allows the caller to know the asset ID before it's built
	SuggestedAssetId string `protobuf:"bytes,6,opt,name=suggested_asset_id,json=suggestedAssetId,proto3" json:"suggested_asset_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BuildOptions) Reset() {
	*x = BuildOptions{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildOptions) ProtoMessage() {}

func (x *BuildOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildOptions.ProtoReflect.Descriptor instead.
func (*BuildOptions) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{21}
}

func (x *BuildOptions) GetEnableAutoBuild() bool {
	if x != nil {
		return x.EnableAutoBuild
	}
	return false
}

func (x *BuildOptions) GetWaitForCompletion() bool {
	if x != nil {
		return x.WaitForCompletion
	}
	return false
}

func (x *BuildOptions) GetBuildTimeoutSeconds() int32 {
	if x != nil {
		return x.BuildTimeoutSeconds
	}
	return 0
}

func (x *BuildOptions) GetBuildLabels() map[string]string {
	if x != nil {
		return x.BuildLabels
	}
	return nil
}

func (x *BuildOptions) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *BuildOptions) GetSuggestedAssetId() string {
	if x != nil {
		return x.SuggestedAssetId
	}
	return ""
}

// QueryAssetsResponse includes build information if builds were triggered
type QueryAssetsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Assets        []*Asset               `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Information about any builds that were triggered
	TriggeredBuilds []*BuildInfo `protobuf:"bytes,3,rep,name=triggered_builds,json=triggeredBuilds,proto3" json:"triggered_builds,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QueryAssetsResponse) Reset() {
	*x = QueryAssetsResponse{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryAssetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAssetsResponse) ProtoMessage() {}

func (x *QueryAssetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAssetsResponse.ProtoReflect.Descriptor instead.
func (*QueryAssetsResponse) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{22}
}

func (x *QueryAssetsResponse) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

func (x *QueryAssetsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *QueryAssetsResponse) GetTriggeredBuilds() []*BuildInfo {
	if x != nil {
		return x.TriggeredBuilds
	}
	return nil
}

// BuildInfo provides information about triggered builds
type BuildInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BuildId       string                 `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	DockerImage   string                 `protobuf:"bytes,2,opt,name=docker_image,json=dockerImage,proto3" json:"docker_image,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"` // "pending", "building", "completed", "failed"
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	AssetId       string                 `protobuf:"bytes,5,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"` // Asset ID if build completed and asset was registered
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildInfo) Reset() {
	*x = BuildInfo{}
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildInfo) ProtoMessage() {}

func (x *BuildInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildInfo.ProtoReflect.Descriptor instead.
func (*BuildInfo) Descriptor() ([]byte, []int) {
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP(), []int{23}
}

func (x *BuildInfo) GetBuildId() string {
	if x != nil {
		return x.BuildId
	}
	return ""
}

func (x *BuildInfo) GetDockerImage() string {
	if x != nil {
		return x.DockerImage
	}
	return ""
}

func (x *BuildInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BuildInfo) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *BuildInfo) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

var File_proto_deploy_assetmanagerd_v1_asset_proto protoreflect.FileDescriptor

const file_proto_deploy_assetmanagerd_v1_asset_proto_rawDesc = "" +
	"\n" +
	")proto/deploy/assetmanagerd/v1/asset.proto\x12\x17deploy.assetmanagerd.v1\"\x89\x05\n" +
	"\x05Asset\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x126\n" +
	"\x04type\x18\x03 \x01(\x0e2\".deploy.assetmanagerd.v1.AssetTypeR\x04type\x12<\n" +
	"\x06status\x18\x04 \x01(\x0e2$.deploy.assetmanagerd.v1.AssetStatusR\x06status\x12A\n" +
	"\abackend\x18\x05 \x01(\x0e2'.deploy.assetmanagerd.v1.StorageBackendR\abackend\x12\x1a\n" +
	"\blocation\x18\x06 \x01(\tR\blocation\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\a \x01(\x03R\tsizeBytes\x12\x1a\n" +
	"\bchecksum\x18\b \x01(\tR\bchecksum\x12B\n" +
	"\x06labels\x18\t \x03(\v2*.deploy.assetmanagerd.v1.Asset.LabelsEntryR\x06labels\x12\x1d\n" +
	"\n" +
	"created_by\x18\n" +
	" \x01(\tR\tcreatedBy\x12\x1d\n" +
	"\n" +
	"created_at\x18\v \x01(\x03R\tcreatedAt\x12(\n" +
	"\x10last_accessed_at\x18\f \x01(\x03R\x0elastAccessedAt\x12'\n" +
	"\x0freference_count\x18\r \x01(\x05R\x0ereferenceCount\x12\x19\n" +
	"\bbuild_id\x18\x0e \x01(\tR\abuildId\x12!\n" +
	"\fsource_image\x18\x0f \x01(\tR\vsourceImage\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x80\x01\n" +
	"\x12UploadAssetRequest\x12J\n" +
	"\bmetadata\x18\x01 \x01(\v2,.deploy.assetmanagerd.v1.UploadAssetMetadataH\x00R\bmetadata\x12\x16\n" +
	"\x05chunk\x18\x02 \x01(\fH\x00R\x05chunkB\x06\n" +
	"\x04data\"\xfa\x02\n" +
	"\x13UploadAssetMetadata\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x126\n" +
	"\x04type\x18\x02 \x01(\x0e2\".deploy.assetmanagerd.v1.AssetTypeR\x04type\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x03 \x01(\x03R\tsizeBytes\x12P\n" +
	"\x06labels\x18\x04 \x03(\v28.deploy.assetmanagerd.v1.UploadAssetMetadata.LabelsEntryR\x06labels\x12\x1d\n" +
	"\n" +
	"created_by\x18\x05 \x01(\tR\tcreatedBy\x12\x19\n" +
	"\bbuild_id\x18\x06 \x01(\tR\abuildId\x12!\n" +
	"\fsource_image\x18\a \x01(\tR\vsourceImage\x12\x0e\n" +
	"\x02id\x18\b \x01(\tR\x02id\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"K\n" +
	"\x13UploadAssetResponse\x124\n" +
	"\x05asset\x18\x01 \x01(\v2\x1e.deploy.assetmanagerd.v1.AssetR\x05asset\"\xf7\x03\n" +
	"\x14RegisterAssetRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x126\n" +
	"\x04type\x18\x02 \x01(\x0e2\".deploy.assetmanagerd.v1.AssetTypeR\x04type\x12A\n" +
	"\abackend\x18\x03 \x01(\x0e2'.deploy.assetmanagerd.v1.StorageBackendR\abackend\x12\x1a\n" +
	"\blocation\x18\x04 \x01(\tR\blocation\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x05 \x01(\x03R\tsizeBytes\x12\x1a\n" +
	"\bchecksum\x18\x06 \x01(\tR\bchecksum\x12Q\n" +
	"\x06labels\x18\a \x03(\v29.deploy.assetmanagerd.v1.RegisterAssetRequest.LabelsEntryR\x06labels\x12\x1d\n" +
	"\n" +
	"created_by\x18\b \x01(\tR\tcreatedBy\x12\x19\n" +
	"\bbuild_id\x18\t \x01(\tR\abuildId\x12!\n" +
	"\fsource_image\x18\n" +
	" \x01(\tR\vsourceImage\x12\x0e\n" +
	"\x02id\x18\v \x01(\tR\x02id\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"M\n" +
	"\x15RegisterAssetResponse\x124\n" +
	"\x05asset\x18\x01 \x01(\v2\x1e.deploy.assetmanagerd.v1.AssetR\x05asset\"D\n" +
	"\x0fGetAssetRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fensure_local\x18\x02 \x01(\bR\vensureLocal\"g\n" +
	"\x10GetAssetResponse\x124\n" +
	"\x05asset\x18\x01 \x01(\v2\x1e.deploy.assetmanagerd.v1.AssetR\x05asset\x12\x1d\n" +
	"\n" +
	"local_path\x18\x02 \x01(\tR\tlocalPath\"\xed\x02\n" +
	"\x11ListAssetsRequest\x126\n" +
	"\x04type\x18\x01 \x01(\x0e2\".deploy.assetmanagerd.v1.AssetTypeR\x04type\x12<\n" +
	"\x06status\x18\x02 \x01(\x0e2$.deploy.assetmanagerd.v1.AssetStatusR\x06status\x12d\n" +
	"\x0elabel_selector\x18\x03 \x03(\v2=.deploy.assetmanagerd.v1.ListAssetsRequest.LabelSelectorEntryR\rlabelSelector\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x05 \x01(\tR\tpageToken\x1a@\n" +
	"\x12LabelSelectorEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"t\n" +
	"\x12ListAssetsResponse\x126\n" +
	"\x06assets\x18\x01 \x03(\v2\x1e.deploy.assetmanagerd.v1.AssetR\x06assets\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"r\n" +
	"\x13AcquireAssetRequest\x12\x19\n" +
	"\basset_id\x18\x01 \x01(\tR\aassetId\x12\x1f\n" +
	"\vacquired_by\x18\x02 \x01(\tR\n" +
	"acquiredBy\x12\x1f\n" +
	"\vttl_seconds\x18\x03 \x01(\x03R\n" +
	"ttlSeconds\"g\n" +
	"\x14AcquireAssetResponse\x124\n" +
	"\x05asset\x18\x01 \x01(\v2\x1e.deploy.assetmanagerd.v1.AssetR\x05asset\x12\x19\n" +
	"\blease_id\x18\x02 \x01(\tR\aleaseId\"0\n" +
	"\x13ReleaseAssetRequest\x12\x19\n" +
	"\blease_id\x18\x01 \x01(\tR\aleaseId\"L\n" +
	"\x14ReleaseAssetResponse\x124\n" +
	"\x05asset\x18\x01 \x01(\v2\x1e.deploy.assetmanagerd.v1.AssetR\x05asset\":\n" +
	"\x12DeleteAssetRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\"I\n" +
	"\x13DeleteAssetResponse\x12\x18\n" +
	"\adeleted\x18\x01 \x01(\bR\adeleted\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x89\x01\n" +
	"\x15GarbageCollectRequest\x12&\n" +
	"\x0fmax_age_seconds\x18\x01 \x01(\x03R\rmaxAgeSeconds\x12/\n" +
	"\x13delete_unreferenced\x18\x02 \x01(\bR\x12deleteUnreferenced\x12\x17\n" +
	"\adry_run\x18\x03 \x01(\bR\x06dryRun\"\x80\x01\n" +
	"\x16GarbageCollectResponse\x12E\n" +
	"\x0edeleted_assets\x18\x01 \x03(\v2\x1e.deploy.assetmanagerd.v1.AssetR\rdeletedAssets\x12\x1f\n" +
	"\vbytes_freed\x18\x02 \x01(\x03R\n" +
	"bytesFreed\"w\n" +
	"\x14PrepareAssetsRequest\x12\x1b\n" +
	"\tasset_ids\x18\x01 \x03(\tR\bassetIds\x12\x1f\n" +
	"\vtarget_path\x18\x02 \x01(\tR\n" +
	"targetPath\x12!\n" +
	"\fprepared_for\x18\x03 \x01(\tR\vpreparedFor\"\xb7\x01\n" +
	"\x15PrepareAssetsResponse\x12_\n" +
	"\vasset_paths\x18\x01 \x03(\v2>.deploy.assetmanagerd.v1.PrepareAssetsResponse.AssetPathsEntryR\n" +
	"assetPaths\x1a=\n" +
	"\x0fAssetPathsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbb\x03\n" +
	"\x12QueryAssetsRequest\x126\n" +
	"\x04type\x18\x01 \x01(\x0e2\".deploy.assetmanagerd.v1.AssetTypeR\x04type\x12<\n" +
	"\x06status\x18\x02 \x01(\x0e2$.deploy.assetmanagerd.v1.AssetStatusR\x06status\x12e\n" +
	"\x0elabel_selector\x18\x03 \x03(\v2>.deploy.assetmanagerd.v1.QueryAssetsRequest.LabelSelectorEntryR\rlabelSelector\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x05 \x01(\tR\tpageToken\x12J\n" +
	"\rbuild_options\x18\x06 \x01(\v2%.deploy.assetmanagerd.v1.BuildOptionsR\fbuildOptions\x1a@\n" +
	"\x12LabelSelectorEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x84\x03\n" +
	"\fBuildOptions\x12*\n" +
	"\x11enable_auto_build\x18\x01 \x01(\bR\x0fenableAutoBuild\x12.\n" +
	"\x13wait_for_completion\x18\x02 \x01(\bR\x11waitForCompletion\x122\n" +
	"\x15build_timeout_seconds\x18\x03 \x01(\x05R\x13buildTimeoutSeconds\x12Y\n" +
	"\fbuild_labels\x18\x04 \x03(\v26.deploy.assetmanagerd.v1.BuildOptions.BuildLabelsEntryR\vbuildLabels\x12\x1b\n" +
	"\ttenant_id\x18\x05 \x01(\tR\btenantId\x12,\n" +
	"\x12suggested_asset_id\x18\x06 \x01(\tR\x10suggestedAssetId\x1a>\n" +
	"\x10BuildLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc4\x01\n" +
	"\x13QueryAssetsResponse\x126\n" +
	"\x06assets\x18\x01 \x03(\v2\x1e.deploy.assetmanagerd.v1.AssetR\x06assets\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12M\n" +
	"\x10triggered_builds\x18\x03 \x03(\v2\".deploy.assetmanagerd.v1.BuildInfoR\x0ftriggeredBuilds\"\xa1\x01\n" +
	"\tBuildInfo\x12\x19\n" +
	"\bbuild_id\x18\x01 \x01(\tR\abuildId\x12!\n" +
	"\fdocker_image\x18\x02 \x01(\tR\vdockerImage\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x12\x19\n" +
	"\basset_id\x18\x05 \x01(\tR\aassetId*\x87\x01\n" +
	"\tAssetType\x12\x1a\n" +
	"\x16ASSET_TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11ASSET_TYPE_KERNEL\x10\x01\x12\x15\n" +
	"\x11ASSET_TYPE_ROOTFS\x10\x02\x12\x15\n" +
	"\x11ASSET_TYPE_INITRD\x10\x03\x12\x19\n" +
	"\x15ASSET_TYPE_DISK_IMAGE\x10\x04*\x96\x01\n" +
	"\vAssetStatus\x12\x1c\n" +
	"\x18ASSET_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16ASSET_STATUS_UPLOADING\x10\x01\x12\x1a\n" +
	"\x16ASSET_STATUS_AVAILABLE\x10\x02\x12\x19\n" +
	"\x15ASSET_STATUS_DELETING\x10\x03\x12\x16\n" +
	"\x12ASSET_STATUS_ERROR\x10\x04*\x97\x01\n" +
	"\x0eStorageBackend\x12\x1f\n" +
	"\x1bSTORAGE_BACKEND_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15STORAGE_BACKEND_LOCAL\x10\x01\x12\x16\n" +
	"\x12STORAGE_BACKEND_S3\x10\x02\x12\x18\n" +
	"\x14STORAGE_BACKEND_HTTP\x10\x03\x12\x17\n" +
	"\x13STORAGE_BACKEND_NFS\x10\x042\xca\b\n" +
	"\x13AssetManagerService\x12j\n" +
	"\vUploadAsset\x12+.deploy.assetmanagerd.v1.UploadAssetRequest\x1a,.deploy.assetmanagerd.v1.UploadAssetResponse(\x01\x12n\n" +
	"\rRegisterAsset\x12-.deploy.assetmanagerd.v1.RegisterAssetRequest\x1a..deploy.assetmanagerd.v1.RegisterAssetResponse\x12_\n" +
	"\bGetAsset\x12(.deploy.assetmanagerd.v1.GetAssetRequest\x1a).deploy.assetmanagerd.v1.GetAssetResponse\x12e\n" +
	"\n" +
	"ListAssets\x12*.deploy.assetmanagerd.v1.ListAssetsRequest\x1a+.deploy.assetmanagerd.v1.ListAssetsResponse\x12k\n" +
	"\fAcquireAsset\x12,.deploy.assetmanagerd.v1.AcquireAssetRequest\x1a-.deploy.assetmanagerd.v1.AcquireAssetResponse\x12k\n" +
	"\fReleaseAsset\x12,.deploy.assetmanagerd.v1.ReleaseAssetRequest\x1a-.deploy.assetmanagerd.v1.ReleaseAssetResponse\x12h\n" +
	"\vDeleteAsset\x12+.deploy.assetmanagerd.v1.DeleteAssetRequest\x1a,.deploy.assetmanagerd.v1.DeleteAssetResponse\x12q\n" +
	"\x0eGarbageCollect\x12..deploy.assetmanagerd.v1.GarbageCollectRequest\x1a/.deploy.assetmanagerd.v1.GarbageCollectResponse\x12n\n" +
	"\rPrepareAssets\x12-.deploy.assetmanagerd.v1.PrepareAssetsRequest\x1a..deploy.assetmanagerd.v1.PrepareAssetsResponse\x12h\n" +
	"\vQueryAssets\x12+.deploy.assetmanagerd.v1.QueryAssetsRequest\x1a,.deploy.assetmanagerd.v1.QueryAssetsResponseBOZMgithub.com/unkeyed/unkey/go/gen/proto/deploy/assetmanagerd/v1;assetmanagerdv1b\x06proto3"

var (
	file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescOnce sync.Once
	file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescData []byte
)

func file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescGZIP() []byte {
	file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescOnce.Do(func() {
		file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_deploy_assetmanagerd_v1_asset_proto_rawDesc), len(file_proto_deploy_assetmanagerd_v1_asset_proto_rawDesc)))
	})
	return file_proto_deploy_assetmanagerd_v1_asset_proto_rawDescData
}

var file_proto_deploy_assetmanagerd_v1_asset_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_proto_deploy_assetmanagerd_v1_asset_proto_goTypes = []any{
	(AssetType)(0),                 // 0: deploy.assetmanagerd.v1.AssetType
	(AssetStatus)(0),               // 1: deploy.assetmanagerd.v1.AssetStatus
	(StorageBackend)(0),            // 2: deploy.assetmanagerd.v1.StorageBackend
	(*Asset)(nil),                  // 3: deploy.assetmanagerd.v1.Asset
	(*UploadAssetRequest)(nil),     // 4: deploy.assetmanagerd.v1.UploadAssetRequest
	(*UploadAssetMetadata)(nil),    // 5: deploy.assetmanagerd.v1.UploadAssetMetadata
	(*UploadAssetResponse)(nil),    // 6: deploy.assetmanagerd.v1.UploadAssetResponse
	(*RegisterAssetRequest)(nil),   // 7: deploy.assetmanagerd.v1.RegisterAssetRequest
	(*RegisterAssetResponse)(nil),  // 8: deploy.assetmanagerd.v1.RegisterAssetResponse
	(*GetAssetRequest)(nil),        // 9: deploy.assetmanagerd.v1.GetAssetRequest
	(*GetAssetResponse)(nil),       // 10: deploy.assetmanagerd.v1.GetAssetResponse
	(*ListAssetsRequest)(nil),      // 11: deploy.assetmanagerd.v1.ListAssetsRequest
	(*ListAssetsResponse)(nil),     // 12: deploy.assetmanagerd.v1.ListAssetsResponse
	(*AcquireAssetRequest)(nil),    // 13: deploy.assetmanagerd.v1.AcquireAssetRequest
	(*AcquireAssetResponse)(nil),   // 14: deploy.assetmanagerd.v1.AcquireAssetResponse
	(*ReleaseAssetRequest)(nil),    // 15: deploy.assetmanagerd.v1.ReleaseAssetRequest
	(*ReleaseAssetResponse)(nil),   // 16: deploy.assetmanagerd.v1.ReleaseAssetResponse
	(*DeleteAssetRequest)(nil),     // 17: deploy.assetmanagerd.v1.DeleteAssetRequest
	(*DeleteAssetResponse)(nil),    // 18: deploy.assetmanagerd.v1.DeleteAssetResponse
	(*GarbageCollectRequest)(nil),  // 19: deploy.assetmanagerd.v1.GarbageCollectRequest
	(*GarbageCollectResponse)(nil), // 20: deploy.assetmanagerd.v1.GarbageCollectResponse
	(*PrepareAssetsRequest)(nil),   // 21: deploy.assetmanagerd.v1.PrepareAssetsRequest
	(*PrepareAssetsResponse)(nil),  // 22: deploy.assetmanagerd.v1.PrepareAssetsResponse
	(*QueryAssetsRequest)(nil),     // 23: deploy.assetmanagerd.v1.QueryAssetsRequest
	(*BuildOptions)(nil),           // 24: deploy.assetmanagerd.v1.BuildOptions
	(*QueryAssetsResponse)(nil),    // 25: deploy.assetmanagerd.v1.QueryAssetsResponse
	(*BuildInfo)(nil),              // 26: deploy.assetmanagerd.v1.BuildInfo
	nil,                            // 27: deploy.assetmanagerd.v1.Asset.LabelsEntry
	nil,                            // 28: deploy.assetmanagerd.v1.UploadAssetMetadata.LabelsEntry
	nil,                            // 29: deploy.assetmanagerd.v1.RegisterAssetRequest.LabelsEntry
	nil,                            // 30: deploy.assetmanagerd.v1.ListAssetsRequest.LabelSelectorEntry
	nil,                            // 31: deploy.assetmanagerd.v1.PrepareAssetsResponse.AssetPathsEntry
	nil,                            // 32: deploy.assetmanagerd.v1.QueryAssetsRequest.LabelSelectorEntry
	nil,                            // 33: deploy.assetmanagerd.v1.BuildOptions.BuildLabelsEntry
}
var file_proto_deploy_assetmanagerd_v1_asset_proto_depIdxs = []int32{
	0,  // 0: deploy.assetmanagerd.v1.Asset.type:type_name -> deploy.assetmanagerd.v1.AssetType
	1,  // 1: deploy.assetmanagerd.v1.Asset.status:type_name -> deploy.assetmanagerd.v1.AssetStatus
	2,  // 2: deploy.assetmanagerd.v1.Asset.backend:type_name -> deploy.assetmanagerd.v1.StorageBackend
	27, // 3: deploy.assetmanagerd.v1.Asset.labels:type_name -> deploy.assetmanagerd.v1.Asset.LabelsEntry
	5,  // 4: deploy.assetmanagerd.v1.UploadAssetRequest.metadata:type_name -> deploy.assetmanagerd.v1.UploadAssetMetadata
	0,  // 5: deploy.assetmanagerd.v1.UploadAssetMetadata.type:type_name -> deploy.assetmanagerd.v1.AssetType
	28, // 6: deploy.assetmanagerd.v1.UploadAssetMetadata.labels:type_name -> deploy.assetmanagerd.v1.UploadAssetMetadata.LabelsEntry
	3,  // 7: deploy.assetmanagerd.v1.UploadAssetResponse.asset:type_name -> deploy.assetmanagerd.v1.Asset
	0,  // 8: deploy.assetmanagerd.v1.RegisterAssetRequest.type:type_name -> deploy.assetmanagerd.v1.AssetType
	2,  // 9: deploy.assetmanagerd.v1.RegisterAssetRequest.backend:type_name -> deploy.assetmanagerd.v1.StorageBackend
	29, // 10: deploy.assetmanagerd.v1.RegisterAssetRequest.labels:type_name -> deploy.assetmanagerd.v1.RegisterAssetRequest.LabelsEntry
	3,  // 11: deploy.assetmanagerd.v1.RegisterAssetResponse.asset:type_name -> deploy.assetmanagerd.v1.Asset
	3,  // 12: deploy.assetmanagerd.v1.GetAssetResponse.asset:type_name -> deploy.assetmanagerd.v1.Asset
	0,  // 13: deploy.assetmanagerd.v1.ListAssetsRequest.type:type_name -> deploy.assetmanagerd.v1.AssetType
	1,  // 14: deploy.assetmanagerd.v1.ListAssetsRequest.status:type_name -> deploy.assetmanagerd.v1.AssetStatus
	30, // 15: deploy.assetmanagerd.v1.ListAssetsRequest.label_selector:type_name -> deploy.assetmanagerd.v1.ListAssetsRequest.LabelSelectorEntry
	3,  // 16: deploy.assetmanagerd.v1.ListAssetsResponse.assets:type_name -> deploy.assetmanagerd.v1.Asset
	3,  // 17: deploy.assetmanagerd.v1.AcquireAssetResponse.asset:type_name -> deploy.assetmanagerd.v1.Asset
	3,  // 18: deploy.assetmanagerd.v1.ReleaseAssetResponse.asset:type_name -> deploy.assetmanagerd.v1.Asset
	3,  // 19: deploy.assetmanagerd.v1.GarbageCollectResponse.deleted_assets:type_name -> deploy.assetmanagerd.v1.Asset
	31, // 20: deploy.assetmanagerd.v1.PrepareAssetsResponse.asset_paths:type_name -> deploy.assetmanagerd.v1.PrepareAssetsResponse.AssetPathsEntry
	0,  // 21: deploy.assetmanagerd.v1.QueryAssetsRequest.type:type_name -> deploy.assetmanagerd.v1.AssetType
	1,  // 22: deploy.assetmanagerd.v1.QueryAssetsRequest.status:type_name -> deploy.assetmanagerd.v1.AssetStatus
	32, // 23: deploy.assetmanagerd.v1.QueryAssetsRequest.label_selector:type_name -> deploy.assetmanagerd.v1.QueryAssetsRequest.LabelSelectorEntry
	24, // 24: deploy.assetmanagerd.v1.QueryAssetsRequest.build_options:type_name -> deploy.assetmanagerd.v1.BuildOptions
	33, // 25: deploy.assetmanagerd.v1.BuildOptions.build_labels:type_name -> deploy.assetmanagerd.v1.BuildOptions.BuildLabelsEntry
	3,  // 26: deploy.assetmanagerd.v1.QueryAssetsResponse.assets:type_name -> deploy.assetmanagerd.v1.Asset
	26, // 27: deploy.assetmanagerd.v1.QueryAssetsResponse.triggered_builds:type_name -> deploy.assetmanagerd.v1.BuildInfo
	4,  // 28: deploy.assetmanagerd.v1.AssetManagerService.UploadAsset:input_type -> deploy.assetmanagerd.v1.UploadAssetRequest
	7,  // 29: deploy.assetmanagerd.v1.AssetManagerService.RegisterAsset:input_type -> deploy.assetmanagerd.v1.RegisterAssetRequest
	9,  // 30: deploy.assetmanagerd.v1.AssetManagerService.GetAsset:input_type -> deploy.assetmanagerd.v1.GetAssetRequest
	11, // 31: deploy.assetmanagerd.v1.AssetManagerService.ListAssets:input_type -> deploy.assetmanagerd.v1.ListAssetsRequest
	13, // 32: deploy.assetmanagerd.v1.AssetManagerService.AcquireAsset:input_type -> deploy.assetmanagerd.v1.AcquireAssetRequest
	15, // 33: deploy.assetmanagerd.v1.AssetManagerService.ReleaseAsset:input_type -> deploy.assetmanagerd.v1.ReleaseAssetRequest
	17, // 34: deploy.assetmanagerd.v1.AssetManagerService.DeleteAsset:input_type -> deploy.assetmanagerd.v1.DeleteAssetRequest
	19, // 35: deploy.assetmanagerd.v1.AssetManagerService.GarbageCollect:input_type -> deploy.assetmanagerd.v1.GarbageCollectRequest
	21, // 36: deploy.assetmanagerd.v1.AssetManagerService.PrepareAssets:input_type -> deploy.assetmanagerd.v1.PrepareAssetsRequest
	23, // 37: deploy.assetmanagerd.v1.AssetManagerService.QueryAssets:input_type -> deploy.assetmanagerd.v1.QueryAssetsRequest
	6,  // 38: deploy.assetmanagerd.v1.AssetManagerService.UploadAsset:output_type -> deploy.assetmanagerd.v1.UploadAssetResponse
	8,  // 39: deploy.assetmanagerd.v1.AssetManagerService.RegisterAsset:output_type -> deploy.assetmanagerd.v1.RegisterAssetResponse
	10, // 40: deploy.assetmanagerd.v1.AssetManagerService.GetAsset:output_type -> deploy.assetmanagerd.v1.GetAssetResponse
	12, // 41: deploy.assetmanagerd.v1.AssetManagerService.ListAssets:output_type -> deploy.assetmanagerd.v1.ListAssetsResponse
	14, // 42: deploy.assetmanagerd.v1.AssetManagerService.AcquireAsset:output_type -> deploy.assetmanagerd.v1.AcquireAssetResponse
	16, // 43: deploy.assetmanagerd.v1.AssetManagerService.ReleaseAsset:output_type -> deploy.assetmanagerd.v1.ReleaseAssetResponse
	18, // 44: deploy.assetmanagerd.v1.AssetManagerService.DeleteAsset:output_type -> deploy.assetmanagerd.v1.DeleteAssetResponse
	20, // 45: deploy.assetmanagerd.v1.AssetManagerService.GarbageCollect:output_type -> deploy.assetmanagerd.v1.GarbageCollectResponse
	22, // 46: deploy.assetmanagerd.v1.AssetManagerService.PrepareAssets:output_type -> deploy.assetmanagerd.v1.PrepareAssetsResponse
	25, // 47: deploy.assetmanagerd.v1.AssetManagerService.QueryAssets:output_type -> deploy.assetmanagerd.v1.QueryAssetsResponse
	38, // [38:48] is the sub-list for method output_type
	28, // [28:38] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_proto_deploy_assetmanagerd_v1_asset_proto_init() }
func file_proto_deploy_assetmanagerd_v1_asset_proto_init() {
	if File_proto_deploy_assetmanagerd_v1_asset_proto != nil {
		return
	}
	file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes[1].OneofWrappers = []any{
		(*UploadAssetRequest_Metadata)(nil),
		(*UploadAssetRequest_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_deploy_assetmanagerd_v1_asset_proto_rawDesc), len(file_proto_deploy_assetmanagerd_v1_asset_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_deploy_assetmanagerd_v1_asset_proto_goTypes,
		DependencyIndexes: file_proto_deploy_assetmanagerd_v1_asset_proto_depIdxs,
		EnumInfos:         file_proto_deploy_assetmanagerd_v1_asset_proto_enumTypes,
		MessageInfos:      file_proto_deploy_assetmanagerd_v1_asset_proto_msgTypes,
	}.Build()
	File_proto_deploy_assetmanagerd_v1_asset_proto = out.File
	file_proto_deploy_assetmanagerd_v1_asset_proto_goTypes = nil
	file_proto_deploy_assetmanagerd_v1_asset_proto_depIdxs = nil
}
