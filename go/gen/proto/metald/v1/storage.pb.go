// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: metald/v1/storage.proto

package metaldv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StorageStats struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BytesRead       int64                  `protobuf:"varint,1,opt,name=bytes_read,json=bytesRead,proto3" json:"bytes_read,omitempty"`
	BytesWritten    int64                  `protobuf:"varint,2,opt,name=bytes_written,json=bytesWritten,proto3" json:"bytes_written,omitempty"`
	ReadOperations  int64                  `protobuf:"varint,3,opt,name=read_operations,json=readOperations,proto3" json:"read_operations,omitempty"`
	WriteOperations int64                  `protobuf:"varint,4,opt,name=write_operations,json=writeOperations,proto3" json:"write_operations,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StorageStats) Reset() {
	*x = StorageStats{}
	mi := &file_metald_v1_storage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageStats) ProtoMessage() {}

func (x *StorageStats) ProtoReflect() protoreflect.Message {
	mi := &file_metald_v1_storage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageStats.ProtoReflect.Descriptor instead.
func (*StorageStats) Descriptor() ([]byte, []int) {
	return file_metald_v1_storage_proto_rawDescGZIP(), []int{0}
}

func (x *StorageStats) GetBytesRead() int64 {
	if x != nil {
		return x.BytesRead
	}
	return 0
}

func (x *StorageStats) GetBytesWritten() int64 {
	if x != nil {
		return x.BytesWritten
	}
	return 0
}

func (x *StorageStats) GetReadOperations() int64 {
	if x != nil {
		return x.ReadOperations
	}
	return 0
}

func (x *StorageStats) GetWriteOperations() int64 {
	if x != nil {
		return x.WriteOperations
	}
	return 0
}

type StorageDevice struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this storage device
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Path to the backing file or block device
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Whether this device is read-only
	ReadOnly bool `protobuf:"varint,3,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	// Whether this is the root/boot device
	IsRootDevice bool `protobuf:"varint,4,opt,name=is_root_device,json=isRootDevice,proto3" json:"is_root_device,omitempty"`
	// Storage interface type (virtio-blk, nvme, etc.)
	InterfaceType string `protobuf:"bytes,5,opt,name=interface_type,json=interfaceType,proto3" json:"interface_type,omitempty"`
	// Additional storage options
	Options       map[string]string `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageDevice) Reset() {
	*x = StorageDevice{}
	mi := &file_metald_v1_storage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageDevice) ProtoMessage() {}

func (x *StorageDevice) ProtoReflect() protoreflect.Message {
	mi := &file_metald_v1_storage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageDevice.ProtoReflect.Descriptor instead.
func (*StorageDevice) Descriptor() ([]byte, []int) {
	return file_metald_v1_storage_proto_rawDescGZIP(), []int{1}
}

func (x *StorageDevice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StorageDevice) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *StorageDevice) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *StorageDevice) GetIsRootDevice() bool {
	if x != nil {
		return x.IsRootDevice
	}
	return false
}

func (x *StorageDevice) GetInterfaceType() string {
	if x != nil {
		return x.InterfaceType
	}
	return ""
}

func (x *StorageDevice) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

var File_metald_v1_storage_proto protoreflect.FileDescriptor

const file_metald_v1_storage_proto_rawDesc = "" +
	"\n" +
	"\x17metald/v1/storage.proto\x12\tmetald.v1\"\xa6\x01\n" +
	"\fStorageStats\x12\x1d\n" +
	"\n" +
	"bytes_read\x18\x01 \x01(\x03R\tbytesRead\x12#\n" +
	"\rbytes_written\x18\x02 \x01(\x03R\fbytesWritten\x12'\n" +
	"\x0fread_operations\x18\x03 \x01(\x03R\x0ereadOperations\x12)\n" +
	"\x10write_operations\x18\x04 \x01(\x03R\x0fwriteOperations\"\x9a\x02\n" +
	"\rStorageDevice\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x1b\n" +
	"\tread_only\x18\x03 \x01(\bR\breadOnly\x12$\n" +
	"\x0eis_root_device\x18\x04 \x01(\bR\fisRootDevice\x12%\n" +
	"\x0einterface_type\x18\x05 \x01(\tR\rinterfaceType\x12?\n" +
	"\aoptions\x18\x06 \x03(\v2%.metald.v1.StorageDevice.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B:Z8github.com/unkeyed/unkey/go/gen/proto/metald/v1;metaldv1b\x06proto3"

var (
	file_metald_v1_storage_proto_rawDescOnce sync.Once
	file_metald_v1_storage_proto_rawDescData []byte
)

func file_metald_v1_storage_proto_rawDescGZIP() []byte {
	file_metald_v1_storage_proto_rawDescOnce.Do(func() {
		file_metald_v1_storage_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metald_v1_storage_proto_rawDesc), len(file_metald_v1_storage_proto_rawDesc)))
	})
	return file_metald_v1_storage_proto_rawDescData
}

var file_metald_v1_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_metald_v1_storage_proto_goTypes = []any{
	(*StorageStats)(nil),  // 0: metald.v1.StorageStats
	(*StorageDevice)(nil), // 1: metald.v1.StorageDevice
	nil,                   // 2: metald.v1.StorageDevice.OptionsEntry
}
var file_metald_v1_storage_proto_depIdxs = []int32{
	2, // 0: metald.v1.StorageDevice.options:type_name -> metald.v1.StorageDevice.OptionsEntry
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_metald_v1_storage_proto_init() }
func file_metald_v1_storage_proto_init() {
	if File_metald_v1_storage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metald_v1_storage_proto_rawDesc), len(file_metald_v1_storage_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_metald_v1_storage_proto_goTypes,
		DependencyIndexes: file_metald_v1_storage_proto_depIdxs,
		MessageInfos:      file_metald_v1_storage_proto_msgTypes,
	}.Build()
	File_metald_v1_storage_proto = out.File
	file_metald_v1_storage_proto_goTypes = nil
	file_metald_v1_storage_proto_depIdxs = nil
}
