post:
  tags:
    - permissions
  summary: Create a new permission
  description: |-
    Creates a new permission in the workspace. Permissions are the fundamental building blocks of access control in Unkey's RBAC system, representing specific actions or capabilities that can be granted to API keys either directly or through roles.
    This endpoint allows you to:
    - Define new permissions with descriptive names and URL-safe slugs
    - Set up granular access control for your API keys
    - Build the foundation for role-based access control
    - Organize permissions with consistent naming patterns
    Best practices:
    - Use hierarchical naming (e.g., 'resource.action' or 'resource.subresource.action')
    - Choose descriptive but concise permission names
    - Use URL-safe slugs for easy reference in APIs
  operationId: createPermission
  x-speakeasy-name-override: CreatePermission
  security:
    - rootKey: []
  requestBody:
    content:
      application/json:
        schema:
          "$ref": "./V2PermissionsCreatePermissionRequestBody.yaml"
        examples:
          basic:
            summary: Basic permission creation
            value:
              name: documents.read
              slug: documents-read
              description: Allows reading document resources
          withoutDescription:
            summary: Permission without description
            value:
              name: files.upload
              slug: files-upload
          complexPermission:
            summary: Complex permission with detailed info
            value:
              name: admin.users.delete
              slug: admin-users-delete
              description:
                Grants full administrative access to delete user accounts.
                This is a high-privilege permission that should be used carefully.
    required: true
  responses:
    "200":
      description: Successfully created permission
      content:
        application/json:
          schema:
            "$ref": "./V2PermissionsCreatePermissionResponseBody.yaml"
    "400":
      description: Bad Request
      content:
        application/json:
          schema:
            "$ref": "../../../../error/BadRequestErrorResponse.yaml"
    "401":
      description: Unauthorized
      content:
        application/json:
          schema:
            "$ref": "../../../../error/UnauthorizedErrorResponse.yaml"
    "403":
      description: Forbidden
      content:
        application/json:
          schema:
            "$ref": "../../../../error/ForbiddenErrorResponse.yaml"
    "409":
      description: Conflict - permission with that name already exists
      content:
        application/json:
          schema:
            "$ref": "../../../../error/ConflictErrorResponse.yaml"
    "500":
      description: Internal Server Error
      content:
        application/json:
          schema:
            "$ref": "../../../../error/InternalServerErrorResponse.yaml"
