Request:
  required: true
  content:
    application/json:
      schema:
        "$ref": "#/V2IdentitiesCreateIdentityRequestBody"
      examples:
        basic:
          summary: Basic identity creation
          value:
            externalId: user_abc123
        withMetadata:
          summary: Identity with user metadata
          value:
            externalId: user_abc123
            meta:
              name: Alice Smith
              email: alice@example.com
              plan: premium
              accountCreated: "2023-01-15T08:30:00Z"
              region: eu-west
        withRatelimits:
          summary: Identity with shared rate limits
          value:
            externalId: org_xyz456
            meta:
              name: Acme Corporation
              planTier: enterprise
            ratelimits:
              - name: requests
                limit: 10000
                duration: 3600000
                autoApply: true
              - name: heavy_compute
                limit: 100
                duration: 86400000
                autoApply: false

V2IdentitiesCreateIdentityRequestBody:
  type: object
  required:
    - externalId
  properties:
    externalId:
      type: string
      minLength: 3
      maxLength: 255
      pattern: "^[a-zA-Z0-9_.-]+$"
      description: |
        Creates an identity using your system's unique identifier for a user, organization, or entity.
        Must be stable and unique across your workspace - duplicate externalIds return CONFLICT errors.
        This identifier links Unkey identities to your authentication system, database records, or tenant structure.
        Avoid changing externalIds after creation as this breaks the link between your systems.
        Use consistent identifier patterns across your application for easier management and debugging.
        Accepts letters, numbers, underscores, dots, and hyphens for flexible identifier formats.
        Essential for implementing proper multi-tenant isolation and user-specific rate limiting.
      example: user_123
    meta:
      type: object
      additionalProperties: true
      maxProperties: 100
      description: |
        Stores arbitrary JSON metadata returned during key verification for contextual information.
        Eliminates additional database lookups during verification, improving performance for stateless services.
        Avoid storing sensitive data here as it's returned in verification responses.
        Large metadata objects increase verification latency and should stay under 10KB total size.
        Use this for subscription details, feature flags, user preferences, and organization information.
        Metadata is returned as-is whenever keys associated with this identity are verified.
    ratelimits:
      type: array
      maxItems: 50
      items:
        $ref: "../../../../common/RatelimitRequest.yaml"
      description: |
        Defines shared rate limits that apply to all keys belonging to this identity.
        Prevents abuse by users with multiple keys by enforcing consistent limits across their entire key portfolio.
        Essential for implementing fair usage policies and tiered access levels in multi-tenant applications.
        Rate limit counters are shared across all keys with this identity, regardless of how many keys the user creates.
        During verification, specify which named limits to check for enforcement.
        Identity rate limits supplement any key-specific rate limits that may also be configured.
        - Each named limit can have different thresholds and windows
        When verifying keys, you can specify which limits you want to use and all keys attached to this identity will share the limits, regardless of which specific key is used.
  additionalProperties: false
