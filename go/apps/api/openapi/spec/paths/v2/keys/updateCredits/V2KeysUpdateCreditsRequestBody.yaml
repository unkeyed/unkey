type: object
required:
  - keyId
  - operation
properties:
  keyId:
    type: string
    description: The ID of the key to update (begins with `key_`). This is the
      database reference ID for the key, not the actual API key string that
      users authenticate with. This ID uniquely identifies which key's credits
      will be updated.
    example: key_2cGKbMxRyIzhCxo1Idjz8q
    minLength: 3
  value:
    type: integer
    format: int64
    nullable: true
    minimum: 0
    maximum: 9223372036854775807 # Max int64 value for future-proofing
    description: |
      The new value for the remaining credits. This is an absolute value replacement, not an increment or decrement operation.

      Key behaviors:
      - This completely replaces the current remaining credits value when operation is set to 'set'
      - To add credits, either replace the current value with the new value or increment the current value by a new value
      - To make a key unlimited, set value = null
      - To make a key with unlimited usage have a specific limit, set remaining to a positive number
      - If a decrement would result in a negative value, the remaining credits are set to zero
      - Credits are decremented each time the key is successfully verified (by the cost value, default 1)
      - When credits reach zero, verification fails with code=USAGE_EXCEEDED

      This field is useful for implementing usage-based pricing, subscription tiers, trial periods, or consumption quotas.
    example: 1000
  operation:
    type: string
    enum:
      - set
      - increment
      - decrement
    description: |
      The operation to perform on the remaining credits. This can be one of:
      - set: Replace the current remaining credits value with the specified value.
      - increment: Add the specified value to the current remaining credits value.
      - decrement: Subtract the specified value from the current remaining credits value.
additionalProperties: false
