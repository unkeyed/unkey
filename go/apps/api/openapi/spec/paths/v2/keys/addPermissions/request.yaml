Request:
  required: true
  content:
    application/json:
      schema:
        "$ref": "#/V2KeysAddPermissionsRequestBody"
      examples:
        basic:
          summary: Add permissions using IDs
          value:
            keyId: key_2cGKbMxRyIzhCxo1Idjz8q
            permissions:
              - id: perm_1n9McEIBSqy44Qy7hzWyM5
              - id: perm_2zF4mNyP9BsRj2aQwDxVkT
        withSlugs:
          summary: Add permissions using slugs
          value:
            keyId: key_2cGKbMxRyIzhCxo1Idjz8q
            permissions:
              - slug: documents.write
              - slug: documents.delete

V2KeysAddPermissionsRequestBody:
  type: object
  required:
    - keyId
    - permissions
  properties:
    keyId:
      type: string
      minLength: 3
      maxLength: 255
      pattern: "^[a-zA-Z0-9_]+$"
      description: |
        The unique identifier of the key to add permissions to (begins with 'key_').
        This ID comes from the createKey response and identifies which key will receive additional permissions.
        This is the database ID, not the actual API key string.
      example: key_2cGKbMxRyIzhCxo1Idjz8q
    permissions:
      type: array
      minItems: 1
      maxItems: 1000
      description: |
        The permissions to add to this key. This is an additive operation that supplements existing permissions.
        Operations are idempotent - adding existing permissions has no effect and causes no errors.
        Permission changes take effect immediately for new verifications.
      items:
        type: object
        properties:
          id:
            type: string
            description: |
              The ID of an existing permission (begins with 'perm_').
              Provide either ID or slug for each permission, not both.
            example: perm_1n9McEIBSqy44Qy7hzWyM5
          slug:
            type: string
            description: |
              The slug of the permission.
              Provide either ID or slug for each permission, not both.
            example: documents.write
          name:
            type: string
            description: |
              The name of the permission to create if it doesn't exist.
              Requires the 'create' flag to be true.
            example: reports.export
          create:
            type: boolean
            description: |
              Whether to create the permission if it doesn't exist.
              Requires appropriate permissions on your root key.
            example: true
        oneOf:
          - required: [id]
          - required: [slug]
          - required: [name, create]
  additionalProperties: false