post:
  tags:
    - keys
  summary: Create a new API key with customizable security features
  description: |-
    Creates a new API key with configurable security properties, usage limits, and metadata. This endpoint generates a cryptographically secure key that you can distribute to your users for authenticating with your API.
    The key is only returned once in the response - Unkey stores only a secure hash of the key, not the key itself. You must provide this key directly to your end user; it cannot be retrieved later (unless created with `recoverable: true`, which is less secure).
    Keys are associated with a specific API (via `apiId`), which helps isolate environments (dev/staging/prod) and prevents keys from being used across different services. Keys can be further configured with:
    - Optional prefixes for visual identification
    - Expiration dates for temporary access
    - Usage limits (credits) for consumption-based APIs
    - Rate limits for abuse prevention
    - Permissions and roles for granular access control
    - Metadata for storing context with the key
    Best practices include using environment-specific API IDs, meaningful prefixes, appropriate byte length for security needs, and avoiding storing keys in your databases.
  operationId: createKey
  x-speakeasy-name-override: createKey
  security:
    - rootKey: []
  requestBody:
    $ref: "./request.yaml#/Request"
  responses:
    "200":
      $ref: "./response.yaml#/Response"
    "400":
      $ref: "../../../../error/responses.yaml#/BadRequestError"
    "401":
      $ref: "../../../../error/responses.yaml#/UnauthorizedError"
    "403":
      $ref: "../../../../error/responses.yaml#/ForbiddenError"
    "404":
      $ref: "../../../../error/responses.yaml#/NotFoundError"
    "500":
      $ref: "../../../../error/responses.yaml#/InternalServerError"