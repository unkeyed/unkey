// Package openapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package openapi

const (
	RootKeyScopes = "rootKey.Scopes"
)

// ApisCreateApiResponseData defines model for ApisCreateApiResponseData.
type ApisCreateApiResponseData struct {
	// ApiId The id of the API
	ApiId string `json:"apiId"`

	// Name The name of the API
	Name string `json:"name"`
}

// BadRequestErrorDetails defines model for BadRequestErrorDetails.
type BadRequestErrorDetails struct {
	// Detail A human-readable explanation specific to this occurrence of the problem.
	Detail string `json:"detail"`

	// Errors Optional list of individual error details
	Errors []ValidationError `json:"errors"`

	// Instance A URI reference that identifies the specific occurrence of the problem.
	Instance *string `json:"instance,omitempty"`

	// Status HTTP status code
	Status int `json:"status"`

	// Title A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
	Title string `json:"title"`

	// Type A URI reference to human-readable documentation for the error.
	Type string `json:"type"`
}

// BadRequestErrorResponse defines model for BadRequestErrorResponse.
type BadRequestErrorResponse struct {
	Error BadRequestErrorDetails `json:"error"`
	Meta  Meta                   `json:"meta"`
}

// BaseError defines model for BaseError.
type BaseError struct {
	// Detail A human-readable explanation specific to this occurrence of the problem.
	Detail string `json:"detail"`

	// Instance A URI reference that identifies the specific occurrence of the problem.
	Instance *string `json:"instance,omitempty"`

	// Status HTTP status code
	Status int `json:"status"`

	// Title A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
	Title string `json:"title"`

	// Type A URI reference to human-readable documentation for the error.
	Type string `json:"type"`
}

// ConflictErrorResponse defines model for ConflictErrorResponse.
type ConflictErrorResponse struct {
	Error BaseError `json:"error"`
	Meta  Meta      `json:"meta"`
}

// ForbiddenErrorResponse defines model for ForbiddenErrorResponse.
type ForbiddenErrorResponse struct {
	Error BaseError `json:"error"`
	Meta  Meta      `json:"meta"`
}

// IdentitiesCreateIdentityResponseData defines model for IdentitiesCreateIdentityResponseData.
type IdentitiesCreateIdentityResponseData struct {
	// IdentityId The id of the identity. Used internally, you do not need to store this.
	IdentityId string `json:"identityId"`
}

// InternalServerErrorResponse defines model for InternalServerErrorResponse.
type InternalServerErrorResponse struct {
	Error BaseError `json:"error"`
	Meta  Meta      `json:"meta"`
}

// LivenessResponseData defines model for LivenessResponseData.
type LivenessResponseData struct {
	// Message Whether we're alive or not
	Message string `json:"message"`
}

// Meta defines model for Meta.
type Meta struct {
	// RequestId A unique id for this request. Please always provide this to support.
	RequestId string `json:"requestId"`
}

// NotFoundErrorResponse defines model for NotFoundErrorResponse.
type NotFoundErrorResponse struct {
	Error BaseError `json:"error"`
	Meta  Meta      `json:"meta"`
}

// Pagination defines model for Pagination.
type Pagination struct {
	// Cursor Opaque token for retrieving the next set of results
	Cursor *string `json:"cursor,omitempty"`

	// HasMore Indicates if more results exist beyond this page
	HasMore *bool `json:"hasMore,omitempty"`
}

// PreconditionFailedErrorResponse defines model for PreconditionFailedErrorResponse.
type PreconditionFailedErrorResponse struct {
	Error BaseError `json:"error"`
	Meta  Meta      `json:"meta"`
}

// RatelimitDeleteOverrideResponseData defines model for RatelimitDeleteOverrideResponseData.
type RatelimitDeleteOverrideResponseData = map[string]interface{}

// RatelimitLimitResponseData defines model for RatelimitLimitResponseData.
type RatelimitLimitResponseData struct {
	// Limit The maximum number of requests allowed.
	Limit int64 `json:"limit"`

	// OverrideId The override that was used. May be empty
	OverrideId *string `json:"overrideId,omitempty"`

	// Remaining The number of requests remaining in the current window.
	Remaining int64 `json:"remaining"`

	// Reset The time in milliseconds when the rate limit will reset.
	Reset int64 `json:"reset"`

	// Success Whether the request passed the ratelimit. If false, the request must be blocked.
	Success bool `json:"success"`
}

// RatelimitListOverridesResponseData defines model for RatelimitListOverridesResponseData.
type RatelimitListOverridesResponseData = []RatelimitOverride

// RatelimitOverride defines model for RatelimitOverride.
type RatelimitOverride struct {
	// Duration The duration in milliseconds for the rate limit window.
	Duration int64 `json:"duration"`

	// Identifier Identifier of your user, this can be their userId, an email, an ip or anything else. Wildcards ( * ) can be used to match multiple identifiers, More info can be found at https://www.unkey.com/docs/ratelimiting/overrides#wildcard-rules
	Identifier string `json:"identifier"`

	// Limit The maximum number of requests allowed.
	Limit int64 `json:"limit"`

	// NamespaceId The id of the namespace.
	NamespaceId string `json:"namespaceId"`

	// OverrideId The id of the override.
	OverrideId string `json:"overrideId"`
}

// RatelimitSetOverrideResponseData defines model for RatelimitSetOverrideResponseData.
type RatelimitSetOverrideResponseData struct {
	// OverrideId The id of the override. This is used internally.
	OverrideId string `json:"overrideId"`
}

// UnauthorizedErrorResponse defines model for UnauthorizedErrorResponse.
type UnauthorizedErrorResponse struct {
	Error BaseError `json:"error"`
	Meta  Meta      `json:"meta"`
}

// V2ApisCreateApiRequestBody defines model for V2ApisCreateApiRequestBody.
type V2ApisCreateApiRequestBody struct {
	// Name The name for your API. This is not customer facing.
	Name string `json:"name"`
}

// V2ApisCreateApiResponseBody defines model for V2ApisCreateApiResponseBody.
type V2ApisCreateApiResponseBody struct {
	Data ApisCreateApiResponseData `json:"data"`
	Meta Meta                      `json:"meta"`
}

// V2IdentitiesCreateIdentityRequestBody defines model for V2IdentitiesCreateIdentityRequestBody.
type V2IdentitiesCreateIdentityRequestBody struct {
	// ExternalId The id of this identity in your system.
	//
	// This usually comes from your authentication provider and could be a userId, organisationId or even an email.
	// It does not matter what you use, as long as it uniquely identifies something in your application.
	//
	// `externalId`s are unique across your workspace and therefore a `CONFLICT` error is returned when you try to create duplicates.
	ExternalId string `json:"externalId"`

	// Meta Attach metadata to this identity that you need to have access to when verifying a key.
	//
	// This will be returned as part of the `verifyKey` response.
	Meta *map[string]interface{} `json:"meta,omitempty"`

	// Ratelimits Attach ratelimits to this identity.
	//
	// When verifying keys, you can specify which limits you want to use and all keys attached to this identity, will share the limits.
	Ratelimits *[]V2Ratelimit `json:"ratelimits,omitempty"`
}

// V2IdentitiesCreateIdentityResponseBody defines model for V2IdentitiesCreateIdentityResponseBody.
type V2IdentitiesCreateIdentityResponseBody struct {
	Data IdentitiesCreateIdentityResponseData `json:"data"`
	Meta Meta                                 `json:"meta"`
}

// V2LivenessResponseBody defines model for V2LivenessResponseBody.
type V2LivenessResponseBody struct {
	Data LivenessResponseData `json:"data"`
	Meta Meta                 `json:"meta"`
}

// V2Ratelimit defines model for V2Ratelimit.
type V2Ratelimit struct {
	// Duration The duration for each ratelimit window in milliseconds.
	Duration int64 `json:"duration"`

	// Limit How many requests may pass within a given window before requests are rejected.
	Limit int64 `json:"limit"`

	// Name The name of this limit. You will need to use this again when verifying a key.
	Name string `json:"name"`
}

// V2RatelimitDeleteOverrideRequestBody Deletes an existing override.
type V2RatelimitDeleteOverrideRequestBody struct {
	// Identifier Identifier of the override to delete
	Identifier string `json:"identifier"`

	// NamespaceId The id of the namespace. Either namespaceId or namespaceName must be provided
	NamespaceId *string `json:"namespaceId,omitempty"`

	// NamespaceName The name of the namespace. Either namespaceId or namespaceName must be provided
	NamespaceName *string `json:"namespaceName,omitempty"`
}

// V2RatelimitDeleteOverrideResponseBody defines model for V2RatelimitDeleteOverrideResponseBody.
type V2RatelimitDeleteOverrideResponseBody struct {
	Data RatelimitDeleteOverrideResponseData `json:"data"`
	Meta Meta                                `json:"meta"`
}

// V2RatelimitGetOverrideRequestBody Gets the configuration of an existing override.
type V2RatelimitGetOverrideRequestBody struct {
	// Identifier Identifier of your user, this can be their userId, an email, an ip or anything else. Wildcards ( * ) can be used to match multiple identifiers, More info can be found at https://www.unkey.com/docs/ratelimiting/overrides#wildcard-rules
	Identifier string `json:"identifier"`

	// NamespaceId The id of the namespace. Either namespaceId or namespaceName must be provided
	NamespaceId *string `json:"namespaceId,omitempty"`

	// NamespaceName The name of the namespace. Either namespaceId or namespaceName must be provided
	NamespaceName *string `json:"namespaceName,omitempty"`
}

// V2RatelimitGetOverrideResponseBody defines model for V2RatelimitGetOverrideResponseBody.
type V2RatelimitGetOverrideResponseBody struct {
	Data RatelimitOverride `json:"data"`
	Meta Meta              `json:"meta"`
}

// V2RatelimitLimitRequestBody defines model for V2RatelimitLimitRequestBody.
type V2RatelimitLimitRequestBody struct {
	// Cost The cost of the request. Defaults to 1 if not provided.
	Cost *int64 `json:"cost,omitempty"`

	// Duration The duration in milliseconds for the rate limit window.
	Duration int64 `json:"duration"`

	// Identifier The identifier for the rate limit.
	Identifier string `json:"identifier"`

	// Limit The maximum number of requests allowed.
	Limit int64 `json:"limit"`

	// Namespace The namespace name for the rate limit.
	Namespace string `json:"namespace"`
}

// V2RatelimitLimitResponseBody defines model for V2RatelimitLimitResponseBody.
type V2RatelimitLimitResponseBody struct {
	Data RatelimitLimitResponseData `json:"data"`
	Meta Meta                       `json:"meta"`
}

// V2RatelimitListOverridesRequestBody defines model for V2RatelimitListOverridesRequestBody.
type V2RatelimitListOverridesRequestBody struct {
	// Cursor Pagination cursor from a previous response
	Cursor *string `json:"cursor,omitempty"`

	// Limit Maximum number of results to return
	Limit *int `json:"limit,omitempty"`

	// NamespaceId The id of the namespace to list overrides for.
	NamespaceId *string `json:"namespaceId,omitempty"`

	// NamespaceName The name of the namespace to list overrides for.
	NamespaceName *string `json:"namespaceName,omitempty"`
}

// V2RatelimitListOverridesResponseBody defines model for V2RatelimitListOverridesResponseBody.
type V2RatelimitListOverridesResponseBody struct {
	Data       RatelimitListOverridesResponseData `json:"data"`
	Meta       Meta                               `json:"meta"`
	Pagination *Pagination                        `json:"pagination,omitempty"`
}

// V2RatelimitSetOverrideRequestBody Sets a new or overwrites an existing override.
type V2RatelimitSetOverrideRequestBody struct {
	// Duration The duration in milliseconds for the rate limit window.
	Duration int64 `json:"duration"`

	// Identifier Identifier of your user, this can be their userId, an email, an ip or anything else. Wildcards ( * ) can be used to match multiple identifiers, More info can be found at https://www.unkey.com/docs/ratelimiting/overrides#wildcard-rules
	Identifier string `json:"identifier"`

	// Limit The maximum number of requests allowed.
	Limit int64 `json:"limit"`

	// NamespaceId The id of the namespace. Either namespaceId or namespaceName must be provided
	NamespaceId *string `json:"namespaceId,omitempty"`

	// NamespaceName The name of the namespace. Either namespaceId or namespaceName must be provided
	NamespaceName *string `json:"namespaceName,omitempty"`
}

// V2RatelimitSetOverrideResponseBody defines model for V2RatelimitSetOverrideResponseBody.
type V2RatelimitSetOverrideResponseBody struct {
	Data RatelimitSetOverrideResponseData `json:"data"`
	Meta Meta                             `json:"meta"`
}

// ValidationError defines model for ValidationError.
type ValidationError struct {
	// Fix A human-readable message describing how to fix the error.
	Fix *string `json:"fix,omitempty"`

	// Location Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
	Location string `json:"location"`

	// Message Error message text
	Message string `json:"message"`
}

// CreateApiJSONRequestBody defines body for CreateApi for application/json ContentType.
type CreateApiJSONRequestBody = V2ApisCreateApiRequestBody

// V2IdentitiesCreateIdentityJSONRequestBody defines body for V2IdentitiesCreateIdentity for application/json ContentType.
type V2IdentitiesCreateIdentityJSONRequestBody = V2IdentitiesCreateIdentityRequestBody

// RatelimitDeleteOverrideJSONRequestBody defines body for RatelimitDeleteOverride for application/json ContentType.
type RatelimitDeleteOverrideJSONRequestBody = V2RatelimitDeleteOverrideRequestBody

// RatelimitGetOverrideJSONRequestBody defines body for RatelimitGetOverride for application/json ContentType.
type RatelimitGetOverrideJSONRequestBody = V2RatelimitGetOverrideRequestBody

// V1RatelimitLimitJSONRequestBody defines body for V1RatelimitLimit for application/json ContentType.
type V1RatelimitLimitJSONRequestBody = V2RatelimitLimitRequestBody

// RatelimitListOverridesJSONRequestBody defines body for RatelimitListOverrides for application/json ContentType.
type RatelimitListOverridesJSONRequestBody = V2RatelimitListOverridesRequestBody

// RatelimitSetOverrideJSONRequestBody defines body for RatelimitSetOverride for application/json ContentType.
type RatelimitSetOverrideJSONRequestBody = V2RatelimitSetOverrideRequestBody
