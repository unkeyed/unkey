syntax = "proto3";

package metald.v1;

option go_package = "github.com/unkeyed/unkey/go/gen/proto/metald/v1;metaldv1";

message NetworkStats {
  int64 bytes_received = 1;
  int64 bytes_transmitted = 2;
  int64 packets_received = 3;
  int64 packets_transmitted = 4;
}

message NetworkInterface {
  // Unique identifier for this network interface
  string id = 1;

  // MAC address (optional, will be generated if not provided)
  string mac_address = 2;

  // Host-side TAP device name
  string tap_device = 3;

  // Network interface type (virtio-net, e1000, etc.)
  string interface_type = 4;

  // Additional network options
  map<string, string> options = 5;

  // IPv4 configuration (optional)
  IPv4Config ipv4_config = 6;

  // IPv6 configuration (optional)
  IPv6Config ipv6_config = 7;

  // Network mode
  NetworkMode mode = 8;

  // Rate limiting
  RateLimit rx_rate_limit = 10; // Receive rate limit
  RateLimit tx_rate_limit = 11; // Transmit rate limit
}

// IPv4 network configuration
message IPv4Config {
  string address = 1;              // IPv4 address (e.g., "10.100.1.2")
  string netmask = 2;              // Network mask (e.g., "255.255.255.0")
  string gateway = 3;              // Default gateway
  repeated string dns_servers = 4; // DNS servers
  bool dhcp = 5;                   // Use DHCP instead of static config
}

// IPv6 network configuration
message IPv6Config {
  string address = 1;              // IPv6 address (e.g., "fd00::1:2")
  int32 prefix_length = 2;         // Prefix length (e.g., 64)
  string gateway = 3;              // Default gateway
  repeated string dns_servers = 4; // DNS servers (IPv6 addresses)
  bool slaac = 5; // Use SLAAC (Stateless Address Autoconfiguration)
  bool privacy_extensions = 6; // Enable privacy extensions
  string link_local = 7;       // Link-local address (auto-generated if empty)
}

// Network mode for the interface
enum NetworkMode {
  NETWORK_MODE_UNSPECIFIED = 0;
  NETWORK_MODE_DUAL_STACK = 1; // Both IPv4 and IPv6
  NETWORK_MODE_IPV4_ONLY = 2;  // IPv4 only
  NETWORK_MODE_IPV6_ONLY = 3;  // IPv6 only
}

// Rate limiting configuration
message RateLimit {
  int64 bandwidth = 1;   // Bandwidth in bytes/second
  int64 refill_time = 2; // Token bucket refill time in milliseconds
  int64 burst = 3;       // Burst size in bytes
}
