# SPIRE Agent Configuration - Canary Environment
# AIDEV-NOTE: Production-like configuration for canary testing

agent {
  data_dir = "/var/lib/spire/agent/data"
  log_level = "INFO"
  log_format = "json"
  
  # Server connection configuration
  server_address = "127.0.0.1"
  server_port = "8085"
  socket_path = "/var/lib/spire/agent/agent.sock"
  
  # Trust domain from environment
  trust_domain = "canary.unkey.app"
  
  # Bootstrap bundle for initial trust
  trust_bundle_path = "/etc/spire/agent/bootstrap.crt"
  
  # Workload API configuration
  authorized_delegates = []
}

plugins {
  # Join token attestation for canary (production-like)
  NodeAttestor "join_token" {
    plugin_data {
      # Token provided via UNKEY_SPIRE_JOIN_TOKEN environment variable
      # In production, consider using node attestation instead
    }
  }
  
  # Disk-based key storage
  KeyManager "disk" {
    plugin_data {
      directory = "/var/lib/spire/agent/keys"
    }
  }
  
  # Unix workload attestor for process-based identity
  WorkloadAttestor "unix" {
    plugin_data {
      discover_workload_path = true
      discover_workload_user = true
      discover_workload_group = true
    }
  }
}

health_checks {
  listener_enabled = true
  bind_address = "127.0.0.1"
  bind_port = "9990"  # AIDEV-NOTE: Health checks in 9xxx range like metrics
  live_path = "/live"
  ready_path = "/ready"
}

# Canary telemetry with environment labels
telemetry {
  Prometheus {
    host = "127.0.0.1"
    port = 9989
  }
}