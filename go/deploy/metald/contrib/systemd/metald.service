[Unit]
Description=Metald VM Management Service
Documentation=https://github.com/unkeyed/unkey/go/deploy/metald
After=network.target
Wants=network.target

[Service]
Type=simple
User=metald
Group=metald
WorkingDirectory=/opt/metald
ExecStart=/usr/local/bin/metald
Restart=always
RestartSec=5
StandardOutput=journal
StandardError=journal
SyslogIdentifier=metald

# Environment variables
Environment=UNKEY_METALD_BACKEND=firecracker
Environment=UNKEY_METALD_OTEL_ENABLED=true
Environment=UNKEY_METALD_PORT=8080
Environment=UNKEY_METALD_ADDRESS=0.0.0.0
Environment=UNKEY_METALD_OTEL_SERVICE_NAME=metald
Environment=UNKEY_METALD_OTEL_ENDPOINT=localhost:4318
Environment=UNKEY_METALD_OTEL_PROMETHEUS_PORT=9464

# Process Manager Configuration
Environment=UNKEY_METALD_SOCKET_DIR=/opt/metald/sockets
Environment=UNKEY_METALD_LOG_DIR=/opt/metald/logs
Environment=UNKEY_METALD_MAX_PROCESSES=1000

# Billing Configuration
Environment=UNKEY_METALD_BILLING_ENABLED=true
Environment=UNKEY_METALD_BILLING_ENDPOINT=http://localhost:8081
Environment=UNKEY_METALD_BILLING_MOCK_MODE=false

# AssetManager Configuration
Environment=UNKEY_METALD_ASSETMANAGER_ENABLED=true
Environment=UNKEY_METALD_ASSETMANAGER_ENDPOINT=http://localhost:8083
Environment=UNKEY_METALD_ASSETMANAGER_CACHE_DIR=/opt/metald/assets

# Jailer configuration for production
# Set to false for development without jailer
Environment=UNKEY_METALD_JAILER_ENABLED=true
Environment=UNKEY_METALD_JAILER_BINARY=/usr/local/bin/jailer
Environment=UNKEY_METALD_FIRECRACKER_BINARY=/usr/local/bin/firecracker
Environment=UNKEY_METALD_JAILER_UID=977
Environment=UNKEY_METALD_JAILER_GID=976
Environment=UNKEY_METALD_JAILER_CHROOT_DIR=/srv/jailer
Environment=UNKEY_METALD_JAILER_NETNS=true
Environment=UNKEY_METALD_JAILER_PIDNS=true

# Resource limits
LimitNOFILE=65536
LimitNPROC=4096

# Linux capabilities for network namespace management and jailer operations
# AIDEV-NOTE: CAP_SYS_ADMIN allows metald to spawn jailer processes
# CAP_NET_ADMIN allows network namespace creation
# CAP_NET_RAW allows netlink socket operations for network management
# CAP_DAC_OVERRIDE allows access to jailer chroot directories
# CAP_MKNOD allows jailer to create device nodes like /dev/net/tun
AmbientCapabilities=CAP_NET_ADMIN CAP_NET_RAW CAP_SYS_ADMIN CAP_DAC_OVERRIDE CAP_MKNOD
CapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_RAW CAP_SYS_ADMIN CAP_DAC_OVERRIDE CAP_SETUID CAP_SETGID CAP_CHOWN CAP_MKNOD

# Security settings - balanced for jailer spawning
NoNewPrivileges=false
PrivateDevices=false
PrivateNetwork=no
# RestrictNetworkInterfaces disabled for network management
ProtectSystem=false
ProtectHome=true
ReadWritePaths=/srv/jailer /opt/metald /var/run/netns /tmp /opt/metald/assets /sys

[Install]
WantedBy=multi-user.target
