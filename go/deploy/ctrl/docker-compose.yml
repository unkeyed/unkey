version: '3.8'

services:
  mysql:
    container_name: ctrl-mysql
    build:
      context: ../../../
      dockerfile: deployment/Dockerfile.mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: unkey
      MYSQL_USER: unkey
      MYSQL_PASSWORD: password
    command: ["--max_connections=1000"]
    ports:
      - 3306:3306
    volumes:
      - mysql:/var/lib/mysql
      - ../../../deployment/init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql

  ctrl:
    build:
      context: ../../
      dockerfile: Dockerfile
      args:
        VERSION: "latest"
    container_name: unkey-ctrl
    ports:
      - "8084:8084"
    depends_on:
      - mysql
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      # Database configuration 
      UNKEY_DATABASE_PRIMARY: ${UNKEY_DATABASE_PRIMARY}
      UNKEY_DATABASE_HYDRA: "unkey:password@tcp(mysql:3306)/hydra?parseTime=true"
      
      # Control plane configuration
      UNKEY_HTTP_PORT: "8084"
      UNKEY_METALD_ADDRESS: ${UNKEY_METALD_ADDRESS:-https://host.docker.internal:8080}
      
      # Instance configuration
      UNKEY_PLATFORM: "docker"
      UNKEY_REGION: "docker"
      UNKEY_OTEL: "true"
      UNKEY_SPIFFE_SOCKET_PATH: "/var/lib/spire/agent/agent.sock"
    
    volumes:
      # Mount SPIFFE agent socket from host
      - /var/lib/spire/agent/agent.sock:/var/lib/spire/agent/agent.sock
    
    restart: unless-stopped
    
    # Override the entrypoint to run ctrl command
    command: ["run", "ctrl"]
    
    # Health check
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8084/_/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  mysql: