// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: vmm/v1/vm.proto

package vmmv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// VM lifecycle states
type VmState int32

const (
	VmState_VM_STATE_UNSPECIFIED VmState = 0
	VmState_VM_STATE_CREATED     VmState = 1
	VmState_VM_STATE_RUNNING     VmState = 2
	VmState_VM_STATE_PAUSED      VmState = 3
	VmState_VM_STATE_SHUTDOWN    VmState = 4
)

// Enum value maps for VmState.
var (
	VmState_name = map[int32]string{
		0: "VM_STATE_UNSPECIFIED",
		1: "VM_STATE_CREATED",
		2: "VM_STATE_RUNNING",
		3: "VM_STATE_PAUSED",
		4: "VM_STATE_SHUTDOWN",
	}
	VmState_value = map[string]int32{
		"VM_STATE_UNSPECIFIED": 0,
		"VM_STATE_CREATED":     1,
		"VM_STATE_RUNNING":     2,
		"VM_STATE_PAUSED":      3,
		"VM_STATE_SHUTDOWN":    4,
	}
)

func (x VmState) Enum() *VmState {
	p := new(VmState)
	*p = x
	return p
}

func (x VmState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VmState) Descriptor() protoreflect.EnumDescriptor {
	return file_vmm_v1_vm_proto_enumTypes[0].Descriptor()
}

func (VmState) Type() protoreflect.EnumType {
	return &file_vmm_v1_vm_proto_enumTypes[0]
}

func (x VmState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VmState.Descriptor instead.
func (VmState) EnumDescriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{0}
}

// Unified VM configuration that works across different hypervisors
type VmConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CPU configuration
	Cpu *CpuConfig `protobuf:"bytes,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	// Memory configuration
	Memory *MemoryConfig `protobuf:"bytes,2,opt,name=memory,proto3" json:"memory,omitempty"`
	// Boot configuration
	Boot *BootConfig `protobuf:"bytes,3,opt,name=boot,proto3" json:"boot,omitempty"`
	// Storage devices
	Storage []*StorageDevice `protobuf:"bytes,4,rep,name=storage,proto3" json:"storage,omitempty"`
	// Network interfaces
	Network []*NetworkInterface `protobuf:"bytes,5,rep,name=network,proto3" json:"network,omitempty"`
	// Console configuration
	Console *ConsoleConfig `protobuf:"bytes,6,opt,name=console,proto3" json:"console,omitempty"`
	// Metadata and labels
	Metadata      map[string]string `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VmConfig) Reset() {
	*x = VmConfig{}
	mi := &file_vmm_v1_vm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VmConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VmConfig) ProtoMessage() {}

func (x *VmConfig) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VmConfig.ProtoReflect.Descriptor instead.
func (*VmConfig) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{0}
}

func (x *VmConfig) GetCpu() *CpuConfig {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *VmConfig) GetMemory() *MemoryConfig {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *VmConfig) GetBoot() *BootConfig {
	if x != nil {
		return x.Boot
	}
	return nil
}

func (x *VmConfig) GetStorage() []*StorageDevice {
	if x != nil {
		return x.Storage
	}
	return nil
}

func (x *VmConfig) GetNetwork() []*NetworkInterface {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *VmConfig) GetConsole() *ConsoleConfig {
	if x != nil {
		return x.Console
	}
	return nil
}

func (x *VmConfig) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type CpuConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of virtual CPUs to allocate at boot
	VcpuCount int32 `protobuf:"varint,1,opt,name=vcpu_count,json=vcpuCount,proto3" json:"vcpu_count,omitempty"`
	// Maximum number of virtual CPUs (for hotplug)
	MaxVcpuCount int32 `protobuf:"varint,2,opt,name=max_vcpu_count,json=maxVcpuCount,proto3" json:"max_vcpu_count,omitempty"`
	// CPU topology (optional)
	Topology *CpuTopology `protobuf:"bytes,3,opt,name=topology,proto3" json:"topology,omitempty"`
	// CPU features and model (backend-specific)
	Features      map[string]string `protobuf:"bytes,4,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CpuConfig) Reset() {
	*x = CpuConfig{}
	mi := &file_vmm_v1_vm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CpuConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuConfig) ProtoMessage() {}

func (x *CpuConfig) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuConfig.ProtoReflect.Descriptor instead.
func (*CpuConfig) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{1}
}

func (x *CpuConfig) GetVcpuCount() int32 {
	if x != nil {
		return x.VcpuCount
	}
	return 0
}

func (x *CpuConfig) GetMaxVcpuCount() int32 {
	if x != nil {
		return x.MaxVcpuCount
	}
	return 0
}

func (x *CpuConfig) GetTopology() *CpuTopology {
	if x != nil {
		return x.Topology
	}
	return nil
}

func (x *CpuConfig) GetFeatures() map[string]string {
	if x != nil {
		return x.Features
	}
	return nil
}

type CpuTopology struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Sockets        int32                  `protobuf:"varint,1,opt,name=sockets,proto3" json:"sockets,omitempty"`
	CoresPerSocket int32                  `protobuf:"varint,2,opt,name=cores_per_socket,json=coresPerSocket,proto3" json:"cores_per_socket,omitempty"`
	ThreadsPerCore int32                  `protobuf:"varint,3,opt,name=threads_per_core,json=threadsPerCore,proto3" json:"threads_per_core,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CpuTopology) Reset() {
	*x = CpuTopology{}
	mi := &file_vmm_v1_vm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CpuTopology) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuTopology) ProtoMessage() {}

func (x *CpuTopology) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuTopology.ProtoReflect.Descriptor instead.
func (*CpuTopology) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{2}
}

func (x *CpuTopology) GetSockets() int32 {
	if x != nil {
		return x.Sockets
	}
	return 0
}

func (x *CpuTopology) GetCoresPerSocket() int32 {
	if x != nil {
		return x.CoresPerSocket
	}
	return 0
}

func (x *CpuTopology) GetThreadsPerCore() int32 {
	if x != nil {
		return x.ThreadsPerCore
	}
	return 0
}

type MemoryConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Memory size in bytes
	SizeBytes int64 `protobuf:"varint,1,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	// Whether memory hotplug is enabled
	HotplugEnabled bool `protobuf:"varint,2,opt,name=hotplug_enabled,json=hotplugEnabled,proto3" json:"hotplug_enabled,omitempty"`
	// Maximum memory size for hotplug (bytes)
	MaxSizeBytes int64 `protobuf:"varint,3,opt,name=max_size_bytes,json=maxSizeBytes,proto3" json:"max_size_bytes,omitempty"`
	// Memory backing options (hugepages, etc.)
	Backing       map[string]string `protobuf:"bytes,4,rep,name=backing,proto3" json:"backing,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoryConfig) Reset() {
	*x = MemoryConfig{}
	mi := &file_vmm_v1_vm_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryConfig) ProtoMessage() {}

func (x *MemoryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryConfig.ProtoReflect.Descriptor instead.
func (*MemoryConfig) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{3}
}

func (x *MemoryConfig) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *MemoryConfig) GetHotplugEnabled() bool {
	if x != nil {
		return x.HotplugEnabled
	}
	return false
}

func (x *MemoryConfig) GetMaxSizeBytes() int64 {
	if x != nil {
		return x.MaxSizeBytes
	}
	return 0
}

func (x *MemoryConfig) GetBacking() map[string]string {
	if x != nil {
		return x.Backing
	}
	return nil
}

type BootConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Path to kernel image
	KernelPath string `protobuf:"bytes,1,opt,name=kernel_path,json=kernelPath,proto3" json:"kernel_path,omitempty"`
	// Path to initial ramdisk (optional)
	InitrdPath string `protobuf:"bytes,2,opt,name=initrd_path,json=initrdPath,proto3" json:"initrd_path,omitempty"`
	// Kernel command line arguments
	KernelArgs string `protobuf:"bytes,3,opt,name=kernel_args,json=kernelArgs,proto3" json:"kernel_args,omitempty"`
	// Boot order and options
	BootOptions   map[string]string `protobuf:"bytes,4,rep,name=boot_options,json=bootOptions,proto3" json:"boot_options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootConfig) Reset() {
	*x = BootConfig{}
	mi := &file_vmm_v1_vm_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootConfig) ProtoMessage() {}

func (x *BootConfig) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootConfig.ProtoReflect.Descriptor instead.
func (*BootConfig) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{4}
}

func (x *BootConfig) GetKernelPath() string {
	if x != nil {
		return x.KernelPath
	}
	return ""
}

func (x *BootConfig) GetInitrdPath() string {
	if x != nil {
		return x.InitrdPath
	}
	return ""
}

func (x *BootConfig) GetKernelArgs() string {
	if x != nil {
		return x.KernelArgs
	}
	return ""
}

func (x *BootConfig) GetBootOptions() map[string]string {
	if x != nil {
		return x.BootOptions
	}
	return nil
}

type StorageDevice struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this storage device
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Path to the backing file or block device
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// Whether this device is read-only
	ReadOnly bool `protobuf:"varint,3,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	// Whether this is the root/boot device
	IsRootDevice bool `protobuf:"varint,4,opt,name=is_root_device,json=isRootDevice,proto3" json:"is_root_device,omitempty"`
	// Storage interface type (virtio-blk, nvme, etc.)
	InterfaceType string `protobuf:"bytes,5,opt,name=interface_type,json=interfaceType,proto3" json:"interface_type,omitempty"`
	// Additional storage options
	Options       map[string]string `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageDevice) Reset() {
	*x = StorageDevice{}
	mi := &file_vmm_v1_vm_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageDevice) ProtoMessage() {}

func (x *StorageDevice) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageDevice.ProtoReflect.Descriptor instead.
func (*StorageDevice) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{5}
}

func (x *StorageDevice) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StorageDevice) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *StorageDevice) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *StorageDevice) GetIsRootDevice() bool {
	if x != nil {
		return x.IsRootDevice
	}
	return false
}

func (x *StorageDevice) GetInterfaceType() string {
	if x != nil {
		return x.InterfaceType
	}
	return ""
}

func (x *StorageDevice) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type NetworkInterface struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this network interface
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// MAC address (optional, will be generated if not provided)
	MacAddress string `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	// Host-side TAP device name
	TapDevice string `protobuf:"bytes,3,opt,name=tap_device,json=tapDevice,proto3" json:"tap_device,omitempty"`
	// Network interface type (virtio-net, e1000, etc.)
	InterfaceType string `protobuf:"bytes,4,opt,name=interface_type,json=interfaceType,proto3" json:"interface_type,omitempty"`
	// Additional network options
	Options       map[string]string `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkInterface) Reset() {
	*x = NetworkInterface{}
	mi := &file_vmm_v1_vm_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInterface) ProtoMessage() {}

func (x *NetworkInterface) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInterface.ProtoReflect.Descriptor instead.
func (*NetworkInterface) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{6}
}

func (x *NetworkInterface) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NetworkInterface) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *NetworkInterface) GetTapDevice() string {
	if x != nil {
		return x.TapDevice
	}
	return ""
}

func (x *NetworkInterface) GetInterfaceType() string {
	if x != nil {
		return x.InterfaceType
	}
	return ""
}

func (x *NetworkInterface) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type ConsoleConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether console is enabled
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Console output destination (file path, pty, etc.)
	Output string `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	// Console input source (optional)
	Input string `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	// Console type (serial, virtio-console, etc.)
	ConsoleType   string `protobuf:"bytes,4,opt,name=console_type,json=consoleType,proto3" json:"console_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsoleConfig) Reset() {
	*x = ConsoleConfig{}
	mi := &file_vmm_v1_vm_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsoleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsoleConfig) ProtoMessage() {}

func (x *ConsoleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsoleConfig.ProtoReflect.Descriptor instead.
func (*ConsoleConfig) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{7}
}

func (x *ConsoleConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ConsoleConfig) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *ConsoleConfig) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *ConsoleConfig) GetConsoleType() string {
	if x != nil {
		return x.ConsoleType
	}
	return ""
}

// Request/Response messages
type CreateVmRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the VM (optional, will be generated if not provided)
	VmId string `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	// VM configuration
	Config        *VmConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVmRequest) Reset() {
	*x = CreateVmRequest{}
	mi := &file_vmm_v1_vm_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVmRequest) ProtoMessage() {}

func (x *CreateVmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVmRequest.ProtoReflect.Descriptor instead.
func (*CreateVmRequest) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{8}
}

func (x *CreateVmRequest) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

func (x *CreateVmRequest) GetConfig() *VmConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type CreateVmResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Assigned VM identifier
	VmId string `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	// Current VM state after creation
	State         VmState `protobuf:"varint,2,opt,name=state,proto3,enum=vmm.v1.VmState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVmResponse) Reset() {
	*x = CreateVmResponse{}
	mi := &file_vmm_v1_vm_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVmResponse) ProtoMessage() {}

func (x *CreateVmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVmResponse.ProtoReflect.Descriptor instead.
func (*CreateVmResponse) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{9}
}

func (x *CreateVmResponse) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

func (x *CreateVmResponse) GetState() VmState {
	if x != nil {
		return x.State
	}
	return VmState_VM_STATE_UNSPECIFIED
}

type DeleteVmRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	VmId  string                 `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	// Whether to force deletion even if VM is running
	Force         bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVmRequest) Reset() {
	*x = DeleteVmRequest{}
	mi := &file_vmm_v1_vm_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVmRequest) ProtoMessage() {}

func (x *DeleteVmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVmRequest.ProtoReflect.Descriptor instead.
func (*DeleteVmRequest) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteVmRequest) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

func (x *DeleteVmRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type DeleteVmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVmResponse) Reset() {
	*x = DeleteVmResponse{}
	mi := &file_vmm_v1_vm_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVmResponse) ProtoMessage() {}

func (x *DeleteVmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVmResponse.ProtoReflect.Descriptor instead.
func (*DeleteVmResponse) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteVmResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type BootVmRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VmId          string                 `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootVmRequest) Reset() {
	*x = BootVmRequest{}
	mi := &file_vmm_v1_vm_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootVmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootVmRequest) ProtoMessage() {}

func (x *BootVmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootVmRequest.ProtoReflect.Descriptor instead.
func (*BootVmRequest) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{12}
}

func (x *BootVmRequest) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

type BootVmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	State         VmState                `protobuf:"varint,2,opt,name=state,proto3,enum=vmm.v1.VmState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BootVmResponse) Reset() {
	*x = BootVmResponse{}
	mi := &file_vmm_v1_vm_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BootVmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BootVmResponse) ProtoMessage() {}

func (x *BootVmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BootVmResponse.ProtoReflect.Descriptor instead.
func (*BootVmResponse) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{13}
}

func (x *BootVmResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BootVmResponse) GetState() VmState {
	if x != nil {
		return x.State
	}
	return VmState_VM_STATE_UNSPECIFIED
}

type ShutdownVmRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	VmId  string                 `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	// Whether to force shutdown (vs graceful)
	Force bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	// Timeout for graceful shutdown (seconds)
	TimeoutSeconds int32 `protobuf:"varint,3,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ShutdownVmRequest) Reset() {
	*x = ShutdownVmRequest{}
	mi := &file_vmm_v1_vm_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownVmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownVmRequest) ProtoMessage() {}

func (x *ShutdownVmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownVmRequest.ProtoReflect.Descriptor instead.
func (*ShutdownVmRequest) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{14}
}

func (x *ShutdownVmRequest) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

func (x *ShutdownVmRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *ShutdownVmRequest) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

type ShutdownVmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	State         VmState                `protobuf:"varint,2,opt,name=state,proto3,enum=vmm.v1.VmState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShutdownVmResponse) Reset() {
	*x = ShutdownVmResponse{}
	mi := &file_vmm_v1_vm_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShutdownVmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownVmResponse) ProtoMessage() {}

func (x *ShutdownVmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownVmResponse.ProtoReflect.Descriptor instead.
func (*ShutdownVmResponse) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{15}
}

func (x *ShutdownVmResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ShutdownVmResponse) GetState() VmState {
	if x != nil {
		return x.State
	}
	return VmState_VM_STATE_UNSPECIFIED
}

type PauseVmRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VmId          string                 `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseVmRequest) Reset() {
	*x = PauseVmRequest{}
	mi := &file_vmm_v1_vm_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseVmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseVmRequest) ProtoMessage() {}

func (x *PauseVmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseVmRequest.ProtoReflect.Descriptor instead.
func (*PauseVmRequest) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{16}
}

func (x *PauseVmRequest) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

type PauseVmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	State         VmState                `protobuf:"varint,2,opt,name=state,proto3,enum=vmm.v1.VmState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PauseVmResponse) Reset() {
	*x = PauseVmResponse{}
	mi := &file_vmm_v1_vm_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PauseVmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseVmResponse) ProtoMessage() {}

func (x *PauseVmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseVmResponse.ProtoReflect.Descriptor instead.
func (*PauseVmResponse) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{17}
}

func (x *PauseVmResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PauseVmResponse) GetState() VmState {
	if x != nil {
		return x.State
	}
	return VmState_VM_STATE_UNSPECIFIED
}

type ResumeVmRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VmId          string                 `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResumeVmRequest) Reset() {
	*x = ResumeVmRequest{}
	mi := &file_vmm_v1_vm_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeVmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeVmRequest) ProtoMessage() {}

func (x *ResumeVmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeVmRequest.ProtoReflect.Descriptor instead.
func (*ResumeVmRequest) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{18}
}

func (x *ResumeVmRequest) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

type ResumeVmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	State         VmState                `protobuf:"varint,2,opt,name=state,proto3,enum=vmm.v1.VmState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResumeVmResponse) Reset() {
	*x = ResumeVmResponse{}
	mi := &file_vmm_v1_vm_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeVmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeVmResponse) ProtoMessage() {}

func (x *ResumeVmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeVmResponse.ProtoReflect.Descriptor instead.
func (*ResumeVmResponse) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{19}
}

func (x *ResumeVmResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ResumeVmResponse) GetState() VmState {
	if x != nil {
		return x.State
	}
	return VmState_VM_STATE_UNSPECIFIED
}

type RebootVmRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	VmId  string                 `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	// Whether to force reboot (vs graceful)
	Force         bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebootVmRequest) Reset() {
	*x = RebootVmRequest{}
	mi := &file_vmm_v1_vm_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebootVmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootVmRequest) ProtoMessage() {}

func (x *RebootVmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootVmRequest.ProtoReflect.Descriptor instead.
func (*RebootVmRequest) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{20}
}

func (x *RebootVmRequest) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

func (x *RebootVmRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type RebootVmResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	State         VmState                `protobuf:"varint,2,opt,name=state,proto3,enum=vmm.v1.VmState" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebootVmResponse) Reset() {
	*x = RebootVmResponse{}
	mi := &file_vmm_v1_vm_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebootVmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebootVmResponse) ProtoMessage() {}

func (x *RebootVmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebootVmResponse.ProtoReflect.Descriptor instead.
func (*RebootVmResponse) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{21}
}

func (x *RebootVmResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RebootVmResponse) GetState() VmState {
	if x != nil {
		return x.State
	}
	return VmState_VM_STATE_UNSPECIFIED
}

type GetVmInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VmId          string                 `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVmInfoRequest) Reset() {
	*x = GetVmInfoRequest{}
	mi := &file_vmm_v1_vm_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVmInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVmInfoRequest) ProtoMessage() {}

func (x *GetVmInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVmInfoRequest.ProtoReflect.Descriptor instead.
func (*GetVmInfoRequest) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{22}
}

func (x *GetVmInfoRequest) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

type GetVmInfoResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	VmId    string                 `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	Config  *VmConfig              `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	State   VmState                `protobuf:"varint,3,opt,name=state,proto3,enum=vmm.v1.VmState" json:"state,omitempty"`
	Metrics *VmMetrics             `protobuf:"bytes,4,opt,name=metrics,proto3" json:"metrics,omitempty"`
	// Backend-specific information
	BackendInfo   map[string]string `protobuf:"bytes,5,rep,name=backend_info,json=backendInfo,proto3" json:"backend_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVmInfoResponse) Reset() {
	*x = GetVmInfoResponse{}
	mi := &file_vmm_v1_vm_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVmInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVmInfoResponse) ProtoMessage() {}

func (x *GetVmInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVmInfoResponse.ProtoReflect.Descriptor instead.
func (*GetVmInfoResponse) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{23}
}

func (x *GetVmInfoResponse) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

func (x *GetVmInfoResponse) GetConfig() *VmConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GetVmInfoResponse) GetState() VmState {
	if x != nil {
		return x.State
	}
	return VmState_VM_STATE_UNSPECIFIED
}

func (x *GetVmInfoResponse) GetMetrics() *VmMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GetVmInfoResponse) GetBackendInfo() map[string]string {
	if x != nil {
		return x.BackendInfo
	}
	return nil
}

type VmMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// CPU usage percentage (0-100)
	CpuUsagePercent float64 `protobuf:"fixed64,1,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	// Memory usage in bytes
	MemoryUsageBytes int64 `protobuf:"varint,2,opt,name=memory_usage_bytes,json=memoryUsageBytes,proto3" json:"memory_usage_bytes,omitempty"`
	// Network I/O statistics
	NetworkStats *NetworkStats `protobuf:"bytes,3,opt,name=network_stats,json=networkStats,proto3" json:"network_stats,omitempty"`
	// Storage I/O statistics
	StorageStats *StorageStats `protobuf:"bytes,4,opt,name=storage_stats,json=storageStats,proto3" json:"storage_stats,omitempty"`
	// VM uptime in seconds
	UptimeSeconds int64 `protobuf:"varint,5,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VmMetrics) Reset() {
	*x = VmMetrics{}
	mi := &file_vmm_v1_vm_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VmMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VmMetrics) ProtoMessage() {}

func (x *VmMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VmMetrics.ProtoReflect.Descriptor instead.
func (*VmMetrics) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{24}
}

func (x *VmMetrics) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *VmMetrics) GetMemoryUsageBytes() int64 {
	if x != nil {
		return x.MemoryUsageBytes
	}
	return 0
}

func (x *VmMetrics) GetNetworkStats() *NetworkStats {
	if x != nil {
		return x.NetworkStats
	}
	return nil
}

func (x *VmMetrics) GetStorageStats() *StorageStats {
	if x != nil {
		return x.StorageStats
	}
	return nil
}

func (x *VmMetrics) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

type NetworkStats struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	BytesReceived      int64                  `protobuf:"varint,1,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"`
	BytesTransmitted   int64                  `protobuf:"varint,2,opt,name=bytes_transmitted,json=bytesTransmitted,proto3" json:"bytes_transmitted,omitempty"`
	PacketsReceived    int64                  `protobuf:"varint,3,opt,name=packets_received,json=packetsReceived,proto3" json:"packets_received,omitempty"`
	PacketsTransmitted int64                  `protobuf:"varint,4,opt,name=packets_transmitted,json=packetsTransmitted,proto3" json:"packets_transmitted,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NetworkStats) Reset() {
	*x = NetworkStats{}
	mi := &file_vmm_v1_vm_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStats) ProtoMessage() {}

func (x *NetworkStats) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStats.ProtoReflect.Descriptor instead.
func (*NetworkStats) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{25}
}

func (x *NetworkStats) GetBytesReceived() int64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *NetworkStats) GetBytesTransmitted() int64 {
	if x != nil {
		return x.BytesTransmitted
	}
	return 0
}

func (x *NetworkStats) GetPacketsReceived() int64 {
	if x != nil {
		return x.PacketsReceived
	}
	return 0
}

func (x *NetworkStats) GetPacketsTransmitted() int64 {
	if x != nil {
		return x.PacketsTransmitted
	}
	return 0
}

type StorageStats struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	BytesRead       int64                  `protobuf:"varint,1,opt,name=bytes_read,json=bytesRead,proto3" json:"bytes_read,omitempty"`
	BytesWritten    int64                  `protobuf:"varint,2,opt,name=bytes_written,json=bytesWritten,proto3" json:"bytes_written,omitempty"`
	ReadOperations  int64                  `protobuf:"varint,3,opt,name=read_operations,json=readOperations,proto3" json:"read_operations,omitempty"`
	WriteOperations int64                  `protobuf:"varint,4,opt,name=write_operations,json=writeOperations,proto3" json:"write_operations,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StorageStats) Reset() {
	*x = StorageStats{}
	mi := &file_vmm_v1_vm_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageStats) ProtoMessage() {}

func (x *StorageStats) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageStats.ProtoReflect.Descriptor instead.
func (*StorageStats) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{26}
}

func (x *StorageStats) GetBytesRead() int64 {
	if x != nil {
		return x.BytesRead
	}
	return 0
}

func (x *StorageStats) GetBytesWritten() int64 {
	if x != nil {
		return x.BytesWritten
	}
	return 0
}

func (x *StorageStats) GetReadOperations() int64 {
	if x != nil {
		return x.ReadOperations
	}
	return 0
}

func (x *StorageStats) GetWriteOperations() int64 {
	if x != nil {
		return x.WriteOperations
	}
	return 0
}

type ListVmsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional filter by state
	StateFilter []VmState `protobuf:"varint,1,rep,packed,name=state_filter,json=stateFilter,proto3,enum=vmm.v1.VmState" json:"state_filter,omitempty"`
	// Pagination
	PageSize      int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVmsRequest) Reset() {
	*x = ListVmsRequest{}
	mi := &file_vmm_v1_vm_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVmsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVmsRequest) ProtoMessage() {}

func (x *ListVmsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVmsRequest.ProtoReflect.Descriptor instead.
func (*ListVmsRequest) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{27}
}

func (x *ListVmsRequest) GetStateFilter() []VmState {
	if x != nil {
		return x.StateFilter
	}
	return nil
}

func (x *ListVmsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListVmsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListVmsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vms           []*VmInfo              `protobuf:"bytes,1,rep,name=vms,proto3" json:"vms,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVmsResponse) Reset() {
	*x = ListVmsResponse{}
	mi := &file_vmm_v1_vm_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVmsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVmsResponse) ProtoMessage() {}

func (x *ListVmsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVmsResponse.ProtoReflect.Descriptor instead.
func (*ListVmsResponse) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{28}
}

func (x *ListVmsResponse) GetVms() []*VmInfo {
	if x != nil {
		return x.Vms
	}
	return nil
}

func (x *ListVmsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListVmsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type VmInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	VmId  string                 `protobuf:"bytes,1,opt,name=vm_id,json=vmId,proto3" json:"vm_id,omitempty"`
	State VmState                `protobuf:"varint,2,opt,name=state,proto3,enum=vmm.v1.VmState" json:"state,omitempty"`
	// Basic config info (subset of full config)
	VcpuCount       int32 `protobuf:"varint,3,opt,name=vcpu_count,json=vcpuCount,proto3" json:"vcpu_count,omitempty"`
	MemorySizeBytes int64 `protobuf:"varint,4,opt,name=memory_size_bytes,json=memorySizeBytes,proto3" json:"memory_size_bytes,omitempty"`
	// Creation and modification timestamps
	CreatedTimestamp  int64 `protobuf:"varint,5,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	ModifiedTimestamp int64 `protobuf:"varint,6,opt,name=modified_timestamp,json=modifiedTimestamp,proto3" json:"modified_timestamp,omitempty"`
	// Metadata
	Metadata      map[string]string `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VmInfo) Reset() {
	*x = VmInfo{}
	mi := &file_vmm_v1_vm_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VmInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VmInfo) ProtoMessage() {}

func (x *VmInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vmm_v1_vm_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VmInfo.ProtoReflect.Descriptor instead.
func (*VmInfo) Descriptor() ([]byte, []int) {
	return file_vmm_v1_vm_proto_rawDescGZIP(), []int{29}
}

func (x *VmInfo) GetVmId() string {
	if x != nil {
		return x.VmId
	}
	return ""
}

func (x *VmInfo) GetState() VmState {
	if x != nil {
		return x.State
	}
	return VmState_VM_STATE_UNSPECIFIED
}

func (x *VmInfo) GetVcpuCount() int32 {
	if x != nil {
		return x.VcpuCount
	}
	return 0
}

func (x *VmInfo) GetMemorySizeBytes() int64 {
	if x != nil {
		return x.MemorySizeBytes
	}
	return 0
}

func (x *VmInfo) GetCreatedTimestamp() int64 {
	if x != nil {
		return x.CreatedTimestamp
	}
	return 0
}

func (x *VmInfo) GetModifiedTimestamp() int64 {
	if x != nil {
		return x.ModifiedTimestamp
	}
	return 0
}

func (x *VmInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_vmm_v1_vm_proto protoreflect.FileDescriptor

const file_vmm_v1_vm_proto_rawDesc = "" +
	"\n" +
	"\x0fvmm/v1/vm.proto\x12\x06vmm.v1\"\x94\x03\n" +
	"\bVmConfig\x12#\n" +
	"\x03cpu\x18\x01 \x01(\v2\x11.vmm.v1.CpuConfigR\x03cpu\x12,\n" +
	"\x06memory\x18\x02 \x01(\v2\x14.vmm.v1.MemoryConfigR\x06memory\x12&\n" +
	"\x04boot\x18\x03 \x01(\v2\x12.vmm.v1.BootConfigR\x04boot\x12/\n" +
	"\astorage\x18\x04 \x03(\v2\x15.vmm.v1.StorageDeviceR\astorage\x122\n" +
	"\anetwork\x18\x05 \x03(\v2\x18.vmm.v1.NetworkInterfaceR\anetwork\x12/\n" +
	"\aconsole\x18\x06 \x01(\v2\x15.vmm.v1.ConsoleConfigR\aconsole\x12:\n" +
	"\bmetadata\x18\a \x03(\v2\x1e.vmm.v1.VmConfig.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfb\x01\n" +
	"\tCpuConfig\x12\x1d\n" +
	"\n" +
	"vcpu_count\x18\x01 \x01(\x05R\tvcpuCount\x12$\n" +
	"\x0emax_vcpu_count\x18\x02 \x01(\x05R\fmaxVcpuCount\x12/\n" +
	"\btopology\x18\x03 \x01(\v2\x13.vmm.v1.CpuTopologyR\btopology\x12;\n" +
	"\bfeatures\x18\x04 \x03(\v2\x1f.vmm.v1.CpuConfig.FeaturesEntryR\bfeatures\x1a;\n" +
	"\rFeaturesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"{\n" +
	"\vCpuTopology\x12\x18\n" +
	"\asockets\x18\x01 \x01(\x05R\asockets\x12(\n" +
	"\x10cores_per_socket\x18\x02 \x01(\x05R\x0ecoresPerSocket\x12(\n" +
	"\x10threads_per_core\x18\x03 \x01(\x05R\x0ethreadsPerCore\"\xf5\x01\n" +
	"\fMemoryConfig\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x01 \x01(\x03R\tsizeBytes\x12'\n" +
	"\x0fhotplug_enabled\x18\x02 \x01(\bR\x0ehotplugEnabled\x12$\n" +
	"\x0emax_size_bytes\x18\x03 \x01(\x03R\fmaxSizeBytes\x12;\n" +
	"\abacking\x18\x04 \x03(\v2!.vmm.v1.MemoryConfig.BackingEntryR\abacking\x1a:\n" +
	"\fBackingEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf7\x01\n" +
	"\n" +
	"BootConfig\x12\x1f\n" +
	"\vkernel_path\x18\x01 \x01(\tR\n" +
	"kernelPath\x12\x1f\n" +
	"\vinitrd_path\x18\x02 \x01(\tR\n" +
	"initrdPath\x12\x1f\n" +
	"\vkernel_args\x18\x03 \x01(\tR\n" +
	"kernelArgs\x12F\n" +
	"\fboot_options\x18\x04 \x03(\v2#.vmm.v1.BootConfig.BootOptionsEntryR\vbootOptions\x1a>\n" +
	"\x10BootOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x97\x02\n" +
	"\rStorageDevice\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x1b\n" +
	"\tread_only\x18\x03 \x01(\bR\breadOnly\x12$\n" +
	"\x0eis_root_device\x18\x04 \x01(\bR\fisRootDevice\x12%\n" +
	"\x0einterface_type\x18\x05 \x01(\tR\rinterfaceType\x12<\n" +
	"\aoptions\x18\x06 \x03(\v2\".vmm.v1.StorageDevice.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x86\x02\n" +
	"\x10NetworkInterface\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vmac_address\x18\x02 \x01(\tR\n" +
	"macAddress\x12\x1d\n" +
	"\n" +
	"tap_device\x18\x03 \x01(\tR\ttapDevice\x12%\n" +
	"\x0einterface_type\x18\x04 \x01(\tR\rinterfaceType\x12?\n" +
	"\aoptions\x18\x05 \x03(\v2%.vmm.v1.NetworkInterface.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"z\n" +
	"\rConsoleConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x16\n" +
	"\x06output\x18\x02 \x01(\tR\x06output\x12\x14\n" +
	"\x05input\x18\x03 \x01(\tR\x05input\x12!\n" +
	"\fconsole_type\x18\x04 \x01(\tR\vconsoleType\"P\n" +
	"\x0fCreateVmRequest\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\x12(\n" +
	"\x06config\x18\x02 \x01(\v2\x10.vmm.v1.VmConfigR\x06config\"N\n" +
	"\x10CreateVmResponse\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\x12%\n" +
	"\x05state\x18\x02 \x01(\x0e2\x0f.vmm.v1.VmStateR\x05state\"<\n" +
	"\x0fDeleteVmRequest\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\",\n" +
	"\x10DeleteVmResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"$\n" +
	"\rBootVmRequest\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\"Q\n" +
	"\x0eBootVmResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x05state\x18\x02 \x01(\x0e2\x0f.vmm.v1.VmStateR\x05state\"g\n" +
	"\x11ShutdownVmRequest\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\x12'\n" +
	"\x0ftimeout_seconds\x18\x03 \x01(\x05R\x0etimeoutSeconds\"U\n" +
	"\x12ShutdownVmResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x05state\x18\x02 \x01(\x0e2\x0f.vmm.v1.VmStateR\x05state\"%\n" +
	"\x0ePauseVmRequest\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\"R\n" +
	"\x0fPauseVmResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x05state\x18\x02 \x01(\x0e2\x0f.vmm.v1.VmStateR\x05state\"&\n" +
	"\x0fResumeVmRequest\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\"S\n" +
	"\x10ResumeVmResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x05state\x18\x02 \x01(\x0e2\x0f.vmm.v1.VmStateR\x05state\"<\n" +
	"\x0fRebootVmRequest\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\"S\n" +
	"\x10RebootVmResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x05state\x18\x02 \x01(\x0e2\x0f.vmm.v1.VmStateR\x05state\"'\n" +
	"\x10GetVmInfoRequest\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\"\xb5\x02\n" +
	"\x11GetVmInfoResponse\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\x12(\n" +
	"\x06config\x18\x02 \x01(\v2\x10.vmm.v1.VmConfigR\x06config\x12%\n" +
	"\x05state\x18\x03 \x01(\x0e2\x0f.vmm.v1.VmStateR\x05state\x12+\n" +
	"\ametrics\x18\x04 \x01(\v2\x11.vmm.v1.VmMetricsR\ametrics\x12M\n" +
	"\fbackend_info\x18\x05 \x03(\v2*.vmm.v1.GetVmInfoResponse.BackendInfoEntryR\vbackendInfo\x1a>\n" +
	"\x10BackendInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x82\x02\n" +
	"\tVmMetrics\x12*\n" +
	"\x11cpu_usage_percent\x18\x01 \x01(\x01R\x0fcpuUsagePercent\x12,\n" +
	"\x12memory_usage_bytes\x18\x02 \x01(\x03R\x10memoryUsageBytes\x129\n" +
	"\rnetwork_stats\x18\x03 \x01(\v2\x14.vmm.v1.NetworkStatsR\fnetworkStats\x129\n" +
	"\rstorage_stats\x18\x04 \x01(\v2\x14.vmm.v1.StorageStatsR\fstorageStats\x12%\n" +
	"\x0euptime_seconds\x18\x05 \x01(\x03R\ruptimeSeconds\"\xbe\x01\n" +
	"\fNetworkStats\x12%\n" +
	"\x0ebytes_received\x18\x01 \x01(\x03R\rbytesReceived\x12+\n" +
	"\x11bytes_transmitted\x18\x02 \x01(\x03R\x10bytesTransmitted\x12)\n" +
	"\x10packets_received\x18\x03 \x01(\x03R\x0fpacketsReceived\x12/\n" +
	"\x13packets_transmitted\x18\x04 \x01(\x03R\x12packetsTransmitted\"\xa6\x01\n" +
	"\fStorageStats\x12\x1d\n" +
	"\n" +
	"bytes_read\x18\x01 \x01(\x03R\tbytesRead\x12#\n" +
	"\rbytes_written\x18\x02 \x01(\x03R\fbytesWritten\x12'\n" +
	"\x0fread_operations\x18\x03 \x01(\x03R\x0ereadOperations\x12)\n" +
	"\x10write_operations\x18\x04 \x01(\x03R\x0fwriteOperations\"\x80\x01\n" +
	"\x0eListVmsRequest\x122\n" +
	"\fstate_filter\x18\x01 \x03(\x0e2\x0f.vmm.v1.VmStateR\vstateFilter\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"|\n" +
	"\x0fListVmsResponse\x12 \n" +
	"\x03vms\x18\x01 \x03(\v2\x0e.vmm.v1.VmInfoR\x03vms\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\xe2\x02\n" +
	"\x06VmInfo\x12\x13\n" +
	"\x05vm_id\x18\x01 \x01(\tR\x04vmId\x12%\n" +
	"\x05state\x18\x02 \x01(\x0e2\x0f.vmm.v1.VmStateR\x05state\x12\x1d\n" +
	"\n" +
	"vcpu_count\x18\x03 \x01(\x05R\tvcpuCount\x12*\n" +
	"\x11memory_size_bytes\x18\x04 \x01(\x03R\x0fmemorySizeBytes\x12+\n" +
	"\x11created_timestamp\x18\x05 \x01(\x03R\x10createdTimestamp\x12-\n" +
	"\x12modified_timestamp\x18\x06 \x01(\x03R\x11modifiedTimestamp\x128\n" +
	"\bmetadata\x18\a \x03(\v2\x1c.vmm.v1.VmInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*{\n" +
	"\aVmState\x12\x18\n" +
	"\x14VM_STATE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10VM_STATE_CREATED\x10\x01\x12\x14\n" +
	"\x10VM_STATE_RUNNING\x10\x02\x12\x13\n" +
	"\x0fVM_STATE_PAUSED\x10\x03\x12\x15\n" +
	"\x11VM_STATE_SHUTDOWN\x10\x042\xbf\x04\n" +
	"\tVmService\x12=\n" +
	"\bCreateVm\x12\x17.vmm.v1.CreateVmRequest\x1a\x18.vmm.v1.CreateVmResponse\x12=\n" +
	"\bDeleteVm\x12\x17.vmm.v1.DeleteVmRequest\x1a\x18.vmm.v1.DeleteVmResponse\x127\n" +
	"\x06BootVm\x12\x15.vmm.v1.BootVmRequest\x1a\x16.vmm.v1.BootVmResponse\x12C\n" +
	"\n" +
	"ShutdownVm\x12\x19.vmm.v1.ShutdownVmRequest\x1a\x1a.vmm.v1.ShutdownVmResponse\x12:\n" +
	"\aPauseVm\x12\x16.vmm.v1.PauseVmRequest\x1a\x17.vmm.v1.PauseVmResponse\x12=\n" +
	"\bResumeVm\x12\x17.vmm.v1.ResumeVmRequest\x1a\x18.vmm.v1.ResumeVmResponse\x12=\n" +
	"\bRebootVm\x12\x17.vmm.v1.RebootVmRequest\x1a\x18.vmm.v1.RebootVmResponse\x12@\n" +
	"\tGetVmInfo\x12\x18.vmm.v1.GetVmInfoRequest\x1a\x19.vmm.v1.GetVmInfoResponse\x12:\n" +
	"\aListVms\x12\x16.vmm.v1.ListVmsRequest\x1a\x17.vmm.v1.ListVmsResponseBq\n" +
	"\n" +
	"com.vmm.v1B\aVmProtoP\x01Z!vmm-controlplane/gen/vmm/v1;vmmv1\xa2\x02\x03VXX\xaa\x02\x06Vmm.V1\xca\x02\x06Vmm\\V1\xe2\x02\x12Vmm\\V1\\GPBMetadata\xea\x02\aVmm::V1b\x06proto3"

var (
	file_vmm_v1_vm_proto_rawDescOnce sync.Once
	file_vmm_v1_vm_proto_rawDescData []byte
)

func file_vmm_v1_vm_proto_rawDescGZIP() []byte {
	file_vmm_v1_vm_proto_rawDescOnce.Do(func() {
		file_vmm_v1_vm_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vmm_v1_vm_proto_rawDesc), len(file_vmm_v1_vm_proto_rawDesc)))
	})
	return file_vmm_v1_vm_proto_rawDescData
}

var file_vmm_v1_vm_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_vmm_v1_vm_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_vmm_v1_vm_proto_goTypes = []any{
	(VmState)(0),               // 0: vmm.v1.VmState
	(*VmConfig)(nil),           // 1: vmm.v1.VmConfig
	(*CpuConfig)(nil),          // 2: vmm.v1.CpuConfig
	(*CpuTopology)(nil),        // 3: vmm.v1.CpuTopology
	(*MemoryConfig)(nil),       // 4: vmm.v1.MemoryConfig
	(*BootConfig)(nil),         // 5: vmm.v1.BootConfig
	(*StorageDevice)(nil),      // 6: vmm.v1.StorageDevice
	(*NetworkInterface)(nil),   // 7: vmm.v1.NetworkInterface
	(*ConsoleConfig)(nil),      // 8: vmm.v1.ConsoleConfig
	(*CreateVmRequest)(nil),    // 9: vmm.v1.CreateVmRequest
	(*CreateVmResponse)(nil),   // 10: vmm.v1.CreateVmResponse
	(*DeleteVmRequest)(nil),    // 11: vmm.v1.DeleteVmRequest
	(*DeleteVmResponse)(nil),   // 12: vmm.v1.DeleteVmResponse
	(*BootVmRequest)(nil),      // 13: vmm.v1.BootVmRequest
	(*BootVmResponse)(nil),     // 14: vmm.v1.BootVmResponse
	(*ShutdownVmRequest)(nil),  // 15: vmm.v1.ShutdownVmRequest
	(*ShutdownVmResponse)(nil), // 16: vmm.v1.ShutdownVmResponse
	(*PauseVmRequest)(nil),     // 17: vmm.v1.PauseVmRequest
	(*PauseVmResponse)(nil),    // 18: vmm.v1.PauseVmResponse
	(*ResumeVmRequest)(nil),    // 19: vmm.v1.ResumeVmRequest
	(*ResumeVmResponse)(nil),   // 20: vmm.v1.ResumeVmResponse
	(*RebootVmRequest)(nil),    // 21: vmm.v1.RebootVmRequest
	(*RebootVmResponse)(nil),   // 22: vmm.v1.RebootVmResponse
	(*GetVmInfoRequest)(nil),   // 23: vmm.v1.GetVmInfoRequest
	(*GetVmInfoResponse)(nil),  // 24: vmm.v1.GetVmInfoResponse
	(*VmMetrics)(nil),          // 25: vmm.v1.VmMetrics
	(*NetworkStats)(nil),       // 26: vmm.v1.NetworkStats
	(*StorageStats)(nil),       // 27: vmm.v1.StorageStats
	(*ListVmsRequest)(nil),     // 28: vmm.v1.ListVmsRequest
	(*ListVmsResponse)(nil),    // 29: vmm.v1.ListVmsResponse
	(*VmInfo)(nil),             // 30: vmm.v1.VmInfo
	nil,                        // 31: vmm.v1.VmConfig.MetadataEntry
	nil,                        // 32: vmm.v1.CpuConfig.FeaturesEntry
	nil,                        // 33: vmm.v1.MemoryConfig.BackingEntry
	nil,                        // 34: vmm.v1.BootConfig.BootOptionsEntry
	nil,                        // 35: vmm.v1.StorageDevice.OptionsEntry
	nil,                        // 36: vmm.v1.NetworkInterface.OptionsEntry
	nil,                        // 37: vmm.v1.GetVmInfoResponse.BackendInfoEntry
	nil,                        // 38: vmm.v1.VmInfo.MetadataEntry
}
var file_vmm_v1_vm_proto_depIdxs = []int32{
	2,  // 0: vmm.v1.VmConfig.cpu:type_name -> vmm.v1.CpuConfig
	4,  // 1: vmm.v1.VmConfig.memory:type_name -> vmm.v1.MemoryConfig
	5,  // 2: vmm.v1.VmConfig.boot:type_name -> vmm.v1.BootConfig
	6,  // 3: vmm.v1.VmConfig.storage:type_name -> vmm.v1.StorageDevice
	7,  // 4: vmm.v1.VmConfig.network:type_name -> vmm.v1.NetworkInterface
	8,  // 5: vmm.v1.VmConfig.console:type_name -> vmm.v1.ConsoleConfig
	31, // 6: vmm.v1.VmConfig.metadata:type_name -> vmm.v1.VmConfig.MetadataEntry
	3,  // 7: vmm.v1.CpuConfig.topology:type_name -> vmm.v1.CpuTopology
	32, // 8: vmm.v1.CpuConfig.features:type_name -> vmm.v1.CpuConfig.FeaturesEntry
	33, // 9: vmm.v1.MemoryConfig.backing:type_name -> vmm.v1.MemoryConfig.BackingEntry
	34, // 10: vmm.v1.BootConfig.boot_options:type_name -> vmm.v1.BootConfig.BootOptionsEntry
	35, // 11: vmm.v1.StorageDevice.options:type_name -> vmm.v1.StorageDevice.OptionsEntry
	36, // 12: vmm.v1.NetworkInterface.options:type_name -> vmm.v1.NetworkInterface.OptionsEntry
	1,  // 13: vmm.v1.CreateVmRequest.config:type_name -> vmm.v1.VmConfig
	0,  // 14: vmm.v1.CreateVmResponse.state:type_name -> vmm.v1.VmState
	0,  // 15: vmm.v1.BootVmResponse.state:type_name -> vmm.v1.VmState
	0,  // 16: vmm.v1.ShutdownVmResponse.state:type_name -> vmm.v1.VmState
	0,  // 17: vmm.v1.PauseVmResponse.state:type_name -> vmm.v1.VmState
	0,  // 18: vmm.v1.ResumeVmResponse.state:type_name -> vmm.v1.VmState
	0,  // 19: vmm.v1.RebootVmResponse.state:type_name -> vmm.v1.VmState
	1,  // 20: vmm.v1.GetVmInfoResponse.config:type_name -> vmm.v1.VmConfig
	0,  // 21: vmm.v1.GetVmInfoResponse.state:type_name -> vmm.v1.VmState
	25, // 22: vmm.v1.GetVmInfoResponse.metrics:type_name -> vmm.v1.VmMetrics
	37, // 23: vmm.v1.GetVmInfoResponse.backend_info:type_name -> vmm.v1.GetVmInfoResponse.BackendInfoEntry
	26, // 24: vmm.v1.VmMetrics.network_stats:type_name -> vmm.v1.NetworkStats
	27, // 25: vmm.v1.VmMetrics.storage_stats:type_name -> vmm.v1.StorageStats
	0,  // 26: vmm.v1.ListVmsRequest.state_filter:type_name -> vmm.v1.VmState
	30, // 27: vmm.v1.ListVmsResponse.vms:type_name -> vmm.v1.VmInfo
	0,  // 28: vmm.v1.VmInfo.state:type_name -> vmm.v1.VmState
	38, // 29: vmm.v1.VmInfo.metadata:type_name -> vmm.v1.VmInfo.MetadataEntry
	9,  // 30: vmm.v1.VmService.CreateVm:input_type -> vmm.v1.CreateVmRequest
	11, // 31: vmm.v1.VmService.DeleteVm:input_type -> vmm.v1.DeleteVmRequest
	13, // 32: vmm.v1.VmService.BootVm:input_type -> vmm.v1.BootVmRequest
	15, // 33: vmm.v1.VmService.ShutdownVm:input_type -> vmm.v1.ShutdownVmRequest
	17, // 34: vmm.v1.VmService.PauseVm:input_type -> vmm.v1.PauseVmRequest
	19, // 35: vmm.v1.VmService.ResumeVm:input_type -> vmm.v1.ResumeVmRequest
	21, // 36: vmm.v1.VmService.RebootVm:input_type -> vmm.v1.RebootVmRequest
	23, // 37: vmm.v1.VmService.GetVmInfo:input_type -> vmm.v1.GetVmInfoRequest
	28, // 38: vmm.v1.VmService.ListVms:input_type -> vmm.v1.ListVmsRequest
	10, // 39: vmm.v1.VmService.CreateVm:output_type -> vmm.v1.CreateVmResponse
	12, // 40: vmm.v1.VmService.DeleteVm:output_type -> vmm.v1.DeleteVmResponse
	14, // 41: vmm.v1.VmService.BootVm:output_type -> vmm.v1.BootVmResponse
	16, // 42: vmm.v1.VmService.ShutdownVm:output_type -> vmm.v1.ShutdownVmResponse
	18, // 43: vmm.v1.VmService.PauseVm:output_type -> vmm.v1.PauseVmResponse
	20, // 44: vmm.v1.VmService.ResumeVm:output_type -> vmm.v1.ResumeVmResponse
	22, // 45: vmm.v1.VmService.RebootVm:output_type -> vmm.v1.RebootVmResponse
	24, // 46: vmm.v1.VmService.GetVmInfo:output_type -> vmm.v1.GetVmInfoResponse
	29, // 47: vmm.v1.VmService.ListVms:output_type -> vmm.v1.ListVmsResponse
	39, // [39:48] is the sub-list for method output_type
	30, // [30:39] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_vmm_v1_vm_proto_init() }
func file_vmm_v1_vm_proto_init() {
	if File_vmm_v1_vm_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vmm_v1_vm_proto_rawDesc), len(file_vmm_v1_vm_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vmm_v1_vm_proto_goTypes,
		DependencyIndexes: file_vmm_v1_vm_proto_depIdxs,
		EnumInfos:         file_vmm_v1_vm_proto_enumTypes,
		MessageInfos:      file_vmm_v1_vm_proto_msgTypes,
	}.Build()
	File_vmm_v1_vm_proto = out.File
	file_vmm_v1_vm_proto_goTypes = nil
	file_vmm_v1_vm_proto_depIdxs = nil
}
