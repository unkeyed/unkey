// Code generated by sqlc bulk insert plugin. DO NOT EDIT.

package db

import (
	"context"
	"fmt"
	"strings"
)

// bulkUpsertGateway is the base query for bulk insert
const bulkUpsertGateway = `INSERT INTO gateways ( workspace_id, deployment_id, hostname, config ) VALUES %s ON DUPLICATE KEY UPDATE
    workspace_id = ?,
    deployment_id = ?,
    config = ?`

// UpsertGateway performs bulk insert in a single query
func (q *BulkQueries) UpsertGateway(ctx context.Context, db DBTX, args []UpsertGatewayParams) error {

	if len(args) == 0 {
		return nil
	}

	// Build the bulk insert query
	valueClauses := make([]string, len(args))
	for i := range args {
		valueClauses[i] = "( ?, ?, ?, ? )"
	}

	bulkQuery := fmt.Sprintf(bulkUpsertGateway, strings.Join(valueClauses, ", "))

	// Collect all arguments
	var allArgs []any
	for _, arg := range args {
		allArgs = append(allArgs, arg.WorkspaceID)
		allArgs = append(allArgs, arg.DeploymentID)
		allArgs = append(allArgs, arg.Hostname)
		allArgs = append(allArgs, arg.Config)
	}

	// Add ON DUPLICATE KEY UPDATE parameters (only once, not per row)
	if len(args) > 0 {
		allArgs = append(allArgs, args[0].WorkspaceID)
		allArgs = append(allArgs, args[0].DeploymentID)
		allArgs = append(allArgs, args[0].Config)
	}

	// Execute the bulk insert
	_, err := db.ExecContext(ctx, bulkQuery, allArgs...)
	return err
}
