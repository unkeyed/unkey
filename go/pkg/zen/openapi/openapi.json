{
  "info": {
    "title": "Unkey API",
    "version": "2.0.0"
  },
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "https://api.unkey.cloud"
    },
    {
      "url": "http://localhost"
    }
  ],
  "components": {
    "schemas": {
      "BaseError": {
        "additionalProperties": false,
        "properties": {
          "requestId": {
            "description": "A unique id for this request. Please always provide this to support.",
            "example": "req_123",
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "example": "Property foo is required but is missing.",
            "type": "string"
          },
          "instance": {
            "description": "A URI reference that identifies the specific occurrence of the problem.",
            "example": "https://example.com/error-log/abc123",
            "format": "uri",
            "type": "string"
          },
          "status": {
            "description": "HTTP status code",
            "example": 404,
            "format": "int",
            "type": "integer"
          },
          "title": {
            "description": "A short, human-readable summary of the problem type. This value should not change between occurrences of the error.",
            "type": "string"
          },
          "type": {
            "description": "A URI reference to human-readable documentation for the error.",
            "example": "https://example.com/errors/example",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object",
        "required": ["requestId", "detail", "status", "title", "type"]
      },
      "NotFoundError": {
        "$ref": "#/components/schemas/BaseError"
      },
      "BadRequestError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "errors": {
                "description": "Optional list of individual error details",
                "items": {
                  "$ref": "#/components/schemas/ValidationError"
                },
                "type": ["array"]
              }
            },
            "required": ["errors"]
          }
        ]
      },
      "InternalServerError": {
        "$ref": "#/components/schemas/BaseError"
      },
      "ValidationError": {
        "additionalProperties": false,
        "properties": {
          "location": {
            "description": "Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'",
            "type": "string"
          },
          "message": {
            "description": "Error message text",
            "type": "string"
          },
          "fix": {
            "description": "A human-readable message describing how to fix the error.",
            "type": "string"
          }
        },
        "type": "object",
        "required": ["message", "location"]
      },
      "V2LivenessResponseBody": {
        "additionalProperties": false,
        "properties": {
          "message": {
            "description": "Whether we're alive or not",
            "example": "OK",
            "type": "string"
          }
        },
        "required": ["message"],
        "type": "object"
      },
      "V2RatelimitSetOverrideRequestBody": {
        "description": "Sets a new or overwrites an existing override.",
        "additionalProperties": false,
        "properties": {
          "namespaceId": {
            "description": "The id of the namespace. Either namespaceId or namespaceName must be provided",
            "type": "string"
          },
          "namespaceName": {
            "description": "xThe name of the namespace. Either namespaceId or namespaceName must be provided",
            "type": "string"
          },
          "duration": {
            "description": "The duration in milliseconds for the rate limit window.",
            "format": "int64",
            "type": "integer"
          },
          "identifier": {
            "description": "Identifier of your user, this can be their userId, an email, an ip or anything else. Wildcards ( * ) can be used to match multiple identifiers, More info can be found at https://www.unkey.com/docs/ratelimiting/overrides#wildcard-rules",
            "type": "string"
          },
          "limit": {
            "description": "The maximum number of requests allowed.",
            "format": "int64",
            "type": "integer"
          }
        },
        "required": ["identifier", "limit", "duration"],
        "type": "object"
      },
      "V2RatelimitSetOverrideResponseBody": {
        "additionalProperties": false,
        "properties": {
          "overrideId": {
            "description": "The id of the override. This is used internally.",
            "type": "string"
          }
        },
        "required": ["overrideId"],
        "type": "object"
      },
      "V2RatelimitLimitRequestBody": {
        "additionalProperties": false,
        "properties": {
          "cost": {
            "description": "The cost of the request. Defaults to 1 if not provided.",
            "format": "int64",
            "type": "integer",
            "default": 1
          },
          "duration": {
            "description": "The duration in milliseconds for the rate limit window.",
            "format": "int64",
            "type": "integer"
          },
          "identifier": {
            "description": "The identifier for the rate limit.",
            "type": "string"
          },
          "limit": {
            "description": "The maximum number of requests allowed.",
            "format": "int64",
            "type": "integer"
          }
        },
        "required": ["identifier", "limit", "duration"],
        "type": "object"
      },
      "V2RatelimitLimitResponseBody": {
        "additionalProperties": false,
        "properties": {
          "limit": {
            "description": "The maximum number of requests allowed.",
            "format": "int64",
            "type": "integer"
          },
          "remaining": {
            "description": "The number of requests remaining in the current window.",
            "format": "int64",
            "type": "integer"
          },
          "reset": {
            "description": "The time in milliseconds when the rate limit will reset.",
            "format": "int64",
            "type": "integer"
          },
          "success": {
            "description": "Whether the request passed the ratelimit. If false, the request must be blocked.",
            "type": "boolean"
          }
        },
        "required": ["limit", "remaining", "reset", "success"],
        "type": "object"
      }
    }
  },
  "paths": {
    "/v2/ratelimit.limit": {
      "post": {
        "operationId": "v1.ratelimit.limit",
        "parameters": [
          {
            "name": "xxx",
            "description": "xxx",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "yyy",
            "description": "yyy",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V2RatelimitLimitRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V2RatelimitLimitResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": ["ratelimit"]
      }
    },
    "/v2/ratelimit.setOverride": {
      "post": {
        "operationId": "v2.ratelimit.setOverride",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/V2RatelimitSetOverrideRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V2RatelimitSetOverrideResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Error"
          }
        },
        "tags": ["ratelimit"]
      }
    },
    "/v2/liveness": {
      "get": {
        "description": "This endpoint checks if the service is alive.",
        "operationId": "liveness",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/V2LivenessResponseBody"
                }
              }
            },
            "description": "OK"
          },
          "500": {
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Liveness check",
        "tags": ["liveness"]
      }
    }
  }
}
