// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: step_update.sql

package db

import (
	"context"
	"database/sql"
)

const updateStepStatus = `-- name: UpdateStepStatus :exec
UPDATE workflow_steps 
SET status = ?,
    completed_at = ?,
    output_data = ?,
    error_message = ?
WHERE namespace = ? AND execution_id = ? AND step_name = ?
`

type UpdateStepStatusParams struct {
	Status       WorkflowStepsStatus `db:"status"`
	CompletedAt  sql.NullInt64       `db:"completed_at"`
	OutputData   []byte              `db:"output_data"`
	ErrorMessage sql.NullString      `db:"error_message"`
	Namespace    string              `db:"namespace"`
	ExecutionID  string              `db:"execution_id"`
	StepName     string              `db:"step_name"`
}

// UpdateStepStatus
//
//	UPDATE workflow_steps
//	SET status = ?,
//	    completed_at = ?,
//	    output_data = ?,
//	    error_message = ?
//	WHERE namespace = ? AND execution_id = ? AND step_name = ?
func (q *Queries) UpdateStepStatus(ctx context.Context, db DBTX, arg UpdateStepStatusParams) error {
	_, err := db.ExecContext(ctx, updateStepStatus,
		arg.Status,
		arg.CompletedAt,
		arg.OutputData,
		arg.ErrorMessage,
		arg.Namespace,
		arg.ExecutionID,
		arg.StepName,
	)
	return err
}
