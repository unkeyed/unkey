// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: step_create.sql

package db

import (
	"context"
)

const createStep = `-- name: CreateStep :exec
INSERT INTO workflow_steps (
    id,
    execution_id,
    step_name,
    step_order,
    status,
    max_attempts,
    remaining_attempts,
    namespace
) VALUES (
    ?, ?, ?, ?, ?, ?, ?, ?
)
`

type CreateStepParams struct {
	ID                string              `db:"id"`
	ExecutionID       string              `db:"execution_id"`
	StepName          string              `db:"step_name"`
	StepOrder         int32               `db:"step_order"`
	Status            WorkflowStepsStatus `db:"status"`
	MaxAttempts       int32               `db:"max_attempts"`
	RemainingAttempts int32               `db:"remaining_attempts"`
	Namespace         string              `db:"namespace"`
}

// CreateStep
//
//	INSERT INTO workflow_steps (
//	    id,
//	    execution_id,
//	    step_name,
//	    step_order,
//	    status,
//	    max_attempts,
//	    remaining_attempts,
//	    namespace
//	) VALUES (
//	    ?, ?, ?, ?, ?, ?, ?, ?
//	)
func (q *Queries) CreateStep(ctx context.Context, db DBTX, arg CreateStepParams) error {
	_, err := db.ExecContext(ctx, createStep,
		arg.ID,
		arg.ExecutionID,
		arg.StepName,
		arg.StepOrder,
		arg.Status,
		arg.MaxAttempts,
		arg.RemainingAttempts,
		arg.Namespace,
	)
	return err
}
