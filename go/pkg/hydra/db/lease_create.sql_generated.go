// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: lease_create.sql

package db

import (
	"context"
)

const acquireLease = `-- name: AcquireLease :exec
INSERT INTO leases (
    resource_id,
    kind,
    namespace,
    worker_id,
    acquired_at,
    expires_at,
    heartbeat_at
) VALUES (
    ?, ?, ?, ?, ?, ?, ?
)
`

type AcquireLeaseParams struct {
	ResourceID  string     `db:"resource_id"`
	Kind        LeasesKind `db:"kind"`
	Namespace   string     `db:"namespace"`
	WorkerID    string     `db:"worker_id"`
	AcquiredAt  int64      `db:"acquired_at"`
	ExpiresAt   int64      `db:"expires_at"`
	HeartbeatAt int64      `db:"heartbeat_at"`
}

// AcquireLease
//
//	INSERT INTO leases (
//	    resource_id,
//	    kind,
//	    namespace,
//	    worker_id,
//	    acquired_at,
//	    expires_at,
//	    heartbeat_at
//	) VALUES (
//	    ?, ?, ?, ?, ?, ?, ?
//	)
func (q *Queries) AcquireLease(ctx context.Context, db DBTX, arg AcquireLeaseParams) error {
	_, err := db.ExecContext(ctx, acquireLease,
		arg.ResourceID,
		arg.Kind,
		arg.Namespace,
		arg.WorkerID,
		arg.AcquiredAt,
		arg.ExpiresAt,
		arg.HeartbeatAt,
	)
	return err
}
