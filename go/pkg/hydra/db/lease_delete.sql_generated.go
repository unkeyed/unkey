// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: lease_delete.sql

package db

import (
	"context"
)

const cleanupExpiredLeases = `-- name: CleanupExpiredLeases :exec
DELETE FROM leases 
WHERE namespace = ? AND expires_at < ?
`

type CleanupExpiredLeasesParams struct {
	Namespace string `db:"namespace"`
	ExpiresAt int64  `db:"expires_at"`
}

// CleanupExpiredLeases
//
//	DELETE FROM leases
//	WHERE namespace = ? AND expires_at < ?
func (q *Queries) CleanupExpiredLeases(ctx context.Context, db DBTX, arg CleanupExpiredLeasesParams) error {
	_, err := db.ExecContext(ctx, cleanupExpiredLeases, arg.Namespace, arg.ExpiresAt)
	return err
}

const releaseLease = `-- name: ReleaseLease :execrows
DELETE FROM leases 
WHERE resource_id = ? AND worker_id = ?
`

type ReleaseLeaseParams struct {
	ResourceID string `db:"resource_id"`
	WorkerID   string `db:"worker_id"`
}

// ReleaseLease
//
//	DELETE FROM leases
//	WHERE resource_id = ? AND worker_id = ?
func (q *Queries) ReleaseLease(ctx context.Context, db DBTX, arg ReleaseLeaseParams) (int64, error) {
	result, err := db.ExecContext(ctx, releaseLease, arg.ResourceID, arg.WorkerID)
	if err != nil {
		return 0, err
	}
	return result.RowsAffected()
}
