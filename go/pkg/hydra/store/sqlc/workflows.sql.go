// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: workflows.sql

package sqlcstore

import (
	"context"
)

const getWorkflow = `-- name: GetWorkflow :one
SELECT id, workflow_name, status, input_data, output_data, error_message, created_at, started_at, completed_at, max_attempts, remaining_attempts, next_retry_at, namespace, trigger_type, trigger_source, sleep_until, trace_id, span_id FROM workflow_executions 
WHERE id = ? AND namespace = ?
`

type GetWorkflowParams struct {
	ID        string `db:"id" json:"id"`
	Namespace string `db:"namespace" json:"namespace"`
}

func (q *Queries) GetWorkflow(ctx context.Context, arg GetWorkflowParams) (WorkflowExecution, error) {
	row := q.db.QueryRowContext(ctx, getWorkflow, arg.ID, arg.Namespace)
	var i WorkflowExecution
	err := row.Scan(
		&i.ID,
		&i.WorkflowName,
		&i.Status,
		&i.InputData,
		&i.OutputData,
		&i.ErrorMessage,
		&i.CreatedAt,
		&i.StartedAt,
		&i.CompletedAt,
		&i.MaxAttempts,
		&i.RemainingAttempts,
		&i.NextRetryAt,
		&i.Namespace,
		&i.TriggerType,
		&i.TriggerSource,
		&i.SleepUntil,
		&i.TraceID,
		&i.SpanID,
	)
	return i, err
}
