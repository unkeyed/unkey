// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package sqlcstore

import (
	"context"
)

type Querier interface {
	CleanupExpiredLeases(ctx context.Context, arg CleanupExpiredLeasesParams) error
	CompleteWorkflow(ctx context.Context, arg CompleteWorkflowParams) error
	CreateCronJob(ctx context.Context, arg CreateCronJobParams) error
	CreateLease(ctx context.Context, arg CreateLeaseParams) error
	CreateStep(ctx context.Context, arg CreateStepParams) error
	CreateWorkflow(ctx context.Context, arg CreateWorkflowParams) error
	FailWorkflowFinal(ctx context.Context, arg FailWorkflowFinalParams) error
	FailWorkflowWithRetry(ctx context.Context, arg FailWorkflowWithRetryParams) error
	GetAllSteps(ctx context.Context, namespace string) ([]WorkflowStep, error)
	GetAllWorkflows(ctx context.Context, namespace string) ([]WorkflowExecution, error)
	GetCompletedStep(ctx context.Context, arg GetCompletedStepParams) (WorkflowStep, error)
	GetCronJob(ctx context.Context, arg GetCronJobParams) (CronJob, error)
	GetCronJobs(ctx context.Context, namespace string) ([]CronJob, error)
	GetDueCronJobs(ctx context.Context, arg GetDueCronJobsParams) ([]CronJob, error)
	GetExpiredLeases(ctx context.Context, arg GetExpiredLeasesParams) ([]Lease, error)
	GetLease(ctx context.Context, arg GetLeaseParams) (Lease, error)
	GetPendingWorkflows(ctx context.Context, arg GetPendingWorkflowsParams) ([]WorkflowExecution, error)
	GetPendingWorkflowsFiltered(ctx context.Context, arg GetPendingWorkflowsFilteredParams) ([]WorkflowExecution, error)
	GetSleepingWorkflows(ctx context.Context, arg GetSleepingWorkflowsParams) ([]WorkflowExecution, error)
	GetStep(ctx context.Context, arg GetStepParams) (WorkflowStep, error)
	GetWorkflow(ctx context.Context, arg GetWorkflowParams) (WorkflowExecution, error)
	HeartbeatLease(ctx context.Context, arg HeartbeatLeaseParams) error
	ReleaseLease(ctx context.Context, arg ReleaseLeaseParams) error
	ResetOrphanedWorkflows(ctx context.Context, arg ResetOrphanedWorkflowsParams) error
	SleepWorkflow(ctx context.Context, arg SleepWorkflowParams) error
	UpdateCronJob(ctx context.Context, arg UpdateCronJobParams) error
	UpdateCronJobLastRun(ctx context.Context, arg UpdateCronJobLastRunParams) error
	UpdateLease(ctx context.Context, arg UpdateLeaseParams) error
	UpdateStepStatus(ctx context.Context, arg UpdateStepStatusParams) error
	UpdateWorkflowStatus(ctx context.Context, arg UpdateWorkflowStatusParams) error
	UpdateWorkflowToRunning(ctx context.Context, arg UpdateWorkflowToRunningParams) error
}

var _ Querier = (*Queries)(nil)
