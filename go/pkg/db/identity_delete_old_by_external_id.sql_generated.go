// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: identity_delete_old_by_external_id.sql

package db

import (
	"context"
)

const deleteOldIdentityByExternalID = `-- name: DeleteOldIdentityByExternalID :exec
DELETE i, rl
FROM identities i
LEFT JOIN ratelimits rl ON rl.identity_id = i.id
WHERE i.workspace_id = ?
  AND i.external_id = ?
  AND i.id != ?
  AND i.deleted = true
`

type DeleteOldIdentityByExternalIDParams struct {
	WorkspaceID       string `db:"workspace_id"`
	ExternalID        string `db:"external_id"`
	CurrentIdentityID string `db:"current_identity_id"`
}

// DeleteOldIdentityByExternalID
//
//	DELETE i, rl
//	FROM identities i
//	LEFT JOIN ratelimits rl ON rl.identity_id = i.id
//	WHERE i.workspace_id = ?
//	  AND i.external_id = ?
//	  AND i.id != ?
//	  AND i.deleted = true
func (q *Queries) DeleteOldIdentityByExternalID(ctx context.Context, db DBTX, arg DeleteOldIdentityByExternalIDParams) error {
	_, err := db.ExecContext(ctx, deleteOldIdentityByExternalID, arg.WorkspaceID, arg.ExternalID, arg.CurrentIdentityID)
	return err
}
