// Code generated by sqlc bulk insert plugin. DO NOT EDIT.

package db

import (
	"context"
	"fmt"
	"strings"
)

// bulkInsertKeySpace is the base query for bulk insert
const bulkInsertKeySpace = `INSERT INTO ` + "`" + `key_auth` + "`" + ` ( id, workspace_id, created_at_m, store_encrypted_keys, default_prefix, default_bytes, size_approx, size_last_updated_at ) VALUES %s`

// InsertKeySpaces performs bulk insert in a single query
func (q *BulkQueries) InsertKeySpaces(ctx context.Context, db DBTX, args []InsertKeySpaceParams) error {

	if len(args) == 0 {
		return nil
	}

	// Build the bulk insert query
	valueClauses := make([]string, len(args))
	for i := range args {
		valueClauses[i] = "( ?, ?, ?, ?, ?, ?, 0, 0 )"
	}

	bulkQuery := fmt.Sprintf(bulkInsertKeySpace, strings.Join(valueClauses, ", "))

	// Collect all arguments
	var allArgs []any
	for _, arg := range args {
		allArgs = append(allArgs, arg.ID)
		allArgs = append(allArgs, arg.WorkspaceID)
		allArgs = append(allArgs, arg.CreatedAtM)
		allArgs = append(allArgs, arg.StoreEncryptedKeys)
		allArgs = append(allArgs, arg.DefaultPrefix)
		allArgs = append(allArgs, arg.DefaultBytes)
	}

	// Execute the bulk insert
	_, err := db.ExecContext(ctx, bulkQuery, allArgs...)
	return err
}
