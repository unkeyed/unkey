// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: acme_challenge_update_verified_with_expiry.sql

package db

import (
	"context"
	"database/sql"
)

const updateAcmeChallengeVerifiedWithExpiry = `-- name: UpdateAcmeChallengeVerifiedWithExpiry :exec
UPDATE acme_challenges
SET status = ?, expires_at = ?, updated_at = ?
WHERE domain_id = ?
`

type UpdateAcmeChallengeVerifiedWithExpiryParams struct {
	Status    AcmeChallengesStatus `db:"status"`
	ExpiresAt int64                `db:"expires_at"`
	UpdatedAt sql.NullInt64        `db:"updated_at"`
	DomainID  string               `db:"domain_id"`
}

// UpdateAcmeChallengeVerifiedWithExpiry
//
//	UPDATE acme_challenges
//	SET status = ?, expires_at = ?, updated_at = ?
//	WHERE domain_id = ?
func (q *Queries) UpdateAcmeChallengeVerifiedWithExpiry(ctx context.Context, db DBTX, arg UpdateAcmeChallengeVerifiedWithExpiryParams) error {
	_, err := db.ExecContext(ctx, updateAcmeChallengeVerifiedWithExpiry,
		arg.Status,
		arg.ExpiresAt,
		arg.UpdatedAt,
		arg.DomainID,
	)
	return err
}
