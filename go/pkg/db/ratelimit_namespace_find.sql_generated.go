// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: ratelimit_namespace_find.sql

package db

import (
	"context"
	"database/sql"
)

const findRatelimitNamespace = `-- name: FindRatelimitNamespace :one
SELECT id, workspace_id, name, created_at_m, updated_at_m, deleted_at_m,
       coalesce(
               (select json_arrayagg(
                               json_object(
                                       'id', ro.id,
                                       'identifier', ro.identifier,
                                       'limit', ro.limit,
                                       'duration', ro.duration
                               )
                       )
                from ratelimit_overrides ro where ro.namespace_id = ns.id AND ro.deleted_at_m IS NULL),
               json_array()
       ) as overrides
FROM ` + "`" + `ratelimit_namespaces` + "`" + ` ns
WHERE ns.workspace_id = ? 
AND (ns.id = ? OR ns.name = ?)
`

type FindRatelimitNamespaceParams struct {
	WorkspaceID string `db:"workspace_id"`
	Namespace   string `db:"namespace"`
}

type FindRatelimitNamespaceRow struct {
	ID          string        `db:"id"`
	WorkspaceID string        `db:"workspace_id"`
	Name        string        `db:"name"`
	CreatedAtM  int64         `db:"created_at_m"`
	UpdatedAtM  sql.NullInt64 `db:"updated_at_m"`
	DeletedAtM  sql.NullInt64 `db:"deleted_at_m"`
	Overrides   interface{}   `db:"overrides"`
}

// FindRatelimitNamespace
//
//	SELECT id, workspace_id, name, created_at_m, updated_at_m, deleted_at_m,
//	       coalesce(
//	               (select json_arrayagg(
//	                               json_object(
//	                                       'id', ro.id,
//	                                       'identifier', ro.identifier,
//	                                       'limit', ro.limit,
//	                                       'duration', ro.duration
//	                               )
//	                       )
//	                from ratelimit_overrides ro where ro.namespace_id = ns.id AND ro.deleted_at_m IS NULL),
//	               json_array()
//	       ) as overrides
//	FROM `ratelimit_namespaces` ns
//	WHERE ns.workspace_id = ?
//	AND (ns.id = ? OR ns.name = ?)
func (q *Queries) FindRatelimitNamespace(ctx context.Context, db DBTX, arg FindRatelimitNamespaceParams) (FindRatelimitNamespaceRow, error) {
	row := db.QueryRowContext(ctx, findRatelimitNamespace, arg.WorkspaceID, arg.Namespace, arg.Namespace)
	var i FindRatelimitNamespaceRow
	err := row.Scan(
		&i.ID,
		&i.WorkspaceID,
		&i.Name,
		&i.CreatedAtM,
		&i.UpdatedAtM,
		&i.DeletedAtM,
		&i.Overrides,
	)
	return i, err
}
