// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: build_find_by_id.sql

package db

import (
	"context"
)

const findBuildById = `-- name: FindBuildById :one
SELECT 
    id,
    workspace_id,
    project_id,
    version_id,
    rootfs_image_id,
    status,
    error_message,
    started_at,
    completed_at,
    created_at_m,
    updated_at_m,
    deleted_at_m
FROM ` + "`" + `builds` + "`" + `
WHERE id = ? AND deleted_at_m IS NULL
`

// FindBuildById
//
//	SELECT
//	    id,
//	    workspace_id,
//	    project_id,
//	    version_id,
//	    rootfs_image_id,
//	    status,
//	    error_message,
//	    started_at,
//	    completed_at,
//	    created_at_m,
//	    updated_at_m,
//	    deleted_at_m
//	FROM `builds`
//	WHERE id = ? AND deleted_at_m IS NULL
func (q *Queries) FindBuildById(ctx context.Context, db DBTX, id string) (Build, error) {
	row := db.QueryRowContext(ctx, findBuildById, id)
	var i Build
	err := row.Scan(
		&i.ID,
		&i.WorkspaceID,
		&i.ProjectID,
		&i.VersionID,
		&i.RootfsImageID,
		&i.Status,
		&i.ErrorMessage,
		&i.StartedAt,
		&i.CompletedAt,
		&i.CreatedAtM,
		&i.UpdatedAtM,
		&i.DeletedAtM,
	)
	return i, err
}
