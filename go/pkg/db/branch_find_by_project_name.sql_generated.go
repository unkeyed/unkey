// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: branch_find_by_project_name.sql

package db

import (
	"context"
)

const findBranchByProjectName = `-- name: FindBranchByProjectName :one
SELECT 
    id,
    workspace_id,
    project_id,
    name,
    created_at,
    updated_at
FROM branches 
WHERE project_id = ? AND name = ?
`

type FindBranchByProjectNameParams struct {
	ProjectID string `db:"project_id"`
	Name      string `db:"name"`
}

// FindBranchByProjectName
//
//	SELECT
//	    id,
//	    workspace_id,
//	    project_id,
//	    name,
//	    created_at,
//	    updated_at
//	FROM branches
//	WHERE project_id = ? AND name = ?
func (q *Queries) FindBranchByProjectName(ctx context.Context, db DBTX, arg FindBranchByProjectNameParams) (Branch, error) {
	row := db.QueryRowContext(ctx, findBranchByProjectName, arg.ProjectID, arg.Name)
	var i Branch
	err := row.Scan(
		&i.ID,
		&i.WorkspaceID,
		&i.ProjectID,
		&i.Name,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
