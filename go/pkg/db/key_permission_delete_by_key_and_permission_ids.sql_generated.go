// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: key_permission_delete_by_key_and_permission_ids.sql

package db

import (
	"context"
	"strings"
)

const deleteKeyPermissionByKeyAndPermissionIDs = `-- name: DeleteKeyPermissionByKeyAndPermissionIDs :exec
DELETE FROM keys_permissions
WHERE key_id = ? AND permission_id IN (/*SLICE:permission_ids*/?)
`

type DeleteKeyPermissionByKeyAndPermissionIDsParams struct {
	KeyID         string   `db:"key_id"`
	PermissionIds []string `db:"permission_ids"`
}

// DeleteKeyPermissionByKeyAndPermissionIDs
//
//	DELETE FROM keys_permissions
//	WHERE key_id = ? AND permission_id IN (/*SLICE:permission_ids*/?)
func (q *Queries) DeleteKeyPermissionByKeyAndPermissionIDs(ctx context.Context, db DBTX, arg DeleteKeyPermissionByKeyAndPermissionIDsParams) error {
	query := deleteKeyPermissionByKeyAndPermissionIDs
	var queryParams []interface{}
	queryParams = append(queryParams, arg.KeyID)
	if len(arg.PermissionIds) > 0 {
		for _, v := range arg.PermissionIds {
			queryParams = append(queryParams, v)
		}
		query = strings.Replace(query, "/*SLICE:permission_ids*/?", strings.Repeat(",?", len(arg.PermissionIds))[1:], 1)
	} else {
		query = strings.Replace(query, "/*SLICE:permission_ids*/?", "NULL", 1)
	}
	_, err := db.ExecContext(ctx, query, queryParams...)
	return err
}
