// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: permission_insert_key_permission.sql

package db

import (
	"context"
)

const insertKeyPermission = `-- name: InsertKeyPermission :exec
INSERT INTO ` + "`" + `keys_permissions` + "`" + ` (
    key_id,
    permission_id,
    workspace_id,
    created_at_m
) VALUES (
    ?,
    ?,
    ?,
    ?
)
`

type InsertKeyPermissionParams struct {
	KeyID        string `db:"key_id"`
	PermissionID string `db:"permission_id"`
	WorkspaceID  string `db:"workspace_id"`
	CreatedAt    int64  `db:"created_at"`
}

// InsertKeyPermission
//
//	INSERT INTO `keys_permissions` (
//	    key_id,
//	    permission_id,
//	    workspace_id,
//	    created_at_m
//	) VALUES (
//	    ?,
//	    ?,
//	    ?,
//	    ?
//	)
func (q *Queries) InsertKeyPermission(ctx context.Context, db DBTX, arg InsertKeyPermissionParams) error {
	_, err := db.ExecContext(ctx, insertKeyPermission,
		arg.KeyID,
		arg.PermissionID,
		arg.WorkspaceID,
		arg.CreatedAt,
	)
	return err
}
