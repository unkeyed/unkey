// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: ratelimit_list_by_key_id.sql

package db

import (
	"context"
	"database/sql"
)

const listRatelimitsByKeyID = `-- name: ListRatelimitsByKeyID :many
SELECT
  id,
  name,
  ` + "`" + `limit` + "`" + `,
  duration,
  auto_apply
FROM ratelimits
WHERE key_id = ?
`

type ListRatelimitsByKeyIDRow struct {
	ID        string `db:"id"`
	Name      string `db:"name"`
	Limit     int32  `db:"limit"`
	Duration  int64  `db:"duration"`
	AutoApply bool   `db:"auto_apply"`
}

// ListRatelimitsByKeyID
//
//	SELECT
//	  id,
//	  name,
//	  `limit`,
//	  duration,
//	  auto_apply
//	FROM ratelimits
//	WHERE key_id = ?
func (q *Queries) ListRatelimitsByKeyID(ctx context.Context, db DBTX, keyID sql.NullString) ([]ListRatelimitsByKeyIDRow, error) {
	rows, err := db.QueryContext(ctx, listRatelimitsByKeyID, keyID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListRatelimitsByKeyIDRow
	for rows.Next() {
		var i ListRatelimitsByKeyIDRow
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Limit,
			&i.Duration,
			&i.AutoApply,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
