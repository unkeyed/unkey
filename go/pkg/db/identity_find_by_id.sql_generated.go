// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: identity_find_by_id.sql

package db

import (
	"context"
)

const findIdentityByID = `-- name: FindIdentityByID :one
SELECT id, external_id, workspace_id, environment, meta, deleted, created_at, updated_at
FROM identities
WHERE workspace_id = ?
  AND id = ?
  AND deleted = ?
`

type FindIdentityByIDParams struct {
	WorkspaceID string `db:"workspace_id"`
	IdentityID  string `db:"identity_id"`
	Deleted     bool   `db:"deleted"`
}

// FindIdentityByID
//
//	SELECT id, external_id, workspace_id, environment, meta, deleted, created_at, updated_at
//	FROM identities
//	WHERE workspace_id = ?
//	  AND id = ?
//	  AND deleted = ?
func (q *Queries) FindIdentityByID(ctx context.Context, db DBTX, arg FindIdentityByIDParams) (Identity, error) {
	row := db.QueryRowContext(ctx, findIdentityByID, arg.WorkspaceID, arg.IdentityID, arg.Deleted)
	var i Identity
	err := row.Scan(
		&i.ID,
		&i.ExternalID,
		&i.WorkspaceID,
		&i.Environment,
		&i.Meta,
		&i.Deleted,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
