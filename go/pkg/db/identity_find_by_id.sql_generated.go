// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: identity_find_by_id.sql

package db

import (
	"context"
	"database/sql"
)

const findIdentityByID = `-- name: FindIdentityByID :one
SELECT external_id, workspace_id, environment, meta, created_at, updated_at FROM identities WHERE id = ?
`

type FindIdentityByIDRow struct {
	ExternalID  string        `db:"external_id"`
	WorkspaceID string        `db:"workspace_id"`
	Environment string        `db:"environment"`
	Meta        []byte        `db:"meta"`
	CreatedAt   int64         `db:"created_at"`
	UpdatedAt   sql.NullInt64 `db:"updated_at"`
}

// FindIdentityByID
//
//	SELECT external_id, workspace_id, environment, meta, created_at, updated_at FROM identities WHERE id = ?
func (q *Queries) FindIdentityByID(ctx context.Context, db DBTX, id string) (FindIdentityByIDRow, error) {
	row := db.QueryRowContext(ctx, findIdentityByID, id)
	var i FindIdentityByIDRow
	err := row.Scan(
		&i.ExternalID,
		&i.WorkspaceID,
		&i.Environment,
		&i.Meta,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
