// Code generated by sqlc bulk insert plugin. DO NOT EDIT.

package db

import (
	"context"
	"fmt"
	"strings"
)

// bulkUpsertAnalyticsConfig is the base query for bulk insert
const bulkUpsertAnalyticsConfig = `INSERT INTO ` + "`" + `analytics_config` + "`" + ` (workspace_id, enabled, storage, config, created_at) VALUES %s ON DUPLICATE KEY UPDATE
	enabled = TRUE,
	storage = VALUES(storage),
	config = VALUES(config),
	updated_at = UNIX_TIMESTAMP() * 1000`

// UpsertAnalyticsConfig performs bulk insert in a single query
func (q *BulkQueries) UpsertAnalyticsConfig(ctx context.Context, db DBTX, args []UpsertAnalyticsConfigParams) error {

	if len(args) == 0 {
		return nil
	}

	// Build the bulk insert query
	valueClauses := make([]string, len(args))
	for i := range args {
		valueClauses[i] = "(?, TRUE, ?, ?, UNIX_TIMESTAMP() * 1000)"
	}

	bulkQuery := fmt.Sprintf(bulkUpsertAnalyticsConfig, strings.Join(valueClauses, ", "))

	// Collect all arguments
	var allArgs []any
	for _, arg := range args {
		allArgs = append(allArgs, arg.WorkspaceID)
		allArgs = append(allArgs, arg.Storage)
		allArgs = append(allArgs, arg.Config)
	}

	// Execute the bulk insert
	_, err := db.ExecContext(ctx, bulkQuery, allArgs...)
	return err
}
