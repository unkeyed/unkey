// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: route_insert.sql

package db

import (
	"context"
	"database/sql"
)

const insertRoute = `-- name: InsertRoute :exec
INSERT INTO routes (
    id,
    workspace_id,
    project_id,
    hostname,
    version_id,
    is_enabled,
    created_at,
    updated_at
) VALUES (
    ?, ?, ?, ?, ?, ?, ?, ?
)
`

type InsertRouteParams struct {
	ID          string        `db:"id"`
	WorkspaceID string        `db:"workspace_id"`
	ProjectID   string        `db:"project_id"`
	Hostname    string        `db:"hostname"`
	VersionID   string        `db:"version_id"`
	IsEnabled   bool          `db:"is_enabled"`
	CreatedAt   int64         `db:"created_at"`
	UpdatedAt   sql.NullInt64 `db:"updated_at"`
}

// InsertRoute
//
//	INSERT INTO routes (
//	    id,
//	    workspace_id,
//	    project_id,
//	    hostname,
//	    version_id,
//	    is_enabled,
//	    created_at,
//	    updated_at
//	) VALUES (
//	    ?, ?, ?, ?, ?, ?, ?, ?
//	)
func (q *Queries) InsertRoute(ctx context.Context, db DBTX, arg InsertRouteParams) error {
	_, err := db.ExecContext(ctx, insertRoute,
		arg.ID,
		arg.WorkspaceID,
		arg.ProjectID,
		arg.Hostname,
		arg.VersionID,
		arg.IsEnabled,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	return err
}
