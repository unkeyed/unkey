// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: key_role_delete_many_by_key_and_role_ids.sql

package db

import (
	"context"
	"strings"
)

const deleteManyKeyRolesByKeyAndRoleIDs = `-- name: DeleteManyKeyRolesByKeyAndRoleIDs :exec
DELETE FROM keys_roles
WHERE key_id = ? AND role_id IN(/*SLICE:ids*/?)
`

type DeleteManyKeyRolesByKeyAndRoleIDsParams struct {
	KeyID string   `db:"key_id"`
	Ids   []string `db:"ids"`
}

// DeleteManyKeyRolesByKeyAndRoleIDs
//
//	DELETE FROM keys_roles
//	WHERE key_id = ? AND role_id IN(/*SLICE:ids*/?)
func (q *Queries) DeleteManyKeyRolesByKeyAndRoleIDs(ctx context.Context, db DBTX, arg DeleteManyKeyRolesByKeyAndRoleIDsParams) error {
	query := deleteManyKeyRolesByKeyAndRoleIDs
	var queryParams []interface{}
	queryParams = append(queryParams, arg.KeyID)
	if len(arg.Ids) > 0 {
		for _, v := range arg.Ids {
			queryParams = append(queryParams, v)
		}
		query = strings.Replace(query, "/*SLICE:ids*/?", strings.Repeat(",?", len(arg.Ids))[1:], 1)
	} else {
		query = strings.Replace(query, "/*SLICE:ids*/?", "NULL", 1)
	}
	_, err := db.ExecContext(ctx, query, queryParams...)
	return err
}
