// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: permission_list_by_role_id.sql

package db

import (
	"context"
)

const listPermissionsByRoleID = `-- name: ListPermissionsByRoleID :many
SELECT p.id, p.workspace_id, p.name, p.slug, p.description, p.created_at_m, p.updated_at_m
FROM permissions p
JOIN roles_permissions rp ON p.id = rp.permission_id
WHERE rp.role_id = ?
ORDER BY p.slug
`

// ListPermissionsByRoleID
//
//	SELECT p.id, p.workspace_id, p.name, p.slug, p.description, p.created_at_m, p.updated_at_m
//	FROM permissions p
//	JOIN roles_permissions rp ON p.id = rp.permission_id
//	WHERE rp.role_id = ?
//	ORDER BY p.slug
func (q *Queries) ListPermissionsByRoleID(ctx context.Context, db DBTX, roleID string) ([]Permission, error) {
	rows, err := db.QueryContext(ctx, listPermissionsByRoleID, roleID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Permission
	for rows.Next() {
		var i Permission
		if err := rows.Scan(
			&i.ID,
			&i.WorkspaceID,
			&i.Name,
			&i.Slug,
			&i.Description,
			&i.CreatedAtM,
			&i.UpdatedAtM,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
