// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: acme_challenge_update_pending.sql

package db

import (
	"context"
	"database/sql"
)

const updateAcmeChallengePending = `-- name: UpdateAcmeChallengePending :exec
UPDATE acme_challenges
SET status = ?, token = ?, authorization = ?, updated_at = ?
WHERE domain_id = ?
`

type UpdateAcmeChallengePendingParams struct {
	Status        AcmeChallengesStatus `db:"status"`
	Token         string               `db:"token"`
	Authorization string               `db:"authorization"`
	UpdatedAt     sql.NullInt64        `db:"updated_at"`
	DomainID      string               `db:"domain_id"`
}

// UpdateAcmeChallengePending
//
//	UPDATE acme_challenges
//	SET status = ?, token = ?, authorization = ?, updated_at = ?
//	WHERE domain_id = ?
func (q *Queries) UpdateAcmeChallengePending(ctx context.Context, db DBTX, arg UpdateAcmeChallengePendingParams) error {
	_, err := db.ExecContext(ctx, updateAcmeChallengePending,
		arg.Status,
		arg.Token,
		arg.Authorization,
		arg.UpdatedAt,
		arg.DomainID,
	)
	return err
}
