// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: api_insert.sql

package db

import (
	"context"
	"database/sql"
)

const insertApi = `-- name: InsertApi :exec
INSERT INTO apis (
    id,
    name,
    workspace_id,
    auth_type,
    key_auth_id,
    created_at_m,
    deleted_at_m
) VALUES (
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    NULL
)
`

type InsertApiParams struct {
	ID          string           `db:"id"`
	Name        string           `db:"name"`
	WorkspaceID string           `db:"workspace_id"`
	AuthType    NullApisAuthType `db:"auth_type"`
	KeyAuthID   sql.NullString   `db:"key_auth_id"`
	CreatedAtM  int64            `db:"created_at_m"`
}

// InsertApi
//
//	INSERT INTO apis (
//	    id,
//	    name,
//	    workspace_id,
//	    auth_type,
//	    key_auth_id,
//	    created_at_m,
//	    deleted_at_m
//	) VALUES (
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    NULL
//	)
func (q *Queries) InsertApi(ctx context.Context, db DBTX, arg InsertApiParams) error {
	_, err := db.ExecContext(ctx, insertApi,
		arg.ID,
		arg.Name,
		arg.WorkspaceID,
		arg.AuthType,
		arg.KeyAuthID,
		arg.CreatedAtM,
	)
	return err
}
