// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: deployment_step_find_by_deployment_id.sql

package db

import (
	"context"
)

const findDeploymentStepsByDeploymentId = `-- name: FindDeploymentStepsByDeploymentId :many
SELECT 
    deployment_id,
    status,
    message,
    error_message,
    created_at
FROM deployment_steps 
WHERE deployment_id = ?
ORDER BY created_at ASC
`

// FindDeploymentStepsByDeploymentId
//
//	SELECT
//	    deployment_id,
//	    status,
//	    message,
//	    error_message,
//	    created_at
//	FROM deployment_steps
//	WHERE deployment_id = ?
//	ORDER BY created_at ASC
func (q *Queries) FindDeploymentStepsByDeploymentId(ctx context.Context, db DBTX, deploymentID string) ([]DeploymentStep, error) {
	rows, err := db.QueryContext(ctx, findDeploymentStepsByDeploymentId, deploymentID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []DeploymentStep
	for rows.Next() {
		var i DeploymentStep
		if err := rows.Scan(
			&i.DeploymentID,
			&i.Status,
			&i.Message,
			&i.ErrorMessage,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
