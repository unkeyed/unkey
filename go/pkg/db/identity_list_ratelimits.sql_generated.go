// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: identity_list_ratelimits.sql

package db

import (
	"context"
	"database/sql"
)

const listIdentityRatelimits = `-- name: ListIdentityRatelimits :many
SELECT id, name, workspace_id, created_at, updated_at, key_id, identity_id, ` + "`" + `limit` + "`" + `, duration, auto_apply
FROM ratelimits
WHERE identity_id = ?
ORDER BY id ASC
`

// ListIdentityRatelimits
//
//	SELECT id, name, workspace_id, created_at, updated_at, key_id, identity_id, `limit`, duration, auto_apply
//	FROM ratelimits
//	WHERE identity_id = ?
//	ORDER BY id ASC
func (q *Queries) ListIdentityRatelimits(ctx context.Context, db DBTX, identityID sql.NullString) ([]Ratelimit, error) {
	rows, err := db.QueryContext(ctx, listIdentityRatelimits, identityID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Ratelimit
	for rows.Next() {
		var i Ratelimit
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.WorkspaceID,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.KeyID,
			&i.IdentityID,
			&i.Limit,
			&i.Duration,
			&i.AutoApply,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
