// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: role_permission_insert.sql

package db

import (
	"context"
)

const insertRolePermission = `-- name: InsertRolePermission :exec
INSERT INTO roles_permissions (
  role_id,
  permission_id,
  workspace_id,
  created_at_m
)
VALUES (
  ?,
  ?,
  ?,
  ?
)
`

type InsertRolePermissionParams struct {
	RoleID       string `db:"role_id"`
	PermissionID string `db:"permission_id"`
	WorkspaceID  string `db:"workspace_id"`
	CreatedAtM   int64  `db:"created_at_m"`
}

// InsertRolePermission
//
//	INSERT INTO roles_permissions (
//	  role_id,
//	  permission_id,
//	  workspace_id,
//	  created_at_m
//	)
//	VALUES (
//	  ?,
//	  ?,
//	  ?,
//	  ?
//	)
func (q *Queries) InsertRolePermission(ctx context.Context, db DBTX, arg InsertRolePermissionParams) error {
	_, err := db.ExecContext(ctx, insertRolePermission,
		arg.RoleID,
		arg.PermissionID,
		arg.WorkspaceID,
		arg.CreatedAtM,
	)
	return err
}
