// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: clickhouse_workspace_settings_insert.sql

package db

import (
	"context"
	"database/sql"
)

const insertClickhouseWorkspaceSettings = `-- name: InsertClickhouseWorkspaceSettings :exec
INSERT INTO ` + "`" + `clickhouse_workspace_settings` + "`" + ` (
    workspace_id,
    username,
    password_encrypted,
    quota_duration_seconds,
    max_queries_per_window,
    max_execution_time_per_window,
    max_query_execution_time,
    max_query_memory_bytes,
    max_query_result_rows,
    max_rows_to_read,
    created_at,
    updated_at
)
VALUES (
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?
)
`

type InsertClickhouseWorkspaceSettingsParams struct {
	WorkspaceID               string        `db:"workspace_id"`
	Username                  string        `db:"username"`
	PasswordEncrypted         string        `db:"password_encrypted"`
	QuotaDurationSeconds      int32         `db:"quota_duration_seconds"`
	MaxQueriesPerWindow       int32         `db:"max_queries_per_window"`
	MaxExecutionTimePerWindow int32         `db:"max_execution_time_per_window"`
	MaxQueryExecutionTime     int32         `db:"max_query_execution_time"`
	MaxQueryMemoryBytes       int64         `db:"max_query_memory_bytes"`
	MaxQueryResultRows        int32         `db:"max_query_result_rows"`
	MaxRowsToRead             int64         `db:"max_rows_to_read"`
	CreatedAt                 int64         `db:"created_at"`
	UpdatedAt                 sql.NullInt64 `db:"updated_at"`
}

// InsertClickhouseWorkspaceSettings
//
//	INSERT INTO `clickhouse_workspace_settings` (
//	    workspace_id,
//	    username,
//	    password_encrypted,
//	    quota_duration_seconds,
//	    max_queries_per_window,
//	    max_execution_time_per_window,
//	    max_query_execution_time,
//	    max_query_memory_bytes,
//	    max_query_result_rows,
//	    max_rows_to_read,
//	    created_at,
//	    updated_at
//	)
//	VALUES (
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?
//	)
func (q *Queries) InsertClickhouseWorkspaceSettings(ctx context.Context, db DBTX, arg InsertClickhouseWorkspaceSettingsParams) error {
	_, err := db.ExecContext(ctx, insertClickhouseWorkspaceSettings,
		arg.WorkspaceID,
		arg.Username,
		arg.PasswordEncrypted,
		arg.QuotaDurationSeconds,
		arg.MaxQueriesPerWindow,
		arg.MaxExecutionTimePerWindow,
		arg.MaxQueryExecutionTime,
		arg.MaxQueryMemoryBytes,
		arg.MaxQueryResultRows,
		arg.MaxRowsToRead,
		arg.CreatedAt,
		arg.UpdatedAt,
	)
	return err
}
