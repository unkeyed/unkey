// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: project_find_by_workspace_slug.sql

package db

import (
	"context"
)

const findProjectByWorkspaceSlug = `-- name: FindProjectByWorkspaceSlug :one
SELECT 
    id,
    workspace_id,
    partition_id,
    name,
    slug,
    git_repository_url,
    default_branch,
    delete_protection,
    created_at,
    updated_at
FROM projects 
WHERE workspace_id = ? AND slug = ?
`

type FindProjectByWorkspaceSlugParams struct {
	WorkspaceID string `db:"workspace_id"`
	Slug        string `db:"slug"`
}

// FindProjectByWorkspaceSlug
//
//	SELECT
//	    id,
//	    workspace_id,
//	    partition_id,
//	    name,
//	    slug,
//	    git_repository_url,
//	    default_branch,
//	    delete_protection,
//	    created_at,
//	    updated_at
//	FROM projects
//	WHERE workspace_id = ? AND slug = ?
func (q *Queries) FindProjectByWorkspaceSlug(ctx context.Context, db DBTX, arg FindProjectByWorkspaceSlugParams) (Project, error) {
	row := db.QueryRowContext(ctx, findProjectByWorkspaceSlug, arg.WorkspaceID, arg.Slug)
	var i Project
	err := row.Scan(
		&i.ID,
		&i.WorkspaceID,
		&i.PartitionID,
		&i.Name,
		&i.Slug,
		&i.GitRepositoryUrl,
		&i.DefaultBranch,
		&i.DeleteProtection,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
