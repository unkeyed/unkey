// Code generated by sqlc bulk insert plugin. DO NOT EDIT.

package db

import (
	"context"
	"fmt"
	"strings"
)

// bulkInsertDeploymentStep is the base query for bulk insert
const bulkInsertDeploymentStep = `INSERT INTO deployment_steps ( deployment_id, status, message, error_message, created_at ) VALUES %s ON DUPLICATE KEY UPDATE
    message = VALUES(message),
    error_message = VALUES(error_message),
    created_at = VALUES(created_at)`

// InsertDeploymentSteps performs bulk insert in a single query
func (q *BulkQueries) InsertDeploymentSteps(ctx context.Context, db DBTX, args []InsertDeploymentStepParams) error {

	if len(args) == 0 {
		return nil
	}

	// Build the bulk insert query
	valueClauses := make([]string, len(args))
	for i := range args {
		valueClauses[i] = "( ?, ?, ?, ?, ? )"
	}

	bulkQuery := fmt.Sprintf(bulkInsertDeploymentStep, strings.Join(valueClauses, ", "))

	// Collect all arguments
	var allArgs []any
	for _, arg := range args {
		allArgs = append(allArgs, arg.DeploymentID)
		allArgs = append(allArgs, arg.Status)
		allArgs = append(allArgs, arg.Message)
		allArgs = append(allArgs, arg.ErrorMessage)
		allArgs = append(allArgs, arg.CreatedAt)
	}

	// Execute the bulk insert
    _, err := db.ExecContext(ctx, bulkQuery, allArgs...)
    return err
}
