// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: credits_update_decrement.sql

package db

import (
	"context"
	"database/sql"
)

const updateCreditDecrement = `-- name: UpdateCreditDecrement :exec
UPDATE ` + "`" + `credits` + "`" + `
SET remaining = CASE
    WHEN remaining >= ? THEN remaining - ?
    ELSE 0
END,
    updated_at = ?
WHERE id = ?
`

type UpdateCreditDecrementParams struct {
	Credits   int32         `db:"credits"`
	UpdatedAt sql.NullInt64 `db:"updated_at"`
	ID        string        `db:"id"`
}

// UpdateCreditDecrement
//
//	UPDATE `credits`
//	SET remaining = CASE
//	    WHEN remaining >= ? THEN remaining - ?
//	    ELSE 0
//	END,
//	    updated_at = ?
//	WHERE id = ?
func (q *Queries) UpdateCreditDecrement(ctx context.Context, db DBTX, arg UpdateCreditDecrementParams) error {
	_, err := db.ExecContext(ctx, updateCreditDecrement,
		arg.Credits,
		arg.Credits,
		arg.UpdatedAt,
		arg.ID,
	)
	return err
}
