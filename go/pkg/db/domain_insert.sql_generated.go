// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: domain_insert.sql

package db

import (
	"context"
	"database/sql"
)

const insertDomain = `-- name: InsertDomain :exec
INSERT INTO domains (
    id,
    workspace_id,
    project_id,
    deployment_id,
    domain,
    type,
    sticky,
    created_at,
    updated_at
) VALUES (
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    ?,
    null
)
`

type InsertDomainParams struct {
	ID           string            `db:"id"`
	WorkspaceID  string            `db:"workspace_id"`
	ProjectID    sql.NullString    `db:"project_id"`
	DeploymentID sql.NullString    `db:"deployment_id"`
	Domain       string            `db:"domain"`
	Type         DomainsType       `db:"type"`
	Sticky       NullDomainsSticky `db:"sticky"`
	CreatedAt    int64             `db:"created_at"`
}

// InsertDomain
//
//	INSERT INTO domains (
//	    id,
//	    workspace_id,
//	    project_id,
//	    deployment_id,
//	    domain,
//	    type,
//	    sticky,
//	    created_at,
//	    updated_at
//	) VALUES (
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    null
//	)
func (q *Queries) InsertDomain(ctx context.Context, db DBTX, arg InsertDomainParams) error {
	_, err := db.ExecContext(ctx, insertDomain,
		arg.ID,
		arg.WorkspaceID,
		arg.ProjectID,
		arg.DeploymentID,
		arg.Domain,
		arg.Type,
		arg.Sticky,
		arg.CreatedAt,
	)
	return err
}
