// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: key_encryption_find_by_key_id.sql

package db

import (
	"context"
)

const findKeyEncryptionByKeyID = `-- name: FindKeyEncryptionByKeyID :one
SELECT workspace_id, key_id, created_at, updated_at, encrypted, encryption_key_id FROM encrypted_keys WHERE key_id = ?
`

// FindKeyEncryptionByKeyID
//
//	SELECT workspace_id, key_id, created_at, updated_at, encrypted, encryption_key_id FROM encrypted_keys WHERE key_id = ?
func (q *Queries) FindKeyEncryptionByKeyID(ctx context.Context, db DBTX, keyID string) (EncryptedKey, error) {
	row := db.QueryRowContext(ctx, findKeyEncryptionByKeyID, keyID)
	var i EncryptedKey
	err := row.Scan(
		&i.WorkspaceID,
		&i.KeyID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Encrypted,
		&i.EncryptionKeyID,
	)
	return i, err
}
