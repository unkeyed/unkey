// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: identity_insert.sql

package db

import (
	"context"
)

const insertIdentity = `-- name: InsertIdentity :exec
INSERT INTO ` + "`" + `identities` + "`" + ` (
    id,
    external_id,
    workspace_id,
    environment,
    created_at,
    meta
) VALUES (
    ?,
    ?,
    ?,
    ?,
    ?,
    ?
)
`

type InsertIdentityParams struct {
	ID          string `db:"id"`
	ExternalID  string `db:"external_id"`
	WorkspaceID string `db:"workspace_id"`
	Environment string `db:"environment"`
	CreatedAt   int64  `db:"created_at"`
	Meta        []byte `db:"meta"`
}

// InsertIdentity
//
//	INSERT INTO `identities` (
//	    id,
//	    external_id,
//	    workspace_id,
//	    environment,
//	    created_at,
//	    meta
//	) VALUES (
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?,
//	    ?
//	)
func (q *Queries) InsertIdentity(ctx context.Context, db DBTX, arg InsertIdentityParams) error {
	_, err := db.ExecContext(ctx, insertIdentity,
		arg.ID,
		arg.ExternalID,
		arg.WorkspaceID,
		arg.Environment,
		arg.CreatedAt,
		arg.Meta,
	)
	return err
}
