// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: key_soft_delete_many_by_key_space_id.sql

package db

import (
	"context"
	"database/sql"
)

const softDeleteManyKeysByKeySpaceID = `-- name: SoftDeleteManyKeysByKeySpaceID :exec
UPDATE ` + "`" + `keys` + "`" + `
SET deleted_at_m = ?
WHERE key_auth_id = ?
AND deleted_at_m IS NULL
`

type SoftDeleteManyKeysByKeySpaceIDParams struct {
	Now        sql.NullInt64 `db:"now"`
	KeySpaceID string        `db:"key_space_id"`
}

// SoftDeleteManyKeysByKeySpaceID
//
//	UPDATE `keys`
//	SET deleted_at_m = ?
//	WHERE key_auth_id = ?
//	AND deleted_at_m IS NULL
func (q *Queries) SoftDeleteManyKeysByKeySpaceID(ctx context.Context, db DBTX, arg SoftDeleteManyKeysByKeySpaceIDParams) error {
	_, err := db.ExecContext(ctx, softDeleteManyKeysByKeySpaceID, arg.Now, arg.KeySpaceID)
	return err
}
