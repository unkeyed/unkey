// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: identity_soft_delete.sql

package db

import (
	"context"
)

const softDeleteIdentity = `-- name: SoftDeleteIdentity :exec
UPDATE identities 
SET deleted = 1 
WHERE workspace_id = ?
 AND (id = ? OR external_id = ?)
`

type SoftDeleteIdentityParams struct {
	WorkspaceID string `db:"workspace_id"`
	Identity    string `db:"identity"`
}

// SoftDeleteIdentity
//
//	UPDATE identities
//	SET deleted = 1
//	WHERE workspace_id = ?
//	 AND (id = ? OR external_id = ?)
func (q *Queries) SoftDeleteIdentity(ctx context.Context, db DBTX, arg SoftDeleteIdentityParams) error {
	_, err := db.ExecContext(ctx, softDeleteIdentity, arg.WorkspaceID, arg.Identity, arg.Identity)
	return err
}
