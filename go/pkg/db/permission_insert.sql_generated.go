// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: permission_insert.sql

package db

import (
	"context"

	dbtype "github.com/unkeyed/unkey/go/pkg/db/types"
)

const insertPermission = `-- name: InsertPermission :exec
INSERT INTO permissions (
  id,
  workspace_id,
  name,
  slug,
  description,
  created_at_m
)
VALUES (
  ?,
  ?,
  ?,
  ?,
  ?,
  ?
)
`

type InsertPermissionParams struct {
	PermissionID string            `db:"permission_id"`
	WorkspaceID  string            `db:"workspace_id"`
	Name         string            `db:"name"`
	Slug         string            `db:"slug"`
	Description  dbtype.NullString `db:"description"`
	CreatedAtM   int64             `db:"created_at_m"`
}

// InsertPermission
//
//	INSERT INTO permissions (
//	  id,
//	  workspace_id,
//	  name,
//	  slug,
//	  description,
//	  created_at_m
//	)
//	VALUES (
//	  ?,
//	  ?,
//	  ?,
//	  ?,
//	  ?,
//	  ?
//	)
func (q *Queries) InsertPermission(ctx context.Context, db DBTX, arg InsertPermissionParams) error {
	_, err := db.ExecContext(ctx, insertPermission,
		arg.PermissionID,
		arg.WorkspaceID,
		arg.Name,
		arg.Slug,
		arg.Description,
		arg.CreatedAtM,
	)
	return err
}
