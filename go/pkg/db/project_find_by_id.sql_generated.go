// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: project_find_by_id.sql

package db

import (
	"context"
)

const findProjectById = `-- name: FindProjectById :one
SELECT 
    id,
    workspace_id,
    partition_id,
    name,
    slug,
    git_repository_url,
    delete_protection,
    created_at_m,
    updated_at_m,
    deleted_at_m
FROM ` + "`" + `projects` + "`" + `
WHERE id = ? AND deleted_at_m IS NULL
`

// FindProjectById
//
//	SELECT
//	    id,
//	    workspace_id,
//	    partition_id,
//	    name,
//	    slug,
//	    git_repository_url,
//	    delete_protection,
//	    created_at_m,
//	    updated_at_m,
//	    deleted_at_m
//	FROM `projects`
//	WHERE id = ? AND deleted_at_m IS NULL
func (q *Queries) FindProjectById(ctx context.Context, db DBTX, id string) (Project, error) {
	row := db.QueryRowContext(ctx, findProjectById, id)
	var i Project
	err := row.Scan(
		&i.ID,
		&i.WorkspaceID,
		&i.PartitionID,
		&i.Name,
		&i.Slug,
		&i.GitRepositoryUrl,
		&i.DeleteProtection,
		&i.CreatedAtM,
		&i.UpdatedAtM,
		&i.DeletedAtM,
	)
	return i, err
}
