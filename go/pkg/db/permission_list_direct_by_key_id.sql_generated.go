// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: permission_list_direct_by_key_id.sql

package db

import (
	"context"
)

const listDirectPermissionsByKeyID = `-- name: ListDirectPermissionsByKeyID :many
SELECT p.id, p.workspace_id, p.name, p.slug, p.description, p.created_at_m, p.updated_at_m
FROM keys_permissions kp
JOIN permissions p ON kp.permission_id = p.id
WHERE kp.key_id = ?
ORDER BY p.slug
`

// ListDirectPermissionsByKeyID
//
//	SELECT p.id, p.workspace_id, p.name, p.slug, p.description, p.created_at_m, p.updated_at_m
//	FROM keys_permissions kp
//	JOIN permissions p ON kp.permission_id = p.id
//	WHERE kp.key_id = ?
//	ORDER BY p.slug
func (q *Queries) ListDirectPermissionsByKeyID(ctx context.Context, db DBTX, keyID string) ([]Permission, error) {
	rows, err := db.QueryContext(ctx, listDirectPermissionsByKeyID, keyID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Permission
	for rows.Next() {
		var i Permission
		if err := rows.Scan(
			&i.ID,
			&i.WorkspaceID,
			&i.Name,
			&i.Slug,
			&i.Description,
			&i.CreatedAtM,
			&i.UpdatedAtM,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
