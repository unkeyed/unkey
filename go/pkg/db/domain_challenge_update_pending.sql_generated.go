// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: domain_challenge_update_pending.sql

package db

import (
	"context"
	"database/sql"
)

const updateDomainChallengePending = `-- name: UpdateDomainChallengePending :exec
UPDATE domain_challenges
SET status = ?, token = ?, authorization = ?, updated_at = ?
WHERE domain_id = ?
`

type UpdateDomainChallengePendingParams struct {
	Status        DomainChallengesStatus `db:"status"`
	Token         sql.NullString         `db:"token"`
	Authorization sql.NullString         `db:"authorization"`
	UpdatedAt     sql.NullInt64          `db:"updated_at"`
	DomainID      string                 `db:"domain_id"`
}

// UpdateDomainChallengePending
//
//	UPDATE domain_challenges
//	SET status = ?, token = ?, authorization = ?, updated_at = ?
//	WHERE domain_id = ?
func (q *Queries) UpdateDomainChallengePending(ctx context.Context, db DBTX, arg UpdateDomainChallengePendingParams) error {
	_, err := db.ExecContext(ctx, updateDomainChallengePending,
		arg.Status,
		arg.Token,
		arg.Authorization,
		arg.UpdatedAt,
		arg.DomainID,
	)
	return err
}
