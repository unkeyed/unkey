// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: ratelimit_override_insert.sql

package db

import (
	"context"
)

const insertRatelimitOverride = `-- name: InsertRatelimitOverride :exec
INSERT INTO
    ` + "`" + `ratelimit_overrides` + "`" + ` (
        id,
        workspace_id,
        namespace_id,
        identifier,
        ` + "`" + `limit` + "`" + `,
        duration,
        async,
        created_at_m
    )
VALUES
    (
        ?,
        ?,
        ?,
        ?,
        ?,
        ?,
        false,
         ?
    )
`

type InsertRatelimitOverrideParams struct {
	ID          string `db:"id"`
	WorkspaceID string `db:"workspace_id"`
	NamespaceID string `db:"namespace_id"`
	Identifier  string `db:"identifier"`
	Limit       int32  `db:"limit"`
	Duration    int32  `db:"duration"`
	CreatedAt   int64  `db:"created_at"`
}

// InsertRatelimitOverride
//
//	INSERT INTO
//	    `ratelimit_overrides` (
//	        id,
//	        workspace_id,
//	        namespace_id,
//	        identifier,
//	        `limit`,
//	        duration,
//	        async,
//	        created_at_m
//	    )
//	VALUES
//	    (
//	        ?,
//	        ?,
//	        ?,
//	        ?,
//	        ?,
//	        ?,
//	        false,
//	         ?
//	    )
func (q *Queries) InsertRatelimitOverride(ctx context.Context, db DBTX, arg InsertRatelimitOverrideParams) error {
	_, err := db.ExecContext(ctx, insertRatelimitOverride,
		arg.ID,
		arg.WorkspaceID,
		arg.NamespaceID,
		arg.Identifier,
		arg.Limit,
		arg.Duration,
		arg.CreatedAt,
	)
	return err
}
