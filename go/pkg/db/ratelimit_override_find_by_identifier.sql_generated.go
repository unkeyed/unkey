// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: ratelimit_override_find_by_identifier.sql

package db

import (
	"context"
)

const findRatelimitOverridesByIdentifier = `-- name: FindRatelimitOverridesByIdentifier :one
SELECT id, workspace_id, namespace_id, identifier, ` + "`" + `limit` + "`" + `, duration, async, sharding, created_at_m, updated_at_m, deleted_at_m FROM ratelimit_overrides
WHERE
    workspace_id = ?
    AND namespace_id = ?
    AND identifier = ?
`

type FindRatelimitOverridesByIdentifierParams struct {
	WorkspaceID string `db:"workspace_id"`
	NamespaceID string `db:"namespace_id"`
	Identifier  string `db:"identifier"`
}

// FindRatelimitOverridesByIdentifier
//
//	SELECT id, workspace_id, namespace_id, identifier, `limit`, duration, async, sharding, created_at_m, updated_at_m, deleted_at_m FROM ratelimit_overrides
//	WHERE
//	    workspace_id = ?
//	    AND namespace_id = ?
//	    AND identifier = ?
func (q *Queries) FindRatelimitOverridesByIdentifier(ctx context.Context, db DBTX, arg FindRatelimitOverridesByIdentifierParams) (RatelimitOverride, error) {
	row := db.QueryRowContext(ctx, findRatelimitOverridesByIdentifier, arg.WorkspaceID, arg.NamespaceID, arg.Identifier)
	var i RatelimitOverride
	err := row.Scan(
		&i.ID,
		&i.WorkspaceID,
		&i.NamespaceID,
		&i.Identifier,
		&i.Limit,
		&i.Duration,
		&i.Async,
		&i.Sharding,
		&i.CreatedAtM,
		&i.UpdatedAtM,
		&i.DeletedAtM,
	)
	return i, err
}
