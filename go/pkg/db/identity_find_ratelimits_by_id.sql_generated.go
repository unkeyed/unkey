// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: identity_find_ratelimits_by_id.sql

package db

import (
	"context"
	"database/sql"
)

const findRatelimitsByIdentityID = `-- name: FindRatelimitsByIdentityID :many
SELECT id, name, workspace_id, created_at, updated_at, key_id, identity_id, ` + "`" + `limit` + "`" + `, duration FROM ratelimits WHERE identity_id = ?
`

// FindRatelimitsByIdentityID
//
//	SELECT id, name, workspace_id, created_at, updated_at, key_id, identity_id, `limit`, duration FROM ratelimits WHERE identity_id = ?
func (q *Queries) FindRatelimitsByIdentityID(ctx context.Context, db DBTX, identityID sql.NullString) ([]Ratelimit, error) {
	rows, err := db.QueryContext(ctx, findRatelimitsByIdentityID, identityID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Ratelimit
	for rows.Next() {
		var i Ratelimit
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.WorkspaceID,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.KeyID,
			&i.IdentityID,
			&i.Limit,
			&i.Duration,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
