// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: identity_delete_old_with_ratelimits.sql

package db

import (
	"context"
)

const deleteOldIdentityWithRatelimits = `-- name: DeleteOldIdentityWithRatelimits :exec
DELETE i, rl
FROM identities i
LEFT JOIN ratelimits rl ON rl.identity_id = i.id
WHERE i.workspace_id = ?
  AND (i.id = ? OR i.external_id = ?)
  AND i.deleted = true
`

type DeleteOldIdentityWithRatelimitsParams struct {
	WorkspaceID string `db:"workspace_id"`
	Identity    string `db:"identity"`
}

// DeleteOldIdentityWithRatelimits
//
//	DELETE i, rl
//	FROM identities i
//	LEFT JOIN ratelimits rl ON rl.identity_id = i.id
//	WHERE i.workspace_id = ?
//	  AND (i.id = ? OR i.external_id = ?)
//	  AND i.deleted = true
func (q *Queries) DeleteOldIdentityWithRatelimits(ctx context.Context, db DBTX, arg DeleteOldIdentityWithRatelimitsParams) error {
	_, err := db.ExecContext(ctx, deleteOldIdentityWithRatelimits, arg.WorkspaceID, arg.Identity, arg.Identity)
	return err
}
