// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: build_find_latest_by_version_id.sql

package db

import (
	"context"
)

const findLatestBuildByVersionId = `-- name: FindLatestBuildByVersionId :one
SELECT 
    id,
    workspace_id,
    project_id,
    version_id,
    rootfs_image_id,
    git_commit_sha,
    git_branch,
    status,
    build_tool,
    error_message,
    started_at,
    completed_at,
    created_at,
    updated_at
FROM ` + "`" + `builds` + "`" + `
WHERE version_id = ?
ORDER BY created_at DESC
LIMIT 1
`

// FindLatestBuildByVersionId
//
//	SELECT
//	    id,
//	    workspace_id,
//	    project_id,
//	    version_id,
//	    rootfs_image_id,
//	    git_commit_sha,
//	    git_branch,
//	    status,
//	    build_tool,
//	    error_message,
//	    started_at,
//	    completed_at,
//	    created_at,
//	    updated_at
//	FROM `builds`
//	WHERE version_id = ?
//	ORDER BY created_at DESC
//	LIMIT 1
func (q *Queries) FindLatestBuildByVersionId(ctx context.Context, db DBTX, versionID string) (Build, error) {
	row := db.QueryRowContext(ctx, findLatestBuildByVersionId, versionID)
	var i Build
	err := row.Scan(
		&i.ID,
		&i.WorkspaceID,
		&i.ProjectID,
		&i.VersionID,
		&i.RootfsImageID,
		&i.GitCommitSha,
		&i.GitBranch,
		&i.Status,
		&i.BuildTool,
		&i.ErrorMessage,
		&i.StartedAt,
		&i.CompletedAt,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
