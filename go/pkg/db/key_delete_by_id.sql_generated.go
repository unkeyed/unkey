// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: key_delete_by_id.sql

package db

import (
	"context"
)

const deleteKeyByID = `-- name: DeleteKeyByID :exec
DELETE k, kp, kr, rl, ek
FROM ` + "`" + `keys` + "`" + ` k
LEFT JOIN keys_permissions kp ON k.id = kp.key_id
LEFT JOIN keys_roles kr ON k.id = kr.key_id
LEFT JOIN ratelimits rl ON k.id = rl.key_id
LEFT JOIN encrypted_keys ek ON k.id = ek.key_id
WHERE k.id = ?
`

// DeleteKeyByID
//
//	DELETE k, kp, kr, rl, ek
//	FROM `keys` k
//	LEFT JOIN keys_permissions kp ON k.id = kp.key_id
//	LEFT JOIN keys_roles kr ON k.id = kr.key_id
//	LEFT JOIN ratelimits rl ON k.id = rl.key_id
//	LEFT JOIN encrypted_keys ek ON k.id = ek.key_id
//	WHERE k.id = ?
func (q *Queries) DeleteKeyByID(ctx context.Context, db DBTX, id string) error {
	_, err := db.ExecContext(ctx, deleteKeyByID, id)
	return err
}
