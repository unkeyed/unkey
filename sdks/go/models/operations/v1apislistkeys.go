// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/unkeyed/unkey/sdks/goclient/internal/utils"
	"github.com/unkeyed/unkey/sdks/goclient/models/components"
)

type V1ApisListKeysRequest struct {
	APIID   string  `queryParam:"style=form,explode=true,name=apiId"`
	Limit   *int64  `default:"100" queryParam:"style=form,explode=true,name=limit"`
	Cursor  *string `queryParam:"style=form,explode=true,name=cursor"`
	OwnerID *string `queryParam:"style=form,explode=true,name=ownerId"`
}

func (v V1ApisListKeysRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V1ApisListKeysRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *V1ApisListKeysRequest) GetAPIID() string {
	if o == nil {
		return ""
	}
	return o.APIID
}

func (o *V1ApisListKeysRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *V1ApisListKeysRequest) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *V1ApisListKeysRequest) GetOwnerID() *string {
	if o == nil {
		return nil
	}
	return o.OwnerID
}

// V1ApisListKeysResponseBody - The configuration for an api
type V1ApisListKeysResponseBody struct {
	Keys []components.Key `json:"keys"`
	// The cursor to use for the next page of results, if no cursor is returned, there are no more results
	Cursor *string `json:"cursor,omitempty"`
	// The total number of keys for this api
	Total int64 `json:"total"`
}

func (o *V1ApisListKeysResponseBody) GetKeys() []components.Key {
	if o == nil {
		return []components.Key{}
	}
	return o.Keys
}

func (o *V1ApisListKeysResponseBody) GetCursor() *string {
	if o == nil {
		return nil
	}
	return o.Cursor
}

func (o *V1ApisListKeysResponseBody) GetTotal() int64 {
	if o == nil {
		return 0
	}
	return o.Total
}
