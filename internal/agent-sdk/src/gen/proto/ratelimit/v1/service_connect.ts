// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=ts"
// @generated from file proto/ratelimit/v1/service.proto (package ratelimit.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MethodKind } from "@bufbuild/protobuf";
import {
  LivenessRequest,
  LivenessResponse,
  PushPullRequest,
  PushPullResponse,
  RatelimitMultiRequest,
  RatelimitMultiResponse,
  RatelimitRequest,
  RatelimitResponse,
} from "./service_pb.js";

/**
 * @generated from service ratelimit.v1.RatelimitService
 */
export const RatelimitService = {
  typeName: "ratelimit.v1.RatelimitService",
  methods: {
    /**
     * @generated from rpc ratelimit.v1.RatelimitService.Liveness
     */
    liveness: {
      name: "Liveness",
      I: LivenessRequest,
      O: LivenessResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc ratelimit.v1.RatelimitService.Ratelimit
     */
    ratelimit: {
      name: "Ratelimit",
      I: RatelimitRequest,
      O: RatelimitResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc ratelimit.v1.RatelimitService.MultiRatelimit
     */
    multiRatelimit: {
      name: "MultiRatelimit",
      I: RatelimitMultiRequest,
      O: RatelimitMultiResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Internal
     *
     * PushPull syncs the ratelimit with the origin server
     * For each identifier there is an origin server, agred upon by every node in the ring via
     * consistent hashing
     *
     * PushPull notifies the origin of a ratelimit operation that happened and then pulls the latest
     * ratelimit information from the origin server to update its own local state
     *
     * @generated from rpc ratelimit.v1.RatelimitService.PushPull
     */
    pushPull: {
      name: "PushPull",
      I: PushPullRequest,
      O: PushPullResponse,
      kind: MethodKind.Unary,
    },
  },
} as const;
