// @generated by protoc-gen-es v2.8.0 with parameter "target=ts"
// @generated from file ctrl/v1/deployment.proto (package ctrl.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file ctrl/v1/deployment.proto.
 */
export const file_ctrl_v1_deployment: GenFile = /*@__PURE__*/
  fileDesc("ChhjdHJsL3YxL2RlcGxveW1lbnQucHJvdG8SB2N0cmwudjEimQIKF0NyZWF0ZURlcGxveW1lbnRSZXF1ZXN0EhIKCnByb2plY3RfaWQYAiABKAkSDgoGYnJhbmNoGAMgASgJEhgKEGVudmlyb25tZW50X3NsdWcYBCABKAkSLgoNYnVpbGRfY29udGV4dBgFIAEoCzIVLmN0cmwudjEuQnVpbGRDb250ZXh0SAASFgoMZG9ja2VyX2ltYWdlGAYgASgJSAASLwoKZ2l0X2NvbW1pdBgHIAEoCzIWLmN0cmwudjEuR2l0Q29tbWl0SW5mb0gBiAEBEhgKC2tleXNwYWNlX2lkGAggASgJSAKIAQFCCAoGc291cmNlQg0KC19naXRfY29tbWl0Qg4KDF9rZXlzcGFjZV9pZEoECAEQAiJcCgxCdWlsZENvbnRleHQSGgoSYnVpbGRfY29udGV4dF9wYXRoGAEgASgJEhwKD2RvY2tlcmZpbGVfcGF0aBgCIAEoCUgAiAEBQhIKEF9kb2NrZXJmaWxlX3BhdGgigAEKDUdpdENvbW1pdEluZm8SEgoKY29tbWl0X3NoYRgBIAEoCRIWCg5jb21taXRfbWVzc2FnZRgCIAEoCRIVCg1hdXRob3JfaGFuZGxlGAMgASgJEhkKEWF1dGhvcl9hdmF0YXJfdXJsGAQgASgJEhEKCXRpbWVzdGFtcBgFIAEoAyJcChhDcmVhdGVEZXBsb3ltZW50UmVzcG9uc2USFQoNZGVwbG95bWVudF9pZBgBIAEoCRIpCgZzdGF0dXMYAiABKA4yGS5jdHJsLnYxLkRlcGxveW1lbnRTdGF0dXMiLQoUR2V0RGVwbG95bWVudFJlcXVlc3QSFQoNZGVwbG95bWVudF9pZBgBIAEoCSJAChVHZXREZXBsb3ltZW50UmVzcG9uc2USJwoKZGVwbG95bWVudBgBIAEoCzITLmN0cmwudjEuRGVwbG95bWVudCKIBQoKRGVwbG95bWVudBIKCgJpZBgBIAEoCRIUCgx3b3Jrc3BhY2VfaWQYAiABKAkSEgoKcHJvamVjdF9pZBgDIAEoCRIWCg5lbnZpcm9ubWVudF9pZBgEIAEoCRIWCg5naXRfY29tbWl0X3NoYRgFIAEoCRISCgpnaXRfYnJhbmNoGAYgASgJEikKBnN0YXR1cxgHIAEoDjIZLmN0cmwudjEuRGVwbG95bWVudFN0YXR1cxIVCg1lcnJvcl9tZXNzYWdlGAggASgJEkwKFWVudmlyb25tZW50X3ZhcmlhYmxlcxgJIAMoCzItLmN0cmwudjEuRGVwbG95bWVudC5FbnZpcm9ubWVudFZhcmlhYmxlc0VudHJ5EiMKCHRvcG9sb2d5GAogASgLMhEuY3RybC52MS5Ub3BvbG9neRISCgpjcmVhdGVkX2F0GAsgASgDEhIKCnVwZGF0ZWRfYXQYDCABKAMSEQoJaG9zdG5hbWVzGA0gAygJEhcKD3Jvb3Rmc19pbWFnZV9pZBgOIAEoCRIQCghidWlsZF9pZBgPIAEoCRImCgVzdGVwcxgQIAMoCzIXLmN0cmwudjEuRGVwbG95bWVudFN0ZXASGgoSZ2l0X2NvbW1pdF9tZXNzYWdlGBEgASgJEiAKGGdpdF9jb21taXRfYXV0aG9yX2hhbmRsZRgSIAEoCRIkChxnaXRfY29tbWl0X2F1dGhvcl9hdmF0YXJfdXJsGBMgASgJEhwKFGdpdF9jb21taXRfdGltZXN0YW1wGBQgASgDGjsKGUVudmlyb25tZW50VmFyaWFibGVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJcCg5EZXBsb3ltZW50U3RlcBIOCgZzdGF0dXMYASABKAkSDwoHbWVzc2FnZRgCIAEoCRIVCg1lcnJvcl9tZXNzYWdlGAMgASgJEhIKCmNyZWF0ZWRfYXQYBCABKAMipgEKCFRvcG9sb2d5EhYKDmNwdV9taWxsaWNvcmVzGAEgASgFEhEKCW1lbW9yeV9tYhgCIAEoBRIoCgdyZWdpb25zGAMgAygLMhcuY3RybC52MS5SZWdpb25hbENvbmZpZxIcChRpZGxlX3RpbWVvdXRfc2Vjb25kcxgEIAEoBRIZChFoZWFsdGhfY2hlY2tfcGF0aBgFIAEoCRIMCgRwb3J0GAYgASgFIk4KDlJlZ2lvbmFsQ29uZmlnEg4KBnJlZ2lvbhgBIAEoCRIVCg1taW5faW5zdGFuY2VzGAIgASgFEhUKDW1heF9pbnN0YW5jZXMYAyABKAUiTQoPUm9sbGJhY2tSZXF1ZXN0EhwKFHNvdXJjZV9kZXBsb3ltZW50X2lkGAEgASgJEhwKFHRhcmdldF9kZXBsb3ltZW50X2lkGAIgASgJIhIKEFJvbGxiYWNrUmVzcG9uc2UiLgoOUHJvbW90ZVJlcXVlc3QSHAoUdGFyZ2V0X2RlcGxveW1lbnRfaWQYASABKAkiEQoPUHJvbW90ZVJlc3BvbnNlKu8BChBEZXBsb3ltZW50U3RhdHVzEiEKHURFUExPWU1FTlRfU1RBVFVTX1VOU1BFQ0lGSUVEEAASHQoZREVQTE9ZTUVOVF9TVEFUVVNfUEVORElORxABEh4KGkRFUExPWU1FTlRfU1RBVFVTX0JVSUxESU5HEAISHwobREVQTE9ZTUVOVF9TVEFUVVNfREVQTE9ZSU5HEAMSHQoZREVQTE9ZTUVOVF9TVEFUVVNfTkVUV09SSxAEEhsKF0RFUExPWU1FTlRfU1RBVFVTX1JFQURZEAUSHAoYREVQTE9ZTUVOVF9TVEFUVVNfRkFJTEVEEAYqWgoKU291cmNlVHlwZRIbChdTT1VSQ0VfVFlQRV9VTlNQRUNJRklFRBAAEhMKD1NPVVJDRV9UWVBFX0dJVBABEhoKFlNPVVJDRV9UWVBFX0NMSV9VUExPQUQQAjLDAgoRRGVwbG95bWVudFNlcnZpY2USWQoQQ3JlYXRlRGVwbG95bWVudBIgLmN0cmwudjEuQ3JlYXRlRGVwbG95bWVudFJlcXVlc3QaIS5jdHJsLnYxLkNyZWF0ZURlcGxveW1lbnRSZXNwb25zZSIAElAKDUdldERlcGxveW1lbnQSHS5jdHJsLnYxLkdldERlcGxveW1lbnRSZXF1ZXN0Gh4uY3RybC52MS5HZXREZXBsb3ltZW50UmVzcG9uc2UiABJBCghSb2xsYmFjaxIYLmN0cmwudjEuUm9sbGJhY2tSZXF1ZXN0GhkuY3RybC52MS5Sb2xsYmFja1Jlc3BvbnNlIgASPgoHUHJvbW90ZRIXLmN0cmwudjEuUHJvbW90ZVJlcXVlc3QaGC5jdHJsLnYxLlByb21vdGVSZXNwb25zZSIAQpEBCgtjb20uY3RybC52MUIPRGVwbG95bWVudFByb3RvUAFaNGdpdGh1Yi5jb20vdW5rZXllZC91bmtleS9nby9nZW4vcHJvdG8vY3RybC92MTtjdHJsdjGiAgNDWFiqAgdDdHJsLlYxygIHQ3RybFxWMeICE0N0cmxcVjFcR1BCTWV0YWRhdGHqAghDdHJsOjpWMWIGcHJvdG8z");

/**
 * @generated from message ctrl.v1.CreateDeploymentRequest
 */
export type CreateDeploymentRequest = Message<"ctrl.v1.CreateDeploymentRequest"> & {
  /**
   * @generated from field: string project_id = 2;
   */
  projectId: string;

  /**
   * @generated from field: string branch = 3;
   */
  branch: string;

  /**
   * @generated from field: string environment_slug = 4;
   */
  environmentSlug: string;

  /**
   * Build source, we can either build it from scratch or accept prebuilt image
   *
   * @generated from oneof ctrl.v1.CreateDeploymentRequest.source
   */
  source: {
    /**
     * @generated from field: ctrl.v1.BuildContext build_context = 5;
     */
    value: BuildContext;
    case: "buildContext";
  } | {
    /**
     * Prebuilt image reference
     *
     * @generated from field: string docker_image = 6;
     */
    value: string;
    case: "dockerImage";
  } | { case: undefined; value?: undefined };

  /**
   * Git information
   *
   * @generated from field: optional ctrl.v1.GitCommitInfo git_commit = 7;
   */
  gitCommit?: GitCommitInfo;

  /**
   * Authentication
   *
   * @generated from field: optional string keyspace_id = 8;
   */
  keyspaceId?: string;
};

/**
 * Describes the message ctrl.v1.CreateDeploymentRequest.
 * Use `create(CreateDeploymentRequestSchema)` to create a new message.
 */
export const CreateDeploymentRequestSchema: GenMessage<CreateDeploymentRequest> = /*@__PURE__*/
  messageDesc(file_ctrl_v1_deployment, 0);

/**
 * @generated from message ctrl.v1.BuildContext
 */
export type BuildContext = Message<"ctrl.v1.BuildContext"> & {
  /**
   * S3 key for uploaded build context
   *
   * @generated from field: string build_context_path = 1;
   */
  buildContextPath: string;

  /**
   * Path to Dockerfile within context (default: "Dockerfile")
   *
   * @generated from field: optional string dockerfile_path = 2;
   */
  dockerfilePath?: string;
};

/**
 * Describes the message ctrl.v1.BuildContext.
 * Use `create(BuildContextSchema)` to create a new message.
 */
export const BuildContextSchema: GenMessage<BuildContext> = /*@__PURE__*/
  messageDesc(file_ctrl_v1_deployment, 1);

/**
 * @generated from message ctrl.v1.GitCommitInfo
 */
export type GitCommitInfo = Message<"ctrl.v1.GitCommitInfo"> & {
  /**
   * @generated from field: string commit_sha = 1;
   */
  commitSha: string;

  /**
   * @generated from field: string commit_message = 2;
   */
  commitMessage: string;

  /**
   * @generated from field: string author_handle = 3;
   */
  authorHandle: string;

  /**
   * @generated from field: string author_avatar_url = 4;
   */
  authorAvatarUrl: string;

  /**
   * Unix epoch milliseconds
   *
   * @generated from field: int64 timestamp = 5;
   */
  timestamp: bigint;
};

/**
 * Describes the message ctrl.v1.GitCommitInfo.
 * Use `create(GitCommitInfoSchema)` to create a new message.
 */
export const GitCommitInfoSchema: GenMessage<GitCommitInfo> = /*@__PURE__*/
  messageDesc(file_ctrl_v1_deployment, 2);

/**
 * @generated from message ctrl.v1.CreateDeploymentResponse
 */
export type CreateDeploymentResponse = Message<"ctrl.v1.CreateDeploymentResponse"> & {
  /**
   * @generated from field: string deployment_id = 1;
   */
  deploymentId: string;

  /**
   * Will be PENDING or BUILDING
   *
   * @generated from field: ctrl.v1.DeploymentStatus status = 2;
   */
  status: DeploymentStatus;
};

/**
 * Describes the message ctrl.v1.CreateDeploymentResponse.
 * Use `create(CreateDeploymentResponseSchema)` to create a new message.
 */
export const CreateDeploymentResponseSchema: GenMessage<CreateDeploymentResponse> = /*@__PURE__*/
  messageDesc(file_ctrl_v1_deployment, 3);

/**
 * @generated from message ctrl.v1.GetDeploymentRequest
 */
export type GetDeploymentRequest = Message<"ctrl.v1.GetDeploymentRequest"> & {
  /**
   * @generated from field: string deployment_id = 1;
   */
  deploymentId: string;
};

/**
 * Describes the message ctrl.v1.GetDeploymentRequest.
 * Use `create(GetDeploymentRequestSchema)` to create a new message.
 */
export const GetDeploymentRequestSchema: GenMessage<GetDeploymentRequest> = /*@__PURE__*/
  messageDesc(file_ctrl_v1_deployment, 4);

/**
 * @generated from message ctrl.v1.GetDeploymentResponse
 */
export type GetDeploymentResponse = Message<"ctrl.v1.GetDeploymentResponse"> & {
  /**
   * @generated from field: ctrl.v1.Deployment deployment = 1;
   */
  deployment?: Deployment;
};

/**
 * Describes the message ctrl.v1.GetDeploymentResponse.
 * Use `create(GetDeploymentResponseSchema)` to create a new message.
 */
export const GetDeploymentResponseSchema: GenMessage<GetDeploymentResponse> = /*@__PURE__*/
  messageDesc(file_ctrl_v1_deployment, 5);

/**
 * @generated from message ctrl.v1.Deployment
 */
export type Deployment = Message<"ctrl.v1.Deployment"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string workspace_id = 2;
   */
  workspaceId: string;

  /**
   * @generated from field: string project_id = 3;
   */
  projectId: string;

  /**
   * @generated from field: string environment_id = 4;
   */
  environmentId: string;

  /**
   * Source information
   *
   * @generated from field: string git_commit_sha = 5;
   */
  gitCommitSha: string;

  /**
   * @generated from field: string git_branch = 6;
   */
  gitBranch: string;

  /**
   * Status and lifecycle
   *
   * @generated from field: ctrl.v1.DeploymentStatus status = 7;
   */
  status: DeploymentStatus;

  /**
   * For failed deployments
   *
   * @generated from field: string error_message = 8;
   */
  errorMessage: string;

  /**
   * Configuration snapshot (resolved at creation time)
   *
   * @generated from field: map<string, string> environment_variables = 9;
   */
  environmentVariables: { [key: string]: string };

  /**
   * Topology configuration
   *
   * @generated from field: ctrl.v1.Topology topology = 10;
   */
  topology?: Topology;

  /**
   * Timestamps
   *
   * @generated from field: int64 created_at = 11;
   */
  createdAt: bigint;

  /**
   * @generated from field: int64 updated_at = 12;
   */
  updatedAt: bigint;

  /**
   * Associated hostnames for this deployment
   *
   * @generated from field: repeated string hostnames = 13;
   */
  hostnames: string[];

  /**
   * Build information
   *
   * @generated from field: string rootfs_image_id = 14;
   */
  rootfsImageId: string;

  /**
   * @generated from field: string build_id = 15;
   */
  buildId: string;

  /**
   * Deployment steps
   *
   * @generated from field: repeated ctrl.v1.DeploymentStep steps = 16;
   */
  steps: DeploymentStep[];

  /**
   * Extended git information
   *
   * @generated from field: string git_commit_message = 17;
   */
  gitCommitMessage: string;

  /**
   * Removed: email is PII and not stored
   *
   * @generated from field: string git_commit_author_handle = 18;
   */
  gitCommitAuthorHandle: string;

  /**
   * @generated from field: string git_commit_author_avatar_url = 19;
   */
  gitCommitAuthorAvatarUrl: string;

  /**
   * Unix epoch milliseconds
   *
   * @generated from field: int64 git_commit_timestamp = 20;
   */
  gitCommitTimestamp: bigint;
};

/**
 * Describes the message ctrl.v1.Deployment.
 * Use `create(DeploymentSchema)` to create a new message.
 */
export const DeploymentSchema: GenMessage<Deployment> = /*@__PURE__*/
  messageDesc(file_ctrl_v1_deployment, 6);

/**
 * @generated from message ctrl.v1.DeploymentStep
 */
export type DeploymentStep = Message<"ctrl.v1.DeploymentStep"> & {
  /**
   * @generated from field: string status = 1;
   */
  status: string;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string error_message = 3;
   */
  errorMessage: string;

  /**
   * @generated from field: int64 created_at = 4;
   */
  createdAt: bigint;
};

/**
 * Describes the message ctrl.v1.DeploymentStep.
 * Use `create(DeploymentStepSchema)` to create a new message.
 */
export const DeploymentStepSchema: GenMessage<DeploymentStep> = /*@__PURE__*/
  messageDesc(file_ctrl_v1_deployment, 7);

/**
 * @generated from message ctrl.v1.Topology
 */
export type Topology = Message<"ctrl.v1.Topology"> & {
  /**
   * @generated from field: int32 cpu_millicores = 1;
   */
  cpuMillicores: number;

  /**
   * @generated from field: int32 memory_mb = 2;
   */
  memoryMb: number;

  /**
   * Regional configuration
   *
   * @generated from field: repeated ctrl.v1.RegionalConfig regions = 3;
   */
  regions: RegionalConfig[];

  /**
   * Runtime settings
   *
   * 0 means no timeout
   *
   * @generated from field: int32 idle_timeout_seconds = 4;
   */
  idleTimeoutSeconds: number;

  /**
   * @generated from field: string health_check_path = 5;
   */
  healthCheckPath: string;

  /**
   * @generated from field: int32 port = 6;
   */
  port: number;
};

/**
 * Describes the message ctrl.v1.Topology.
 * Use `create(TopologySchema)` to create a new message.
 */
export const TopologySchema: GenMessage<Topology> = /*@__PURE__*/
  messageDesc(file_ctrl_v1_deployment, 8);

/**
 * @generated from message ctrl.v1.RegionalConfig
 */
export type RegionalConfig = Message<"ctrl.v1.RegionalConfig"> & {
  /**
   * @generated from field: string region = 1;
   */
  region: string;

  /**
   * @generated from field: int32 min_instances = 2;
   */
  minInstances: number;

  /**
   * @generated from field: int32 max_instances = 3;
   */
  maxInstances: number;
};

/**
 * Describes the message ctrl.v1.RegionalConfig.
 * Use `create(RegionalConfigSchema)` to create a new message.
 */
export const RegionalConfigSchema: GenMessage<RegionalConfig> = /*@__PURE__*/
  messageDesc(file_ctrl_v1_deployment, 9);

/**
 * @generated from message ctrl.v1.RollbackRequest
 */
export type RollbackRequest = Message<"ctrl.v1.RollbackRequest"> & {
  /**
   * @generated from field: string source_deployment_id = 1;
   */
  sourceDeploymentId: string;

  /**
   * @generated from field: string target_deployment_id = 2;
   */
  targetDeploymentId: string;
};

/**
 * Describes the message ctrl.v1.RollbackRequest.
 * Use `create(RollbackRequestSchema)` to create a new message.
 */
export const RollbackRequestSchema: GenMessage<RollbackRequest> = /*@__PURE__*/
  messageDesc(file_ctrl_v1_deployment, 10);

/**
 * @generated from message ctrl.v1.RollbackResponse
 */
export type RollbackResponse = Message<"ctrl.v1.RollbackResponse"> & {
};

/**
 * Describes the message ctrl.v1.RollbackResponse.
 * Use `create(RollbackResponseSchema)` to create a new message.
 */
export const RollbackResponseSchema: GenMessage<RollbackResponse> = /*@__PURE__*/
  messageDesc(file_ctrl_v1_deployment, 11);

/**
 * @generated from message ctrl.v1.PromoteRequest
 */
export type PromoteRequest = Message<"ctrl.v1.PromoteRequest"> & {
  /**
   * @generated from field: string target_deployment_id = 1;
   */
  targetDeploymentId: string;
};

/**
 * Describes the message ctrl.v1.PromoteRequest.
 * Use `create(PromoteRequestSchema)` to create a new message.
 */
export const PromoteRequestSchema: GenMessage<PromoteRequest> = /*@__PURE__*/
  messageDesc(file_ctrl_v1_deployment, 12);

/**
 * @generated from message ctrl.v1.PromoteResponse
 */
export type PromoteResponse = Message<"ctrl.v1.PromoteResponse"> & {
};

/**
 * Describes the message ctrl.v1.PromoteResponse.
 * Use `create(PromoteResponseSchema)` to create a new message.
 */
export const PromoteResponseSchema: GenMessage<PromoteResponse> = /*@__PURE__*/
  messageDesc(file_ctrl_v1_deployment, 13);

/**
 * Deployment status enum
 *
 * @generated from enum ctrl.v1.DeploymentStatus
 */
export enum DeploymentStatus {
  /**
   * @generated from enum value: DEPLOYMENT_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DEPLOYMENT_STATUS_PENDING = 1;
   */
  PENDING = 1,

  /**
   * @generated from enum value: DEPLOYMENT_STATUS_BUILDING = 2;
   */
  BUILDING = 2,

  /**
   * @generated from enum value: DEPLOYMENT_STATUS_DEPLOYING = 3;
   */
  DEPLOYING = 3,

  /**
   * @generated from enum value: DEPLOYMENT_STATUS_NETWORK = 4;
   */
  NETWORK = 4,

  /**
   * @generated from enum value: DEPLOYMENT_STATUS_READY = 5;
   */
  READY = 5,

  /**
   * @generated from enum value: DEPLOYMENT_STATUS_FAILED = 6;
   */
  FAILED = 6,
}

/**
 * Describes the enum ctrl.v1.DeploymentStatus.
 */
export const DeploymentStatusSchema: GenEnum<DeploymentStatus> = /*@__PURE__*/
  enumDesc(file_ctrl_v1_deployment, 0);

/**
 * Source type for deployment creation
 *
 * @generated from enum ctrl.v1.SourceType
 */
export enum SourceType {
  /**
   * @generated from enum value: SOURCE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SOURCE_TYPE_GIT = 1;
   */
  GIT = 1,

  /**
   * @generated from enum value: SOURCE_TYPE_CLI_UPLOAD = 2;
   */
  CLI_UPLOAD = 2,
}

/**
 * Describes the enum ctrl.v1.SourceType.
 */
export const SourceTypeSchema: GenEnum<SourceType> = /*@__PURE__*/
  enumDesc(file_ctrl_v1_deployment, 1);

/**
 * @generated from service ctrl.v1.DeploymentService
 */
export const DeploymentService: GenService<{
  /**
   * Create a new deployment
   *
   * @generated from rpc ctrl.v1.DeploymentService.CreateDeployment
   */
  createDeployment: {
    methodKind: "unary";
    input: typeof CreateDeploymentRequestSchema;
    output: typeof CreateDeploymentResponseSchema;
  },
  /**
   * Get deployment details
   *
   * @generated from rpc ctrl.v1.DeploymentService.GetDeployment
   */
  getDeployment: {
    methodKind: "unary";
    input: typeof GetDeploymentRequestSchema;
    output: typeof GetDeploymentResponseSchema;
  },
  /**
   * Reassign the sticky domains of the projects live deployment to the target deployment
   *
   * @generated from rpc ctrl.v1.DeploymentService.Rollback
   */
  rollback: {
    methodKind: "unary";
    input: typeof RollbackRequestSchema;
    output: typeof RollbackResponseSchema;
  },
  /**
   * Promote the deployment to the live environment
   *
   * @generated from rpc ctrl.v1.DeploymentService.Promote
   */
  promote: {
    methodKind: "unary";
    input: typeof PromoteRequestSchema;
    output: typeof PromoteResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_ctrl_v1_deployment, 0);

