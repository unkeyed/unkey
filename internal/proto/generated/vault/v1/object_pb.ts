// @generated by protoc-gen-es v2.8.0 with parameter "target=ts"
// @generated from file vault/v1/object.proto (package vault.v1, syntax proto3)
/* eslint-disable */

import type { Message } from "@bufbuild/protobuf";
import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";

/**
 * Describes the file vault/v1/object.proto.
 */
export const file_vault_v1_object: GenFile =
  /*@__PURE__*/
  fileDesc(
    "ChV2YXVsdC92MS9vYmplY3QucHJvdG8SCHZhdWx0LnYxIkAKEURhdGFFbmNyeXB0aW9uS2V5EgoKAmlkGAEgASgJEhIKCmNyZWF0ZWRfYXQYAiABKAMSCwoDa2V5GAMgASgMImQKGkVuY3J5cHRlZERhdGFFbmNyeXB0aW9uS2V5EgoKAmlkGAEgASgJEhIKCmNyZWF0ZWRfYXQYAiABKAMSJgoJZW5jcnlwdGVkGAMgASgLMhMudmF1bHQudjEuRW5jcnlwdGVkIj8KEEtleUVuY3J5cHRpb25LZXkSCgoCaWQYASABKAkSEgoKY3JlYXRlZF9hdBgCIAEoAxILCgNrZXkYAyABKAwifwoJRW5jcnlwdGVkEiYKCWFsZ29yaXRobRgBIAEoDjITLnZhdWx0LnYxLkFsZ29yaXRobRINCgVub25jZRgCIAEoDBISCgpjaXBoZXJ0ZXh0GAMgASgMEhkKEWVuY3J5cHRpb25fa2V5X2lkGAQgASgJEgwKBHRpbWUYBSABKAMqHAoJQWxnb3JpdGhtEg8KC0FFU18yNTZfR0NNEABClAEKDGNvbS52YXVsdC52MUILT2JqZWN0UHJvdG9QAVo2Z2l0aHViLmNvbS91bmtleWVkL3Vua2V5L2dvL2dlbi9wcm90by92YXVsdC92MTt2YXVsdHYxogIDVlhYqgIIVmF1bHQuVjHKAghWYXVsdFxWMeICFFZhdWx0XFYxXEdQQk1ldGFkYXRh6gIJVmF1bHQ6OlYxYgZwcm90bzM",
  );

/**
 * @generated from message vault.v1.DataEncryptionKey
 */
export type DataEncryptionKey = Message<"vault.v1.DataEncryptionKey"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Linux milliseconds since epoch
   *
   * @generated from field: int64 created_at = 2;
   */
  createdAt: bigint;

  /**
   * @generated from field: bytes key = 3;
   */
  key: Uint8Array;
};

/**
 * Describes the message vault.v1.DataEncryptionKey.
 * Use `create(DataEncryptionKeySchema)` to create a new message.
 */
export const DataEncryptionKeySchema: GenMessage<DataEncryptionKey> =
  /*@__PURE__*/
  messageDesc(file_vault_v1_object, 0);

/**
 * This is stored in the database in whatever format the database uses
 *
 * @generated from message vault.v1.EncryptedDataEncryptionKey
 */
export type EncryptedDataEncryptionKey = Message<"vault.v1.EncryptedDataEncryptionKey"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Linux milliseconds since epoch
   *
   * @generated from field: int64 created_at = 2;
   */
  createdAt: bigint;

  /**
   * @generated from field: vault.v1.Encrypted encrypted = 3;
   */
  encrypted?: Encrypted;
};

/**
 * Describes the message vault.v1.EncryptedDataEncryptionKey.
 * Use `create(EncryptedDataEncryptionKeySchema)` to create a new message.
 */
export const EncryptedDataEncryptionKeySchema: GenMessage<EncryptedDataEncryptionKey> =
  /*@__PURE__*/
  messageDesc(file_vault_v1_object, 1);

/**
 * KeyEncryptionKey is a key used to encrypt data encryption keys
 *
 * @generated from message vault.v1.KeyEncryptionKey
 */
export type KeyEncryptionKey = Message<"vault.v1.KeyEncryptionKey"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: int64 created_at = 2;
   */
  createdAt: bigint;

  /**
   * @generated from field: bytes key = 3;
   */
  key: Uint8Array;
};

/**
 * Describes the message vault.v1.KeyEncryptionKey.
 * Use `create(KeyEncryptionKeySchema)` to create a new message.
 */
export const KeyEncryptionKeySchema: GenMessage<KeyEncryptionKey> =
  /*@__PURE__*/
  messageDesc(file_vault_v1_object, 2);

/**
 * Encrypted contains the output of the encryption and all of the metadata required to decrypt it
 *
 * @generated from message vault.v1.Encrypted
 */
export type Encrypted = Message<"vault.v1.Encrypted"> & {
  /**
   * @generated from field: vault.v1.Algorithm algorithm = 1;
   */
  algorithm: Algorithm;

  /**
   * @generated from field: bytes nonce = 2;
   */
  nonce: Uint8Array;

  /**
   * @generated from field: bytes ciphertext = 3;
   */
  ciphertext: Uint8Array;

  /**
   * key id of the key that encrypted this data
   *
   * @generated from field: string encryption_key_id = 4;
   */
  encryptionKeyId: string;

  /**
   * time of encryption
   * we can use this later to figure out if a piece of data should be re-encrypted
   *
   * @generated from field: int64 time = 5;
   */
  time: bigint;
};

/**
 * Describes the message vault.v1.Encrypted.
 * Use `create(EncryptedSchema)` to create a new message.
 */
export const EncryptedSchema: GenMessage<Encrypted> =
  /*@__PURE__*/
  messageDesc(file_vault_v1_object, 3);

/**
 * @generated from enum vault.v1.Algorithm
 */
export enum Algorithm {
  /**
   * @generated from enum value: AES_256_GCM = 0;
   */
  AES_256_GCM = 0,
}

/**
 * Describes the enum vault.v1.Algorithm.
 */
export const AlgorithmSchema: GenEnum<Algorithm> = /*@__PURE__*/ enumDesc(file_vault_v1_object, 0);
