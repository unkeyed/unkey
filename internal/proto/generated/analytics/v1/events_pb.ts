// @generated by protoc-gen-es v2.8.0 with parameter "target=ts"
// @generated from file analytics/v1/events.proto (package analytics.v1, syntax proto3)
/* eslint-disable */

import type { Message } from "@bufbuild/protobuf";
import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";

/**
 * Describes the file analytics/v1/events.proto.
 */
export const file_analytics_v1_events: GenFile =
  /*@__PURE__*/
  fileDesc(
    "ChlhbmFseXRpY3MvdjEvZXZlbnRzLnByb3RvEgxhbmFseXRpY3MudjEi4AEKFEtleVZlcmlmaWNhdGlvbkV2ZW50EhIKCnJlcXVlc3RfaWQYASABKAkSDAoEdGltZRgCIAEoAxIUCgx3b3Jrc3BhY2VfaWQYAyABKAkSFAoMa2V5X3NwYWNlX2lkGAQgASgJEhMKC2lkZW50aXR5X2lkGAUgASgJEg4KBmtleV9pZBgGIAEoCRIOCgZyZWdpb24YByABKAkSDwoHb3V0Y29tZRgIIAEoCRIMCgR0YWdzGAkgAygJEhUKDXNwZW50X2NyZWRpdHMYCiABKAMSDwoHbGF0ZW5jeRgLIAEoASLcAQoOUmF0ZWxpbWl0RXZlbnQSEgoKcmVxdWVzdF9pZBgBIAEoCRIMCgR0aW1lGAIgASgDEhQKDHdvcmtzcGFjZV9pZBgDIAEoCRIUCgxuYW1lc3BhY2VfaWQYBCABKAkSEgoKaWRlbnRpZmllchgFIAEoCRIOCgZwYXNzZWQYBiABKAgSDwoHbGF0ZW5jeRgHIAEoARITCgtvdmVycmlkZV9pZBgIIAEoCRINCgVsaW1pdBgJIAEoBBIRCglyZW1haW5pbmcYCiABKAQSEAoIcmVzZXRfYXQYCyABKAMi+QMKD0FwaVJlcXVlc3RFdmVudBISCgpyZXF1ZXN0X2lkGAEgASgJEgwKBHRpbWUYAiABKAMSFAoMd29ya3NwYWNlX2lkGAMgASgJEgwKBGhvc3QYBCABKAkSDgoGbWV0aG9kGAUgASgJEgwKBHBhdGgYBiABKAkSFAoMcXVlcnlfc3RyaW5nGAcgASgJEkQKDHF1ZXJ5X3BhcmFtcxgIIAMoCzIuLmFuYWx5dGljcy52MS5BcGlSZXF1ZXN0RXZlbnQuUXVlcnlQYXJhbXNFbnRyeRIXCg9yZXF1ZXN0X2hlYWRlcnMYCSADKAkSFAoMcmVxdWVzdF9ib2R5GAogASgJEhcKD3Jlc3BvbnNlX3N0YXR1cxgLIAEoBRIYChByZXNwb25zZV9oZWFkZXJzGAwgAygJEhUKDXJlc3BvbnNlX2JvZHkYDSABKAkSDQoFZXJyb3IYDiABKAkSFwoPc2VydmljZV9sYXRlbmN5GA8gASgDEhIKCnVzZXJfYWdlbnQYECABKAkSEgoKaXBfYWRkcmVzcxgRIAEoCRIOCgZyZWdpb24YEiABKAkaTQoQUXVlcnlQYXJhbXNFbnRyeRILCgNrZXkYASABKAkSKAoFdmFsdWUYAiABKAsyGS5hbmFseXRpY3MudjEuUXVlcnlQYXJhbXM6AjgBIh0KC1F1ZXJ5UGFyYW1zEg4KBnZhbHVlcxgBIAMoCUI0WjJnaXRodWIuY29tL3Vua2V5ZWQvdW5rZXkvZ28vZ2VuL3Byb3RvL2FuYWx5dGljcy92MWIGcHJvdG8z",
  );

/**
 * KeyVerificationEvent represents a key verification operation event.
 * This event is emitted whenever an API key is validated.
 *
 * @generated from message analytics.v1.KeyVerificationEvent
 */
export type KeyVerificationEvent = Message<"analytics.v1.KeyVerificationEvent"> & {
  /**
   * Request ID for tracing correlation
   *
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * Unix timestamp in milliseconds
   *
   * @generated from field: int64 time = 2;
   */
  time: bigint;

  /**
   * Workspace identifier
   *
   * @generated from field: string workspace_id = 3;
   */
  workspaceId: string;

  /**
   * Key space identifier (API identifier)
   *
   * @generated from field: string key_space_id = 4;
   */
  keySpaceId: string;

  /**
   * Identity identifier (empty if no identity)
   *
   * @generated from field: string identity_id = 5;
   */
  identityId: string;

  /**
   * Key identifier
   *
   * @generated from field: string key_id = 6;
   */
  keyId: string;

  /**
   * Geographic region where verification occurred
   *
   * @generated from field: string region = 7;
   */
  region: string;

  /**
   * Verification outcome (e.g., "VALID", "EXPIRED", "RATE_LIMITED")
   *
   * @generated from field: string outcome = 8;
   */
  outcome: string;

  /**
   * Tags associated with the key
   *
   * @generated from field: repeated string tags = 9;
   */
  tags: string[];

  /**
   * Credits spent on this verification
   *
   * @generated from field: int64 spent_credits = 10;
   */
  spentCredits: bigint;

  /**
   * Latency in milliseconds for this verification
   *
   * @generated from field: double latency = 11;
   */
  latency: number;
};

/**
 * Describes the message analytics.v1.KeyVerificationEvent.
 * Use `create(KeyVerificationEventSchema)` to create a new message.
 */
export const KeyVerificationEventSchema: GenMessage<KeyVerificationEvent> =
  /*@__PURE__*/
  messageDesc(file_analytics_v1_events, 0);

/**
 * RatelimitEvent represents a rate limiting operation event.
 * This event is emitted whenever rate limiting is applied.
 *
 * @generated from message analytics.v1.RatelimitEvent
 */
export type RatelimitEvent = Message<"analytics.v1.RatelimitEvent"> & {
  /**
   * Request ID for tracing correlation
   *
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * Unix timestamp in milliseconds
   *
   * @generated from field: int64 time = 2;
   */
  time: bigint;

  /**
   * Workspace identifier
   *
   * @generated from field: string workspace_id = 3;
   */
  workspaceId: string;

  /**
   * Namespace identifier for the rate limit
   *
   * @generated from field: string namespace_id = 4;
   */
  namespaceId: string;

  /**
   * Identifier being rate limited
   *
   * @generated from field: string identifier = 5;
   */
  identifier: string;

  /**
   * Whether the request passed rate limiting
   *
   * @generated from field: bool passed = 6;
   */
  passed: boolean;

  /**
   * Latency in milliseconds for this rate limit check
   *
   * @generated from field: double latency = 7;
   */
  latency: number;

  /**
   * Override ID if any override was applied
   *
   * @generated from field: string override_id = 8;
   */
  overrideId: string;

  /**
   * Rate limit configuration
   *
   * @generated from field: uint64 limit = 9;
   */
  limit: bigint;

  /**
   * Remaining requests
   *
   * @generated from field: uint64 remaining = 10;
   */
  remaining: bigint;

  /**
   * Reset timestamp
   *
   * @generated from field: int64 reset_at = 11;
   */
  resetAt: bigint;
};

/**
 * Describes the message analytics.v1.RatelimitEvent.
 * Use `create(RatelimitEventSchema)` to create a new message.
 */
export const RatelimitEventSchema: GenMessage<RatelimitEvent> =
  /*@__PURE__*/
  messageDesc(file_analytics_v1_events, 1);

/**
 * ApiRequestEvent represents an HTTP API request event.
 * This event is emitted for API requests that need to be tracked.
 *
 * @generated from message analytics.v1.ApiRequestEvent
 */
export type ApiRequestEvent = Message<"analytics.v1.ApiRequestEvent"> & {
  /**
   * Request ID for tracing correlation
   *
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * Unix timestamp in milliseconds
   *
   * @generated from field: int64 time = 2;
   */
  time: bigint;

  /**
   * Workspace identifier
   *
   * @generated from field: string workspace_id = 3;
   */
  workspaceId: string;

  /**
   * Request host
   *
   * @generated from field: string host = 4;
   */
  host: string;

  /**
   * HTTP method
   *
   * @generated from field: string method = 5;
   */
  method: string;

  /**
   * Request path
   *
   * @generated from field: string path = 6;
   */
  path: string;

  /**
   * Query string
   *
   * @generated from field: string query_string = 7;
   */
  queryString: string;

  /**
   * Query parameters as key-value pairs
   *
   * @generated from field: map<string, analytics.v1.QueryParams> query_params = 8;
   */
  queryParams: { [key: string]: QueryParams };

  /**
   * Request headers
   *
   * @generated from field: repeated string request_headers = 9;
   */
  requestHeaders: string[];

  /**
   * Request body (sanitized)
   *
   * @generated from field: string request_body = 10;
   */
  requestBody: string;

  /**
   * HTTP response status code
   *
   * @generated from field: int32 response_status = 11;
   */
  responseStatus: number;

  /**
   * Response headers
   *
   * @generated from field: repeated string response_headers = 12;
   */
  responseHeaders: string[];

  /**
   * Response body (sanitized)
   *
   * @generated from field: string response_body = 13;
   */
  responseBody: string;

  /**
   * Error message if any
   *
   * @generated from field: string error = 14;
   */
  error: string;

  /**
   * Service latency in milliseconds
   *
   * @generated from field: int64 service_latency = 15;
   */
  serviceLatency: bigint;

  /**
   * User agent
   *
   * @generated from field: string user_agent = 16;
   */
  userAgent: string;

  /**
   * IP address
   *
   * @generated from field: string ip_address = 17;
   */
  ipAddress: string;

  /**
   * Geographic region
   *
   * @generated from field: string region = 18;
   */
  region: string;
};

/**
 * Describes the message analytics.v1.ApiRequestEvent.
 * Use `create(ApiRequestEventSchema)` to create a new message.
 */
export const ApiRequestEventSchema: GenMessage<ApiRequestEvent> =
  /*@__PURE__*/
  messageDesc(file_analytics_v1_events, 2);

/**
 * QueryParams represents multiple values for a query parameter
 *
 * @generated from message analytics.v1.QueryParams
 */
export type QueryParams = Message<"analytics.v1.QueryParams"> & {
  /**
   * @generated from field: repeated string values = 1;
   */
  values: string[];
};

/**
 * Describes the message analytics.v1.QueryParams.
 * Use `create(QueryParamsSchema)` to create a new message.
 */
export const QueryParamsSchema: GenMessage<QueryParams> =
  /*@__PURE__*/
  messageDesc(file_analytics_v1_events, 3);
