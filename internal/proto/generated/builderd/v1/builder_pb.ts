// @generated by protoc-gen-es v2.8.0 with parameter "target=ts"
// @generated from file builderd/v1/builder.proto (package builderd.v1, syntax proto3)
/* eslint-disable */

import type { Message } from "@bufbuild/protobuf";
import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file builderd/v1/builder.proto.
 */
export const file_builderd_v1_builder: GenFile =
  /*@__PURE__*/
  fileDesc(
    "",
    [file_google_protobuf_timestamp],
  );

/**
 * Build source types - extensible for future build types
 *
 * @generated from message builderd.v1.BuildSource
 */
export type BuildSource = Message<"builderd.v1.BuildSource"> & {
  /**
   * @generated from oneof builderd.v1.BuildSource.source_type
   */
  sourceType:
    | {
        /**
         * @generated from field: builderd.v1.DockerImageSource docker_image = 1;
         */
        value: DockerImageSource;
        case: "dockerImage";
      }
    | {
        /**
         * @generated from field: builderd.v1.GitRepositorySource git_repository = 2;
         */
        value: GitRepositorySource;
        case: "gitRepository";
      }
    | {
        /**
         * Future: nix_flake = 4, buildpack = 5, etc.
         *
         * @generated from field: builderd.v1.ArchiveSource archive = 3;
         */
        value: ArchiveSource;
        case: "archive";
      }
    | { case: undefined; value?: undefined };
};

/**
 * Describes the message builderd.v1.BuildSource.
 * Use `create(BuildSourceSchema)` to create a new message.
 */
export const BuildSourceSchema: GenMessage<BuildSource> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 0);

/**
 * Docker image extraction (first implementation)
 *
 * @generated from message builderd.v1.DockerImageSource
 */
export type DockerImageSource = Message<"builderd.v1.DockerImageSource"> & {
  /**
   * "ghcr.io/unkeyed/unkey:f4cfee5"
   *
   * @generated from field: string image_uri = 1;
   */
  imageUri: string;

  /**
   * Registry authentication
   *
   * @generated from field: builderd.v1.DockerAuth auth = 2;
   */
  auth?: DockerAuth;

  /**
   * Additional tags to consider
   *
   * @generated from field: repeated string pull_tags = 3;
   */
  pullTags: string[];
};

/**
 * Describes the message builderd.v1.DockerImageSource.
 * Use `create(DockerImageSourceSchema)` to create a new message.
 */
export const DockerImageSourceSchema: GenMessage<DockerImageSource> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 1);

/**
 * @generated from message builderd.v1.DockerAuth
 */
export type DockerAuth = Message<"builderd.v1.DockerAuth"> & {
  /**
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * @generated from field: string token = 3;
   */
  token: string;

  /**
   * @generated from field: string registry = 4;
   */
  registry: string;
};

/**
 * Describes the message builderd.v1.DockerAuth.
 * Use `create(DockerAuthSchema)` to create a new message.
 */
export const DockerAuthSchema: GenMessage<DockerAuth> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 2);

/**
 * Git repository builds (future)
 *
 * @generated from message builderd.v1.GitRepositorySource
 */
export type GitRepositorySource = Message<"builderd.v1.GitRepositorySource"> & {
  /**
   * "https://github.com/unkeyed/unkey"
   *
   * @generated from field: string repository_url = 1;
   */
  repositoryUrl: string;

  /**
   * branch/tag/commit
   *
   * @generated from field: string ref = 2;
   */
  ref: string;

  /**
   * subdirectory if needed
   *
   * @generated from field: string build_context = 3;
   */
  buildContext: string;

  /**
   * @generated from field: builderd.v1.GitAuth auth = 4;
   */
  auth?: GitAuth;
};

/**
 * Describes the message builderd.v1.GitRepositorySource.
 * Use `create(GitRepositorySourceSchema)` to create a new message.
 */
export const GitRepositorySourceSchema: GenMessage<GitRepositorySource> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 3);

/**
 * @generated from message builderd.v1.GitAuth
 */
export type GitAuth = Message<"builderd.v1.GitAuth"> & {
  /**
   * @generated from field: string username = 1;
   */
  username: string;

  /**
   * @generated from field: string password = 2;
   */
  password: string;

  /**
   * @generated from field: string ssh_key = 3;
   */
  sshKey: string;

  /**
   * @generated from field: string token = 4;
   */
  token: string;
};

/**
 * Describes the message builderd.v1.GitAuth.
 * Use `create(GitAuthSchema)` to create a new message.
 */
export const GitAuthSchema: GenMessage<GitAuth> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 4);

/**
 * Archive builds (future)
 *
 * @generated from message builderd.v1.ArchiveSource
 */
export type ArchiveSource = Message<"builderd.v1.ArchiveSource"> & {
  /**
   * URL to tar.gz, zip, etc.
   *
   * @generated from field: string archive_url = 1;
   */
  archiveUrl: string;

  /**
   * "tar.gz", "zip"
   *
   * @generated from field: string archive_type = 2;
   */
  archiveType: string;

  /**
   * subdirectory in archive
   *
   * @generated from field: string build_context = 3;
   */
  buildContext: string;
};

/**
 * Describes the message builderd.v1.ArchiveSource.
 * Use `create(ArchiveSourceSchema)` to create a new message.
 */
export const ArchiveSourceSchema: GenMessage<ArchiveSource> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 5);

/**
 * Build target types - extensible
 *
 * @generated from message builderd.v1.BuildTarget
 */
export type BuildTarget = Message<"builderd.v1.BuildTarget"> & {
  /**
   * @generated from oneof builderd.v1.BuildTarget.target_type
   */
  targetType:
    | {
        /**
         * @generated from field: builderd.v1.MicroVMRootfs microvm_rootfs = 1;
         */
        value: MicroVMRootfs;
        case: "microvmRootfs";
      }
    | {
        /**
         * Future: wasm_module = 3, lambda_layer = 4, etc.
         *
         * @generated from field: builderd.v1.ContainerImage container_image = 2;
         */
        value: ContainerImage;
        case: "containerImage";
      }
    | { case: undefined; value?: undefined };
};

/**
 * Describes the message builderd.v1.BuildTarget.
 * Use `create(BuildTargetSchema)` to create a new message.
 */
export const BuildTargetSchema: GenMessage<BuildTarget> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 6);

/**
 * MicroVM rootfs (our focus)
 *
 * @generated from message builderd.v1.MicroVMRootfs
 */
export type MicroVMRootfs = Message<"builderd.v1.MicroVMRootfs"> & {
  /**
   * @generated from field: builderd.v1.InitStrategy init_strategy = 1;
   */
  initStrategy: InitStrategy;

  /**
   * @generated from field: builderd.v1.RuntimeConfig runtime_config = 2;
   */
  runtimeConfig?: RuntimeConfig;

  /**
   * @generated from field: builderd.v1.OptimizationSettings optimization = 3;
   */
  optimization?: OptimizationSettings;

  /**
   * @generated from field: repeated string preserve_paths = 4;
   */
  preservePaths: string[];
};

/**
 * Describes the message builderd.v1.MicroVMRootfs.
 * Use `create(MicroVMRootfsSchema)` to create a new message.
 */
export const MicroVMRootfsSchema: GenMessage<MicroVMRootfs> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 7);

/**
 * Container image (future)
 *
 * @generated from message builderd.v1.ContainerImage
 */
export type ContainerImage = Message<"builderd.v1.ContainerImage"> & {
  /**
   * @generated from field: string base_image = 1;
   */
  baseImage: string;

  /**
   * @generated from field: repeated string layers = 2;
   */
  layers: string[];
};

/**
 * Describes the message builderd.v1.ContainerImage.
 * Use `create(ContainerImageSchema)` to create a new message.
 */
export const ContainerImageSchema: GenMessage<ContainerImage> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 8);

/**
 * @generated from message builderd.v1.RuntimeConfig
 */
export type RuntimeConfig = Message<"builderd.v1.RuntimeConfig"> & {
  /**
   * Override CMD
   *
   * @generated from field: repeated string command = 1;
   */
  command: string[];

  /**
   * Override ENTRYPOINT
   *
   * @generated from field: repeated string entrypoint = 2;
   */
  entrypoint: string[];

  /**
   * Override WORKDIR
   *
   * @generated from field: string working_dir = 3;
   */
  workingDir: string;

  /**
   * Environment variables
   *
   * @generated from field: map<string, string> environment = 4;
   */
  environment: { [key: string]: string };

  /**
   * Ports to expose
   *
   * @generated from field: repeated string exposed_ports = 5;
   */
  exposedPorts: string[];
};

/**
 * Describes the message builderd.v1.RuntimeConfig.
 * Use `create(RuntimeConfigSchema)` to create a new message.
 */
export const RuntimeConfigSchema: GenMessage<RuntimeConfig> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 9);

/**
 * @generated from message builderd.v1.OptimizationSettings
 */
export type OptimizationSettings = Message<"builderd.v1.OptimizationSettings"> & {
  /**
   * Strip debug info
   *
   * @generated from field: bool strip_debug_symbols = 1;
   */
  stripDebugSymbols: boolean;

  /**
   * Compress with UPX
   *
   * @generated from field: bool compress_binaries = 2;
   */
  compressBinaries: boolean;

  /**
   * Remove documentation
   *
   * @generated from field: bool remove_docs = 3;
   */
  removeDocs: boolean;

  /**
   * Remove package caches
   *
   * @generated from field: bool remove_cache = 4;
   */
  removeCache: boolean;

  /**
   * Paths to always keep
   *
   * @generated from field: repeated string preserve_paths = 5;
   */
  preservePaths: string[];

  /**
   * Files to exclude
   *
   * @generated from field: repeated string exclude_patterns = 6;
   */
  excludePatterns: string[];
};

/**
 * Describes the message builderd.v1.OptimizationSettings.
 * Use `create(OptimizationSettingsSchema)` to create a new message.
 */
export const OptimizationSettingsSchema: GenMessage<OptimizationSettings> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 10);

/**
 * Build strategies - how to build from source to target
 *
 * @generated from message builderd.v1.BuildStrategy
 */
export type BuildStrategy = Message<"builderd.v1.BuildStrategy"> & {
  /**
   * @generated from oneof builderd.v1.BuildStrategy.strategy_type
   */
  strategyType:
    | {
        /**
         * @generated from field: builderd.v1.DockerExtractStrategy docker_extract = 1;
         */
        value: DockerExtractStrategy;
        case: "dockerExtract";
      }
    | {
        /**
         * @generated from field: builderd.v1.GoApiStrategy go_api = 2;
         */
        value: GoApiStrategy;
        case: "goApi";
      }
    | {
        /**
         * @generated from field: builderd.v1.SinatraStrategy sinatra = 3;
         */
        value: SinatraStrategy;
        case: "sinatra";
      }
    | {
        /**
         * Future: python_wsgi = 5, rust_binary = 6, etc.
         *
         * @generated from field: builderd.v1.NodejsStrategy nodejs = 4;
         */
        value: NodejsStrategy;
        case: "nodejs";
      }
    | { case: undefined; value?: undefined };
};

/**
 * Describes the message builderd.v1.BuildStrategy.
 * Use `create(BuildStrategySchema)` to create a new message.
 */
export const BuildStrategySchema: GenMessage<BuildStrategy> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 11);

/**
 * Docker extraction strategy (first implementation)
 *
 * @generated from message builderd.v1.DockerExtractStrategy
 */
export type DockerExtractStrategy = Message<"builderd.v1.DockerExtractStrategy"> & {
  /**
   * Keep layer structure
   *
   * @generated from field: bool preserve_layers = 1;
   */
  preserveLayers: boolean;

  /**
   * Merge all layers
   *
   * @generated from field: bool flatten_filesystem = 2;
   */
  flattenFilesystem: boolean;

  /**
   * Files to exclude
   *
   * @generated from field: repeated string exclude_patterns = 3;
   */
  excludePatterns: string[];
};

/**
 * Describes the message builderd.v1.DockerExtractStrategy.
 * Use `create(DockerExtractStrategySchema)` to create a new message.
 */
export const DockerExtractStrategySchema: GenMessage<DockerExtractStrategy> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 12);

/**
 * Go API strategy (future)
 *
 * @generated from message builderd.v1.GoApiStrategy
 */
export type GoApiStrategy = Message<"builderd.v1.GoApiStrategy"> & {
  /**
   * "1.21", "latest"
   *
   * @generated from field: string go_version = 1;
   */
  goVersion: string;

  /**
   * "-ldflags", "-tags"
   *
   * @generated from field: repeated string build_flags = 2;
   */
  buildFlags: string[];

  /**
   * "./cmd/api"
   *
   * @generated from field: string main_package = 3;
   */
  mainPackage: string;

  /**
   * @generated from field: bool enable_cgo = 4;
   */
  enableCgo: boolean;
};

/**
 * Describes the message builderd.v1.GoApiStrategy.
 * Use `create(GoApiStrategySchema)` to create a new message.
 */
export const GoApiStrategySchema: GenMessage<GoApiStrategy> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 13);

/**
 * Sinatra strategy (future)
 *
 * @generated from message builderd.v1.SinatraStrategy
 */
export type SinatraStrategy = Message<"builderd.v1.SinatraStrategy"> & {
  /**
   * "3.2", "latest"
   *
   * @generated from field: string ruby_version = 1;
   */
  rubyVersion: string;

  /**
   * "Gemfile"
   *
   * @generated from field: string gemfile_path = 2;
   */
  gemfilePath: string;

  /**
   * "puma", "unicorn"
   *
   * @generated from field: string rack_server = 3;
   */
  rackServer: string;

  /**
   * Server-specific config
   *
   * @generated from field: map<string, string> rack_config = 4;
   */
  rackConfig: { [key: string]: string };
};

/**
 * Describes the message builderd.v1.SinatraStrategy.
 * Use `create(SinatraStrategySchema)` to create a new message.
 */
export const SinatraStrategySchema: GenMessage<SinatraStrategy> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 14);

/**
 * Node.js strategy (future)
 *
 * @generated from message builderd.v1.NodejsStrategy
 */
export type NodejsStrategy = Message<"builderd.v1.NodejsStrategy"> & {
  /**
   * "18", "20", "latest"
   *
   * @generated from field: string node_version = 1;
   */
  nodeVersion: string;

  /**
   * "npm", "yarn", "pnpm"
   *
   * @generated from field: string package_manager = 2;
   */
  packageManager: string;

  /**
   * "start", "server"
   *
   * @generated from field: string start_script = 3;
   */
  startScript: string;

  /**
   * NODE_ENV=production
   *
   * @generated from field: bool enable_production = 4;
   */
  enableProduction: boolean;
};

/**
 * Describes the message builderd.v1.NodejsStrategy.
 * Use `create(NodejsStrategySchema)` to create a new message.
 */
export const NodejsStrategySchema: GenMessage<NodejsStrategy> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 15);

/**
 * Main build configuration
 *
 * Tenant identification
 *
 * @generated from message builderd.v1.BuildConfig
 */
export type BuildConfig = Message<"builderd.v1.BuildConfig"> & {
  /**
   * What we're building from
   *
   * @generated from field: builderd.v1.BuildSource source = 1;
   */
  source?: BuildSource;

  /**
   * What we're building to
   *
   * @generated from field: builderd.v1.BuildTarget target = 2;
   */
  target?: BuildTarget;

  /**
   * How to build it
   *
   * @generated from field: builderd.v1.BuildStrategy strategy = 3;
   */
  strategy?: BuildStrategy;

  /**
   * Build metadata
   *
   * Human-readable name
   *
   * @generated from field: string build_name = 4;
   */
  buildName: string;

  /**
   * Custom labels
   *
   * @generated from field: map<string, string> labels = 5;
   */
  labels: { [key: string]: string };

  /**
   * Suggested asset ID to use when registering the built artifact
   * This allows the caller to pre-generate the asset ID
   *
   * @generated from field: string suggested_asset_id = 6;
   */
  suggestedAssetId: string;
};

/**
 * Describes the message builderd.v1.BuildConfig.
 * Use `create(BuildConfigSchema)` to create a new message.
 */
export const BuildConfigSchema: GenMessage<BuildConfig> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 16);

/**
 * Build isolation metadata
 *
 * @generated from message builderd.v1.BuildIsolation
 */
export type BuildIsolation = Message<"builderd.v1.BuildIsolation"> & {
  /**
   * Unique sandbox identifier
   *
   * @generated from field: string sandbox_id = 1;
   */
  sandboxId: string;

  /**
   * Network isolation
   *
   * @generated from field: string network_namespace = 2;
   */
  networkNamespace: string;

  /**
   * Filesystem isolation
   *
   * @generated from field: string filesystem_namespace = 3;
   */
  filesystemNamespace: string;

  /**
   * SELinux/AppArmor contexts
   *
   * @generated from field: repeated string security_contexts = 4;
   */
  securityContexts: string[];

  /**
   * Resource cgroup
   *
   * @generated from field: string cgroup_path = 5;
   */
  cgroupPath: string;
};

/**
 * Describes the message builderd.v1.BuildIsolation.
 * Use `create(BuildIsolationSchema)` to create a new message.
 */
export const BuildIsolationSchema: GenMessage<BuildIsolation> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 17);

/**
 * Image metadata extracted from Docker images
 *
 * @generated from message builderd.v1.ImageMetadata
 */
export type ImageMetadata = Message<"builderd.v1.ImageMetadata"> & {
  /**
   * Original Docker image
   *
   * @generated from field: string original_image = 1;
   */
  originalImage: string;

  /**
   * Docker image SHA256
   *
   * @generated from field: string image_digest = 2;
   */
  imageDigest: string;

  /**
   * Layer digests
   *
   * @generated from field: repeated string layers = 3;
   */
  layers: string[];

  /**
   * Docker labels
   *
   * @generated from field: map<string, string> labels = 4;
   */
  labels: { [key: string]: string };

  /**
   * Original CMD
   *
   * @generated from field: repeated string command = 5;
   */
  command: string[];

  /**
   * Original ENTRYPOINT
   *
   * @generated from field: repeated string entrypoint = 6;
   */
  entrypoint: string[];

  /**
   * WORKDIR
   *
   * @generated from field: string working_dir = 7;
   */
  workingDir: string;

  /**
   * Environment variables
   *
   * @generated from field: map<string, string> env = 8;
   */
  env: { [key: string]: string };

  /**
   * EXPOSE ports
   *
   * @generated from field: repeated string exposed_ports = 9;
   */
  exposedPorts: string[];

  /**
   * USER directive
   *
   * @generated from field: string user = 10;
   */
  user: string;

  /**
   * VOLUME directives
   *
   * @generated from field: repeated string volumes = 11;
   */
  volumes: string[];
};

/**
 * Describes the message builderd.v1.ImageMetadata.
 * Use `create(ImageMetadataSchema)` to create a new message.
 */
export const ImageMetadataSchema: GenMessage<ImageMetadata> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 18);

/**
 * Build performance metrics
 *
 * @generated from message builderd.v1.BuildMetrics
 */
export type BuildMetrics = Message<"builderd.v1.BuildMetrics"> & {
  /**
   * Time to pull image/source
   *
   * @generated from field: int64 pull_duration_ms = 1;
   */
  pullDurationMs: bigint;

  /**
   * Time to extract layers
   *
   * @generated from field: int64 extract_duration_ms = 2;
   */
  extractDurationMs: bigint;

  /**
   * Time to build rootfs
   *
   * @generated from field: int64 build_duration_ms = 3;
   */
  buildDurationMs: bigint;

  /**
   * Time for optimizations
   *
   * @generated from field: int64 optimize_duration_ms = 4;
   */
  optimizeDurationMs: bigint;

  /**
   * Total build time
   *
   * @generated from field: int64 total_duration_ms = 5;
   */
  totalDurationMs: bigint;

  /**
   * Original image/source size
   *
   * @generated from field: int64 original_size_bytes = 6;
   */
  originalSizeBytes: bigint;

  /**
   * Final rootfs size
   *
   * @generated from field: int64 rootfs_size_bytes = 7;
   */
  rootfsSizeBytes: bigint;

  /**
   * Size reduction percentage
   *
   * @generated from field: int64 compression_ratio = 8;
   */
  compressionRatio: bigint;

  /**
   * Peak memory usage
   *
   * @generated from field: int64 memory_peak_bytes = 9;
   */
  memoryPeakBytes: bigint;

  /**
   * Temporary disk usage
   *
   * @generated from field: int64 disk_usage_bytes = 10;
   */
  diskUsageBytes: bigint;

  /**
   * CPU cores utilized
   *
   * @generated from field: int32 cpu_cores_used = 11;
   */
  cpuCoresUsed: number;
};

/**
 * Describes the message builderd.v1.BuildMetrics.
 * Use `create(BuildMetricsSchema)` to create a new message.
 */
export const BuildMetricsSchema: GenMessage<BuildMetrics> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 19);

/**
 * Complete build job information
 *
 * @generated from message builderd.v1.BuildJob
 */
export type BuildJob = Message<"builderd.v1.BuildJob"> & {
  /**
   * Unique build identifier
   *
   * @generated from field: string build_id = 1;
   */
  buildId: string;

  /**
   * Build configuration
   *
   * @generated from field: builderd.v1.BuildConfig config = 2;
   */
  config?: BuildConfig;

  /**
   * Current build state
   *
   * @generated from field: builderd.v1.BuildState state = 3;
   */
  state: BuildState;

  /**
   * Timestamps
   *
   * @generated from field: google.protobuf.Timestamp created_at = 4;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp started_at = 5;
   */
  startedAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp completed_at = 6;
   */
  completedAt?: Timestamp;

  /**
   * Results
   *
   * Path to built rootfs
   *
   * @generated from field: string rootfs_path = 7;
   */
  rootfsPath: string;

  /**
   * Size of rootfs
   *
   * @generated from field: int64 rootfs_size_bytes = 8;
   */
  rootfsSizeBytes: bigint;

  /**
   * SHA256 of rootfs
   *
   * @generated from field: string rootfs_checksum = 9;
   */
  rootfsChecksum: string;

  /**
   * Build metadata
   *
   * @generated from field: builderd.v1.ImageMetadata image_metadata = 10;
   */
  imageMetadata?: ImageMetadata;

  /**
   * @generated from field: builderd.v1.BuildMetrics metrics = 11;
   */
  metrics?: BuildMetrics;

  /**
   * @generated from field: builderd.v1.BuildIsolation isolation = 12;
   */
  isolation?: BuildIsolation;

  /**
   * Error information
   *
   * @generated from field: string error_message = 13;
   */
  errorMessage: string;

  /**
   * @generated from field: repeated string build_logs = 14;
   */
  buildLogs: string[];

  /**
   * Progress information
   *
   * 0-100
   *
   * @generated from field: int32 progress_percent = 15;
   */
  progressPercent: number;

  /**
   * Current build step
   *
   * @generated from field: string current_step = 16;
   */
  currentStep: string;
};

/**
 * Describes the message builderd.v1.BuildJob.
 * Use `create(BuildJobSchema)` to create a new message.
 */
export const BuildJobSchema: GenMessage<BuildJob> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 20);

/**
 * Build log entry for streaming
 *
 * @generated from message builderd.v1.StreamBuildLogsResponse
 */
export type StreamBuildLogsResponse = Message<"builderd.v1.StreamBuildLogsResponse"> & {
  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 1;
   */
  timestamp?: Timestamp;

  /**
   * "info", "warn", "error", "debug"
   *
   * @generated from field: string level = 2;
   */
  level: string;

  /**
   * @generated from field: string message = 3;
   */
  message: string;

  /**
   * "puller", "extractor", "builder"
   *
   * @generated from field: string component = 4;
   */
  component: string;

  /**
   * @generated from field: map<string, string> metadata = 5;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message builderd.v1.StreamBuildLogsResponse.
 * Use `create(StreamBuildLogsResponseSchema)` to create a new message.
 */
export const StreamBuildLogsResponseSchema: GenMessage<StreamBuildLogsResponse> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 21);

/**
 * Request/Response messages
 *
 * @generated from message builderd.v1.CreateBuildRequest
 */
export type CreateBuildRequest = Message<"builderd.v1.CreateBuildRequest"> & {
  /**
   * @generated from field: builderd.v1.BuildConfig config = 1;
   */
  config?: BuildConfig;
};

/**
 * Describes the message builderd.v1.CreateBuildRequest.
 * Use `create(CreateBuildRequestSchema)` to create a new message.
 */
export const CreateBuildRequestSchema: GenMessage<CreateBuildRequest> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 22);

/**
 * @generated from message builderd.v1.CreateBuildResponse
 */
export type CreateBuildResponse = Message<"builderd.v1.CreateBuildResponse"> & {
  /**
   * @generated from field: string build_id = 1;
   */
  buildId: string;

  /**
   * @generated from field: builderd.v1.BuildState state = 2;
   */
  state: BuildState;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;

  /**
   * Path to the generated rootfs for VM creation
   *
   * @generated from field: string rootfs_path = 4;
   */
  rootfsPath: string;
};

/**
 * Describes the message builderd.v1.CreateBuildResponse.
 * Use `create(CreateBuildResponseSchema)` to create a new message.
 */
export const CreateBuildResponseSchema: GenMessage<CreateBuildResponse> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 23);

/**
 * @generated from message builderd.v1.GetBuildRequest
 */
export type GetBuildRequest = Message<"builderd.v1.GetBuildRequest"> & {
  /**
   * @generated from field: string build_id = 1;
   */
  buildId: string;

  /**
   * For authorization
   *
   * @generated from field: string tenant_id = 2;
   */
  tenantId: string;
};

/**
 * Describes the message builderd.v1.GetBuildRequest.
 * Use `create(GetBuildRequestSchema)` to create a new message.
 */
export const GetBuildRequestSchema: GenMessage<GetBuildRequest> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 24);

/**
 * @generated from message builderd.v1.GetBuildResponse
 */
export type GetBuildResponse = Message<"builderd.v1.GetBuildResponse"> & {
  /**
   * @generated from field: builderd.v1.BuildJob build = 1;
   */
  build?: BuildJob;
};

/**
 * Describes the message builderd.v1.GetBuildResponse.
 * Use `create(GetBuildResponseSchema)` to create a new message.
 */
export const GetBuildResponseSchema: GenMessage<GetBuildResponse> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 25);

/**
 * @generated from message builderd.v1.ListBuildsRequest
 */
export type ListBuildsRequest = Message<"builderd.v1.ListBuildsRequest"> & {
  /**
   * @generated from field: repeated builderd.v1.BuildState state_filter = 1;
   */
  stateFilter: BuildState[];

  /**
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message builderd.v1.ListBuildsRequest.
 * Use `create(ListBuildsRequestSchema)` to create a new message.
 */
export const ListBuildsRequestSchema: GenMessage<ListBuildsRequest> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 26);

/**
 * @generated from message builderd.v1.ListBuildsResponse
 */
export type ListBuildsResponse = Message<"builderd.v1.ListBuildsResponse"> & {
  /**
   * @generated from field: repeated builderd.v1.BuildJob builds = 1;
   */
  builds: BuildJob[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: int32 total_count = 3;
   */
  totalCount: number;
};

/**
 * Describes the message builderd.v1.ListBuildsResponse.
 * Use `create(ListBuildsResponseSchema)` to create a new message.
 */
export const ListBuildsResponseSchema: GenMessage<ListBuildsResponse> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 27);

/**
 * @generated from message builderd.v1.CancelBuildRequest
 */
export type CancelBuildRequest = Message<"builderd.v1.CancelBuildRequest"> & {
  /**
   * @generated from field: string build_id = 1;
   */
  buildId: string;
};

/**
 * Describes the message builderd.v1.CancelBuildRequest.
 * Use `create(CancelBuildRequestSchema)` to create a new message.
 */
export const CancelBuildRequestSchema: GenMessage<CancelBuildRequest> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 28);

/**
 * @generated from message builderd.v1.CancelBuildResponse
 */
export type CancelBuildResponse = Message<"builderd.v1.CancelBuildResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: builderd.v1.BuildState state = 2;
   */
  state: BuildState;
};

/**
 * Describes the message builderd.v1.CancelBuildResponse.
 * Use `create(CancelBuildResponseSchema)` to create a new message.
 */
export const CancelBuildResponseSchema: GenMessage<CancelBuildResponse> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 29);

/**
 * @generated from message builderd.v1.DeleteBuildRequest
 */
export type DeleteBuildRequest = Message<"builderd.v1.DeleteBuildRequest"> & {
  /**
   * @generated from field: string build_id = 1;
   */
  buildId: string;

  /**
   * Delete even if running
   *
   * @generated from field: bool force = 2;
   */
  force: boolean;
};

/**
 * Describes the message builderd.v1.DeleteBuildRequest.
 * Use `create(DeleteBuildRequestSchema)` to create a new message.
 */
export const DeleteBuildRequestSchema: GenMessage<DeleteBuildRequest> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 30);

/**
 * @generated from message builderd.v1.DeleteBuildResponse
 */
export type DeleteBuildResponse = Message<"builderd.v1.DeleteBuildResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message builderd.v1.DeleteBuildResponse.
 * Use `create(DeleteBuildResponseSchema)` to create a new message.
 */
export const DeleteBuildResponseSchema: GenMessage<DeleteBuildResponse> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 31);

/**
 * @generated from message builderd.v1.StreamBuildLogsRequest
 */
export type StreamBuildLogsRequest = Message<"builderd.v1.StreamBuildLogsRequest"> & {
  /**
   * @generated from field: string build_id = 1;
   */
  buildId: string;

  /**
   * Continue streaming new logs
   *
   * @generated from field: bool follow = 2;
   */
  follow: boolean;
};

/**
 * Describes the message builderd.v1.StreamBuildLogsRequest.
 * Use `create(StreamBuildLogsRequestSchema)` to create a new message.
 */
export const StreamBuildLogsRequestSchema: GenMessage<StreamBuildLogsRequest> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 32);

/**
 * @generated from message builderd.v1.GetBuildStatsRequest
 */
export type GetBuildStatsRequest = Message<"builderd.v1.GetBuildStatsRequest"> & {
  /**
   * @generated from field: string tenant_id = 1;
   */
  tenantId: string;

  /**
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_time = 3;
   */
  endTime?: Timestamp;
};

/**
 * Describes the message builderd.v1.GetBuildStatsRequest.
 * Use `create(GetBuildStatsRequestSchema)` to create a new message.
 */
export const GetBuildStatsRequestSchema: GenMessage<GetBuildStatsRequest> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 33);

/**
 * @generated from message builderd.v1.GetBuildStatsResponse
 */
export type GetBuildStatsResponse = Message<"builderd.v1.GetBuildStatsResponse"> & {
  /**
   * @generated from field: int32 total_builds = 1;
   */
  totalBuilds: number;

  /**
   * @generated from field: int32 successful_builds = 2;
   */
  successfulBuilds: number;

  /**
   * @generated from field: int32 failed_builds = 3;
   */
  failedBuilds: number;

  /**
   * @generated from field: int64 avg_build_time_ms = 4;
   */
  avgBuildTimeMs: bigint;

  /**
   * @generated from field: int64 total_storage_bytes = 5;
   */
  totalStorageBytes: bigint;

  /**
   * @generated from field: int64 total_compute_minutes = 6;
   */
  totalComputeMinutes: bigint;

  /**
   * @generated from field: repeated builderd.v1.BuildJob recent_builds = 7;
   */
  recentBuilds: BuildJob[];
};

/**
 * Describes the message builderd.v1.GetBuildStatsResponse.
 * Use `create(GetBuildStatsResponseSchema)` to create a new message.
 */
export const GetBuildStatsResponseSchema: GenMessage<GetBuildStatsResponse> =
  /*@__PURE__*/
  messageDesc(file_builderd_v1_builder, 34);

/**
 * Build job lifecycle states
 *
 * @generated from enum builderd.v1.BuildState
 */
export enum BuildState {
  /**
   * @generated from enum value: BUILD_STATE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Job queued
   *
   * @generated from enum value: BUILD_STATE_PENDING = 1;
   */
  PENDING = 1,

  /**
   * Pulling Docker image or source
   *
   * @generated from enum value: BUILD_STATE_PULLING = 2;
   */
  PULLING = 2,

  /**
   * Extracting/preparing source
   *
   * @generated from enum value: BUILD_STATE_EXTRACTING = 3;
   */
  EXTRACTING = 3,

  /**
   * Building rootfs
   *
   * @generated from enum value: BUILD_STATE_BUILDING = 4;
   */
  BUILDING = 4,

  /**
   * Applying optimizations
   *
   * @generated from enum value: BUILD_STATE_OPTIMIZING = 5;
   */
  OPTIMIZING = 5,

  /**
   * Build successful
   *
   * @generated from enum value: BUILD_STATE_COMPLETED = 6;
   */
  COMPLETED = 6,

  /**
   * Build failed
   *
   * @generated from enum value: BUILD_STATE_FAILED = 7;
   */
  FAILED = 7,

  /**
   * Build cancelled
   *
   * @generated from enum value: BUILD_STATE_CANCELLED = 8;
   */
  CANCELLED = 8,

  /**
   * Cleaning up resources
   *
   * @generated from enum value: BUILD_STATE_CLEANING = 9;
   */
  CLEANING = 9,
}

/**
 * Describes the enum builderd.v1.BuildState.
 */
export const BuildStateSchema: GenEnum<BuildState> =
  /*@__PURE__*/
  enumDesc(file_builderd_v1_builder, 0);

/**
 * Tenant service tiers
 *
 * @generated from enum builderd.v1.TenantTier
 */
export enum TenantTier {
  /**
   * @generated from enum value: TENANT_TIER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Limited resources
   *
   * @generated from enum value: TENANT_TIER_FREE = 1;
   */
  FREE = 1,

  /**
   * Standard resources
   *
   * @generated from enum value: TENANT_TIER_PRO = 2;
   */
  PRO = 2,

  /**
   * Higher limits + isolation
   *
   * @generated from enum value: TENANT_TIER_ENTERPRISE = 3;
   */
  ENTERPRISE = 3,

  /**
   * Dedicated infrastructure
   *
   * @generated from enum value: TENANT_TIER_DEDICATED = 4;
   */
  DEDICATED = 4,
}

/**
 * Describes the enum builderd.v1.TenantTier.
 */
export const TenantTierSchema: GenEnum<TenantTier> =
  /*@__PURE__*/
  enumDesc(file_builderd_v1_builder, 1);

/**
 * Init process strategies for microVMs
 *
 * @generated from enum builderd.v1.InitStrategy
 */
export enum InitStrategy {
  /**
   * @generated from enum value: INIT_STRATEGY_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Use tini as init (recommended)
   *
   * @generated from enum value: INIT_STRATEGY_TINI = 1;
   */
  TINI = 1,

  /**
   * Direct exec (risky)
   *
   * @generated from enum value: INIT_STRATEGY_DIRECT = 2;
   */
  DIRECT = 2,

  /**
   * Custom init script
   *
   * @generated from enum value: INIT_STRATEGY_CUSTOM = 3;
   */
  CUSTOM = 3,
}

/**
 * Describes the enum builderd.v1.InitStrategy.
 */
export const InitStrategySchema: GenEnum<InitStrategy> =
  /*@__PURE__*/
  enumDesc(file_builderd_v1_builder, 2);

/**
 * BuilderService provides multi-tenant build execution for various source types
 *
 * @generated from service builderd.v1.BuilderService
 */
export const BuilderService: GenService<{
  /**
   * Create a new build job
   *
   * @generated from rpc builderd.v1.BuilderService.CreateBuild
   */
  createBuild: {
    methodKind: "unary";
    input: typeof CreateBuildRequestSchema;
    output: typeof CreateBuildResponseSchema;
  };
  /**
   * Get build status and progress
   *
   * @generated from rpc builderd.v1.BuilderService.GetBuild
   */
  getBuild: {
    methodKind: "unary";
    input: typeof GetBuildRequestSchema;
    output: typeof GetBuildResponseSchema;
  };
  /**
   * List builds with filtering (tenant-scoped)
   *
   * @generated from rpc builderd.v1.BuilderService.ListBuilds
   */
  listBuilds: {
    methodKind: "unary";
    input: typeof ListBuildsRequestSchema;
    output: typeof ListBuildsResponseSchema;
  };
  /**
   * Cancel a running build
   *
   * @generated from rpc builderd.v1.BuilderService.CancelBuild
   */
  cancelBuild: {
    methodKind: "unary";
    input: typeof CancelBuildRequestSchema;
    output: typeof CancelBuildResponseSchema;
  };
  /**
   * Delete a build and its artifacts
   *
   * @generated from rpc builderd.v1.BuilderService.DeleteBuild
   */
  deleteBuild: {
    methodKind: "unary";
    input: typeof DeleteBuildRequestSchema;
    output: typeof DeleteBuildResponseSchema;
  };
  /**
   * Stream build logs in real-time
   *
   * @generated from rpc builderd.v1.BuilderService.StreamBuildLogs
   */
  streamBuildLogs: {
    methodKind: "server_streaming";
    input: typeof StreamBuildLogsRequestSchema;
    output: typeof StreamBuildLogsResponseSchema;
  };
  /**
   * Get build statistics
   *
   * @generated from rpc builderd.v1.BuilderService.GetBuildStats
   */
  getBuildStats: {
    methodKind: "unary";
    input: typeof GetBuildStatsRequestSchema;
    output: typeof GetBuildStatsResponseSchema;
  };
}> = /*@__PURE__*/ serviceDesc(file_builderd_v1_builder, 0);
