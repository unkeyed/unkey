// @generated by protoc-gen-es v1.2.1 with parameter "target=ts"
// @generated from file proto/key/v1/service.proto (package v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Struct } from "@bufbuild/protobuf";
import { Ratelimit } from "./key_pb.js";

/**
 * @generated from message v1.CreateKeyRequest
 */
export class CreateKeyRequest extends Message<CreateKeyRequest> {
  /**
   * Either api_id or gateway_id must be present
   *
   * @generated from oneof v1.CreateKeyRequest.belongs
   */
  belongs: {
    /**
     * @generated from field: string api_id = 1;
     */
    value: string;
    case: "apiId";
  } | {
    /**
     * @generated from field: string gateway_id = 2;
     */
    value: string;
    case: "gatewayId";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: string workspaceId = 3;
   */
  workspaceId = "";

  /**
   * @generated from field: optional string prefix = 4;
   */
  prefix?: string;

  /**
   * @generated from field: optional int32 byte_length = 5;
   */
  byteLength?: number;

  /**
   * @generated from field: optional string owner_id = 6;
   */
  ownerId?: string;

  /**
   * @generated from field: optional google.protobuf.Struct meta = 7;
   */
  meta?: Struct;

  /**
   * Unix milli timestamp
   *
   * @generated from field: optional int64 expires = 8;
   */
  expires?: bigint;

  /**
   * @generated from field: optional int64 remaining = 9;
   */
  remaining?: bigint;

  /**
   * @generated from field: optional v1.Ratelimit ratelimit = 10;
   */
  ratelimit?: Ratelimit;

  constructor(data?: PartialMessage<CreateKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.CreateKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "api_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "belongs" },
    { no: 2, name: "gateway_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "belongs" },
    { no: 3, name: "workspaceId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "prefix", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "byte_length", kind: "scalar", T: 5 /* ScalarType.INT32 */, opt: true },
    { no: 6, name: "owner_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "meta", kind: "message", T: Struct, opt: true },
    { no: 8, name: "expires", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 9, name: "remaining", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 10, name: "ratelimit", kind: "message", T: Ratelimit, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateKeyRequest {
    return new CreateKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateKeyRequest {
    return new CreateKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateKeyRequest {
    return new CreateKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateKeyRequest | PlainMessage<CreateKeyRequest> | undefined, b: CreateKeyRequest | PlainMessage<CreateKeyRequest> | undefined): boolean {
    return proto3.util.equals(CreateKeyRequest, a, b);
  }
}

/**
 * @generated from message v1.CreateKeyResponse
 */
export class CreateKeyResponse extends Message<CreateKeyResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string key = 2;
   */
  key = "";

  constructor(data?: PartialMessage<CreateKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.CreateKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateKeyResponse {
    return new CreateKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateKeyResponse {
    return new CreateKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateKeyResponse {
    return new CreateKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateKeyResponse | PlainMessage<CreateKeyResponse> | undefined, b: CreateKeyResponse | PlainMessage<CreateKeyResponse> | undefined): boolean {
    return proto3.util.equals(CreateKeyResponse, a, b);
  }
}

/**
 * @generated from message v1.RevokeKeyRequest
 */
export class RevokeKeyRequest extends Message<RevokeKeyRequest> {
  /**
   * @generated from field: string key_id = 1;
   */
  keyId = "";

  constructor(data?: PartialMessage<RevokeKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.RevokeKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RevokeKeyRequest {
    return new RevokeKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RevokeKeyRequest {
    return new RevokeKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RevokeKeyRequest {
    return new RevokeKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RevokeKeyRequest | PlainMessage<RevokeKeyRequest> | undefined, b: RevokeKeyRequest | PlainMessage<RevokeKeyRequest> | undefined): boolean {
    return proto3.util.equals(RevokeKeyRequest, a, b);
  }
}

/**
 * @generated from message v1.RevokeKeyResponse
 */
export class RevokeKeyResponse extends Message<RevokeKeyResponse> {
  constructor(data?: PartialMessage<RevokeKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.RevokeKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RevokeKeyResponse {
    return new RevokeKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RevokeKeyResponse {
    return new RevokeKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RevokeKeyResponse {
    return new RevokeKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RevokeKeyResponse | PlainMessage<RevokeKeyResponse> | undefined, b: RevokeKeyResponse | PlainMessage<RevokeKeyResponse> | undefined): boolean {
    return proto3.util.equals(RevokeKeyResponse, a, b);
  }
}

/**
 * @generated from message v1.VerifyKeyRequest
 */
export class VerifyKeyRequest extends Message<VerifyKeyRequest> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  constructor(data?: PartialMessage<VerifyKeyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.VerifyKeyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyKeyRequest {
    return new VerifyKeyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyKeyRequest {
    return new VerifyKeyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyKeyRequest {
    return new VerifyKeyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyKeyRequest | PlainMessage<VerifyKeyRequest> | undefined, b: VerifyKeyRequest | PlainMessage<VerifyKeyRequest> | undefined): boolean {
    return proto3.util.equals(VerifyKeyRequest, a, b);
  }
}

/**
 * @generated from message v1.RatelimitResponse
 */
export class RatelimitResponse extends Message<RatelimitResponse> {
  /**
   * @generated from field: int64 limit = 1;
   */
  limit = protoInt64.zero;

  /**
   * @generated from field: int64 remaining = 2;
   */
  remaining = protoInt64.zero;

  /**
   * @generated from field: int64 reset = 3;
   */
  reset = protoInt64.zero;

  constructor(data?: PartialMessage<RatelimitResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.RatelimitResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "limit", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "remaining", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "reset", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RatelimitResponse {
    return new RatelimitResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RatelimitResponse {
    return new RatelimitResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RatelimitResponse {
    return new RatelimitResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RatelimitResponse | PlainMessage<RatelimitResponse> | undefined, b: RatelimitResponse | PlainMessage<RatelimitResponse> | undefined): boolean {
    return proto3.util.equals(RatelimitResponse, a, b);
  }
}

/**
 * @generated from message v1.VerifyKeyResponse
 */
export class VerifyKeyResponse extends Message<VerifyKeyResponse> {
  /**
   * @generated from field: bool valid = 1;
   */
  valid = false;

  /**
   * @generated from field: optional string owner_id = 2;
   */
  ownerId?: string;

  /**
   * @generated from field: optional google.protobuf.Struct meta = 3;
   */
  meta?: Struct;

  /**
   * @generated from field: optional int64 remaining = 4;
   */
  remaining?: bigint;

  /**
   * @generated from field: optional v1.RatelimitResponse ratelimit = 5;
   */
  ratelimit?: RatelimitResponse;

  constructor(data?: PartialMessage<VerifyKeyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "v1.VerifyKeyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "valid", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "owner_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "meta", kind: "message", T: Struct, opt: true },
    { no: 4, name: "remaining", kind: "scalar", T: 3 /* ScalarType.INT64 */, opt: true },
    { no: 5, name: "ratelimit", kind: "message", T: RatelimitResponse, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VerifyKeyResponse {
    return new VerifyKeyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VerifyKeyResponse {
    return new VerifyKeyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VerifyKeyResponse {
    return new VerifyKeyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: VerifyKeyResponse | PlainMessage<VerifyKeyResponse> | undefined, b: VerifyKeyResponse | PlainMessage<VerifyKeyResponse> | undefined): boolean {
    return proto3.util.equals(VerifyKeyResponse, a, b);
  }
}

